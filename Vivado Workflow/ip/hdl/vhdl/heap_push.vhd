-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity heap_push is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    current_graph_index_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_index_ce0 : OUT STD_LOGIC;
    current_graph_index_we0 : OUT STD_LOGIC;
    current_graph_index_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_index_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_dist_ce0 : OUT STD_LOGIC;
    current_graph_dist_we0 : OUT STD_LOGIC;
    current_graph_dist_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_flag_ce0 : OUT STD_LOGIC;
    current_graph_flag_we0 : OUT STD_LOGIC;
    current_graph_flag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    row : IN STD_LOGIC_VECTOR (8 downto 0);
    weight : IN STD_LOGIC_VECTOR (31 downto 0);
    index : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of heap_push is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_258_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_reg_398 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_404 : STD_LOGIC_VECTOR (63 downto 0);
    signal current_graph_dist_a_reg_410 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal index_cast_fu_269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_cast_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_reg_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_436 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal idx_2_fu_286_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx_2_reg_444 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_load_reg_465 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_swap_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_swap_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_swap_2_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_swap_2_reg_475 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_482 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_491 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal current_graph_dist_l_6_reg_495 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_reg_506 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_reg_204 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_75_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_83_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_fu_46 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_232_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_236_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_248_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_244_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl1_cast_fu_254_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal idx_cast1_cast_fu_276_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_73_fu_292_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_fu_46_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (tmp_76_reg_482 = ap_const_lv1_0))) then 
                i_fu_46 <= i_swap_2_reg_475;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = tmp_77_fu_346_p2) and (grp_fu_215_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (tmp_76_reg_482 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_85_fu_365_p2)))) then 
                i_fu_46 <= i_swap_reg_470;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0))) then 
                i_fu_46 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idx_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_fu_215_p2 = ap_const_lv1_1))) then 
                idx_reg_204 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_75_fu_307_p2))) then 
                idx_reg_204 <= idx_2_reg_444;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    current_graph_dist_a_reg_410(9 downto 1) <= tmp_s_fu_264_p1(10 - 1 downto 0)(9 downto 1);
                    tmp_reg_398(11 downto 1) <= tmp_fu_258_p2(11 downto 1);
                    tmp_s_reg_404(63 downto 1) <= tmp_s_fu_264_p1(63 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                current_graph_dist_l_6_reg_495 <= current_graph_dist_q0;
                tmp_77_reg_491 <= tmp_77_fu_346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_load_reg_465 <= i_fu_46;
                    i_swap_2_reg_475(31 downto 1) <= i_swap_2_fu_324_p2(31 downto 1);
                    i_swap_reg_470(31 downto 1) <= i_swap_fu_318_p2(31 downto 1);
                tmp_76_reg_482 <= tmp_76_fu_330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                idx_2_reg_444 <= idx_2_fu_286_p2;
                tmp_72_reg_440 <= tmp_72_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                index_cast_reg_422 <= index_cast_fu_269_p1;
                tmp_71_reg_436 <= grp_fu_215_p2;
                    tmp_cast_reg_428(31 downto 1) <= tmp_cast_fu_273_p1(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = tmp_77_fu_346_p2))) then
                tmp_80_reg_506 <= grp_fu_215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp_90_reg_524 <= grp_fu_228_p2;
            end if;
        end if;
    end process;
    tmp_reg_398(0) <= '0';
    tmp_s_reg_404(0) <= '0';
    current_graph_dist_a_reg_410(0) <= '0';
    tmp_cast_reg_428(0) <= '0';
    i_swap_reg_470(0) <= '1';
    i_swap_2_reg_475(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_fu_215_p2, tmp_71_reg_436, tmp_72_fu_280_p2, tmp_72_reg_440, ap_CS_fsm_state3, ap_CS_fsm_state5, tmp_76_fu_330_p2, tmp_76_reg_482, tmp_77_reg_491, tmp_80_reg_506, ap_CS_fsm_state4, tmp_75_fu_307_p2, ap_CS_fsm_state7, tmp_83_fu_360_p2, tmp_85_fu_365_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_fu_215_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = tmp_75_fu_307_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = tmp_76_fu_330_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = tmp_76_reg_482) or (tmp_71_reg_436 = ap_const_lv1_0) or (tmp_72_reg_440 = ap_const_lv1_1) or ((ap_const_lv1_1 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_80_reg_506)) or ((ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (ap_const_lv1_0 = tmp_85_fu_365_p2)) or ((ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (grp_fu_215_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_fu_215_p2, tmp_71_reg_436, tmp_72_reg_440, tmp_76_reg_482, tmp_77_reg_491, tmp_80_reg_506, ap_CS_fsm_state7, tmp_83_fu_360_p2, tmp_85_fu_365_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = tmp_76_reg_482) or (tmp_71_reg_436 = ap_const_lv1_0) or (tmp_72_reg_440 = ap_const_lv1_1) or ((ap_const_lv1_1 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_80_reg_506)) or ((ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (ap_const_lv1_0 = tmp_85_fu_365_p2)) or ((ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (grp_fu_215_p2 = ap_const_lv1_0)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_fu_215_p2, tmp_71_reg_436, tmp_72_reg_440, tmp_76_reg_482, tmp_77_reg_491, tmp_80_reg_506, ap_CS_fsm_state7, tmp_83_fu_360_p2, tmp_85_fu_365_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = tmp_76_reg_482) or (tmp_71_reg_436 = ap_const_lv1_0) or (tmp_72_reg_440 = ap_const_lv1_1) or ((ap_const_lv1_1 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_80_reg_506)) or ((ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (ap_const_lv1_0 = tmp_85_fu_365_p2)) or ((ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (grp_fu_215_p2 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_address0_assign_proc : process(ap_CS_fsm_state1, tmp_s_fu_264_p1, current_graph_dist_a_reg_410, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, tmp_79_fu_341_p1, tmp_82_fu_355_p1, tmp_87_fu_373_p1, ap_CS_fsm_state7, tmp_89_fu_385_p1, tmp_91_fu_392_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_dist_address0 <= tmp_91_fu_392_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_dist_address0 <= tmp_89_fu_385_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            current_graph_dist_address0 <= tmp_87_fu_373_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            current_graph_dist_address0 <= tmp_82_fu_355_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_dist_address0 <= tmp_79_fu_341_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_dist_address0 <= current_graph_dist_a_reg_410;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            current_graph_dist_address0 <= tmp_s_fu_264_p1(10 - 1 downto 0);
        else 
            current_graph_dist_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_dist_ce0 <= ap_const_logic_1;
        else 
            current_graph_dist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_d0_assign_proc : process(current_graph_dist_q0, weight, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_dist_d0 <= current_graph_dist_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            current_graph_dist_d0 <= weight;
        else 
            current_graph_dist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_we0_assign_proc : process(grp_fu_215_p2, tmp_71_reg_436, tmp_72_fu_280_p2, tmp_72_reg_440, ap_CS_fsm_state3, tmp_76_reg_482, tmp_77_reg_491, tmp_80_reg_506, ap_CS_fsm_state7, tmp_83_fu_360_p2, tmp_85_fu_365_p2, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_76_reg_482)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_80_reg_506)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (ap_const_lv1_0 = tmp_85_fu_365_p2)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (grp_fu_215_p2 = ap_const_lv1_0)))) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_dist_we0 <= ap_const_logic_1;
        else 
            current_graph_dist_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_address0_assign_proc : process(tmp_s_reg_404, ap_CS_fsm_state3, ap_CS_fsm_state8, tmp_87_fu_373_p1, ap_CS_fsm_state7, tmp_89_fu_385_p1, tmp_91_fu_392_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_flag_address0 <= tmp_91_fu_392_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_flag_address0 <= tmp_89_fu_385_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            current_graph_flag_address0 <= tmp_87_fu_373_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_flag_address0 <= tmp_s_reg_404(10 - 1 downto 0);
        else 
            current_graph_flag_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_flag_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_flag_ce0 <= ap_const_logic_1;
        else 
            current_graph_flag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_d0_assign_proc : process(current_graph_flag_q0, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_flag_d0 <= current_graph_flag_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            current_graph_flag_d0 <= ap_const_lv32_1;
        else 
            current_graph_flag_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_flag_we0_assign_proc : process(grp_fu_215_p2, tmp_71_reg_436, tmp_72_fu_280_p2, tmp_72_reg_440, ap_CS_fsm_state3, tmp_76_reg_482, tmp_77_reg_491, tmp_80_reg_506, ap_CS_fsm_state7, tmp_83_fu_360_p2, tmp_85_fu_365_p2, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_76_reg_482)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_80_reg_506)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (ap_const_lv1_0 = tmp_85_fu_365_p2)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (grp_fu_215_p2 = ap_const_lv1_0)))) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_flag_we0 <= ap_const_logic_1;
        else 
            current_graph_flag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_address0_assign_proc : process(tmp_s_reg_404, tmp_72_fu_280_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, tmp_74_fu_297_p1, tmp_87_fu_373_p1, ap_CS_fsm_state7, tmp_89_fu_385_p1, tmp_91_fu_392_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_index_address0 <= tmp_91_fu_392_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_index_address0 <= tmp_89_fu_385_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            current_graph_index_address0 <= tmp_87_fu_373_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0))) then 
            current_graph_index_address0 <= tmp_s_reg_404(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_1))) then 
            current_graph_index_address0 <= tmp_74_fu_297_p1(10 - 1 downto 0);
        else 
            current_graph_index_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_ce0_assign_proc : process(tmp_72_fu_280_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_1)) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_index_ce0 <= ap_const_logic_1;
        else 
            current_graph_index_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_d0_assign_proc : process(current_graph_index_q0, index_cast_reg_422, tmp_72_fu_280_p2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_index_d0 <= current_graph_index_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            current_graph_index_d0 <= index_cast_reg_422;
        else 
            current_graph_index_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_we0_assign_proc : process(grp_fu_215_p2, tmp_71_reg_436, tmp_72_fu_280_p2, tmp_72_reg_440, ap_CS_fsm_state3, tmp_76_reg_482, tmp_77_reg_491, tmp_80_reg_506, ap_CS_fsm_state7, tmp_83_fu_360_p2, tmp_85_fu_365_p2, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_72_fu_280_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_76_reg_482)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_80_reg_506)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_0 = tmp_83_fu_360_p2) and (ap_const_lv1_0 = tmp_85_fu_365_p2)) or ((tmp_71_reg_436 = ap_const_lv1_1) and (tmp_72_reg_440 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_77_reg_491) and (ap_const_lv1_1 = tmp_83_fu_360_p2) and (grp_fu_215_p2 = ap_const_lv1_0)))) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_index_we0 <= ap_const_logic_1;
        else 
            current_graph_index_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_215_p2 <= "1" when (signed(current_graph_dist_q0) > signed(weight)) else "0";
    grp_fu_228_p2 <= std_logic_vector(unsigned(i_load_reg_465) + unsigned(tmp_cast_reg_428));
    i_swap_2_fu_324_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(i_swap_fu_318_p2));
    i_swap_fu_318_p2 <= (tmp_26_fu_312_p2 or ap_const_lv32_1);
    idx_2_fu_286_p2 <= std_logic_vector(unsigned(idx_reg_204) + unsigned(ap_const_lv4_1));
    idx_cast1_cast_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_reg_204),12));
        index_cast_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(index),32));

        p_shl1_cast_fu_254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_248_p2),12));

        p_shl_cast_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_236_p3),12));

    p_shl_fu_236_p3 <= (tmp_24_fu_232_p1 & ap_const_lv3_0);
    tmp_24_fu_232_p1 <= row(8 - 1 downto 0);
    tmp_25_fu_248_p2 <= std_logic_vector(shift_left(unsigned(row),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    tmp_26_fu_312_p2 <= std_logic_vector(shift_left(unsigned(i_fu_46),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_72_fu_280_p2 <= "1" when (unsigned(idx_reg_204) < unsigned(ap_const_lv4_A)) else "0";
    tmp_73_fu_292_p2 <= std_logic_vector(unsigned(idx_cast1_cast_fu_276_p1) + unsigned(tmp_reg_398));
        tmp_74_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_fu_292_p2),64));

    tmp_75_fu_307_p2 <= "1" when (current_graph_index_q0 = index_cast_reg_422) else "0";
    tmp_76_fu_330_p2 <= "1" when (signed(i_swap_fu_318_p2) > signed(ap_const_lv32_9)) else "0";
    tmp_77_fu_346_p2 <= "1" when (signed(i_swap_2_reg_475) > signed(ap_const_lv32_9)) else "0";
    tmp_78_fu_336_p2 <= std_logic_vector(unsigned(i_swap_fu_318_p2) + unsigned(tmp_cast_reg_428));
        tmp_79_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_78_fu_336_p2),64));

    tmp_81_fu_351_p2 <= std_logic_vector(unsigned(i_swap_2_reg_475) + unsigned(tmp_cast_reg_428));
        tmp_82_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_81_fu_351_p2),64));

    tmp_83_fu_360_p2 <= "1" when (signed(current_graph_dist_l_6_reg_495) < signed(current_graph_dist_q0)) else "0";
    tmp_85_fu_365_p2 <= "1" when (signed(current_graph_dist_l_6_reg_495) > signed(weight)) else "0";
        tmp_87_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_228_p2),64));

    tmp_88_fu_380_p2 <= std_logic_vector(unsigned(i_fu_46) + unsigned(tmp_cast_reg_428));
        tmp_89_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_88_fu_380_p2),64));

        tmp_91_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_90_reg_524),64));

        tmp_cast_fu_273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_398),32));

    tmp_fu_258_p2 <= std_logic_vector(signed(p_shl_cast_fu_244_p1) + signed(p_shl1_cast_fu_254_p1));
        tmp_s_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_258_p2),64));

end behav;
