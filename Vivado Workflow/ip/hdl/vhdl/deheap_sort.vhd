-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity deheap_sort is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    current_graph_index_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_index_ce0 : OUT STD_LOGIC;
    current_graph_index_we0 : OUT STD_LOGIC;
    current_graph_index_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_index_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_index_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_index_ce1 : OUT STD_LOGIC;
    current_graph_index_we1 : OUT STD_LOGIC;
    current_graph_index_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_index_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_dist_ce0 : OUT STD_LOGIC;
    current_graph_dist_we0 : OUT STD_LOGIC;
    current_graph_dist_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_dist_ce1 : OUT STD_LOGIC;
    current_graph_dist_we1 : OUT STD_LOGIC;
    current_graph_dist_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_flag_ce0 : OUT STD_LOGIC;
    current_graph_flag_we0 : OUT STD_LOGIC;
    current_graph_flag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    current_graph_flag_ce1 : OUT STD_LOGIC;
    current_graph_flag_we1 : OUT STD_LOGIC;
    current_graph_flag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    result_index_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    result_index_ce0 : OUT STD_LOGIC;
    result_index_we0 : OUT STD_LOGIC;
    result_index_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_dist_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    result_dist_ce0 : OUT STD_LOGIC;
    result_dist_we0 : OUT STD_LOGIC;
    result_dist_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of deheap_sort is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_point_fu_273_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal n_point_reg_463 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal current_graph_index_s_reg_468 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond1_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_graph_dist_a_reg_473 : STD_LOGIC_VECTOR (9 downto 0);
    signal current_graph_flag_a_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_92_fu_312_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_92_reg_483 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i_cast_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_cast_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_neighbor_3_fu_332_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_neighbor_3_reg_500 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_94_fu_343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_94_reg_505 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_graph_index_15_reg_511 : STD_LOGIC_VECTOR (9 downto 0);
    signal current_graph_dist_a_14_reg_517 : STD_LOGIC_VECTOR (9 downto 0);
    signal current_graph_flag_a_8_reg_523 : STD_LOGIC_VECTOR (9 downto 0);
    signal temp_3_reg_528 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_cast_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_cast_reg_533 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal swap_3_fu_366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_3_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_19_i_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_reg_545 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_fu_382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_i_reg_549 : STD_LOGIC_VECTOR (63 downto 0);
    signal current_graph_dist_a_15_reg_555 : STD_LOGIC_VECTOR (9 downto 0);
    signal swap_4_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_4_reg_566 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal temp_6_reg_572 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_child_01_i_fu_402_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_child_01_i_reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_i_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_reg_584 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal elt_assign_fu_438_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal elt_assign_reg_599 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal current_graph_index_17_reg_609 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_31_i_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_graph_index_18_reg_615 : STD_LOGIC_VECTOR (9 downto 0);
    signal current_graph_dist_a_19_reg_621 : STD_LOGIC_VECTOR (9 downto 0);
    signal current_graph_flag_a_9_reg_627 : STD_LOGIC_VECTOR (9 downto 0);
    signal current_graph_flag_a_10_reg_632 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_assign_reg_215 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_neighbor_reg_226 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal swap_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_s_fu_305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_i_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_i_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_i_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_i_fu_453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl2_fu_287_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_cast_fu_295_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_fu_279_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_299_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_neighbor_cast1_fu_322_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_93_fu_338_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal size_heap_assign_fu_350_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_fu_377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_i_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_fu_414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_i_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_child_0_left_c_fu_432_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_i_fu_449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_neighbor_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_267_p2 = ap_const_lv1_0))) then 
                i_neighbor_reg_226 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_neighbor_reg_226 <= i_neighbor_3_reg_500;
            end if; 
        end if;
    end process;

    row_assign_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_fu_326_p2 = ap_const_lv1_1))) then 
                row_assign_reg_215 <= n_point_reg_463;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_assign_reg_215 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    swap_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                swap_reg_238 <= elt_assign_reg_599;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                swap_reg_238 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond_fu_326_p2))) then
                current_graph_dist_a_14_reg_517 <= tmp_94_fu_343_p1(10 - 1 downto 0);
                current_graph_flag_a_8_reg_523 <= tmp_94_fu_343_p1(10 - 1 downto 0);
                current_graph_index_15_reg_511 <= tmp_94_fu_343_p1(10 - 1 downto 0);
                    tmp_94_reg_505(9 downto 0) <= tmp_94_fu_343_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_19_i_fu_372_p2 = ap_const_lv1_1))) then
                current_graph_dist_a_15_reg_555 <= tmp_21_i_fu_382_p1(10 - 1 downto 0);
                tmp_21_i_reg_549 <= tmp_21_i_fu_382_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_19_i_reg_545 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_31_i_fu_444_p2))) then
                current_graph_dist_a_19_reg_621 <= tmp_33_i_fu_453_p1(10 - 1 downto 0);
                current_graph_flag_a_10_reg_632 <= tmp_33_i_fu_453_p1(10 - 1 downto 0);
                current_graph_flag_a_9_reg_627 <= tmp_21_i_reg_549(10 - 1 downto 0);
                current_graph_index_17_reg_609 <= tmp_21_i_reg_549(10 - 1 downto 0);
                current_graph_index_18_reg_615 <= tmp_33_i_fu_453_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_267_p2 = ap_const_lv1_0))) then
                    current_graph_dist_a_reg_473(9 downto 1) <= tmp_s_fu_305_p1(10 - 1 downto 0)(9 downto 1);
                    current_graph_flag_a_reg_478(9 downto 1) <= tmp_s_fu_305_p1(10 - 1 downto 0)(9 downto 1);
                    current_graph_index_s_reg_468(9 downto 1) <= tmp_s_fu_305_p1(10 - 1 downto 0)(9 downto 1);
                    tmp_92_reg_483(9 downto 1) <= tmp_92_fu_312_p2(9 downto 1);
                    tmp_i_cast_reg_488(9 downto 1) <= tmp_i_cast_fu_318_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                elt_assign_reg_599 <= elt_assign_fu_438_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_neighbor_3_reg_500 <= i_neighbor_3_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                left_child_01_i_reg_577 <= left_child_01_i_fu_402_p3;
                    swap_4_reg_566(31 downto 1) <= swap_4_fu_397_p2(31 downto 1);
                temp_6_reg_572 <= current_graph_dist_q0;
                tmp_25_i_reg_584 <= tmp_25_i_fu_409_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                n_point_reg_463 <= n_point_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11))) then
                reg_256 <= current_graph_index_q0;
                reg_262 <= current_graph_flag_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    swap_3_reg_539(31 downto 1) <= swap_3_fu_366_p2(31 downto 1);
                tmp_19_i_reg_545 <= tmp_19_i_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                temp_3_reg_528 <= current_graph_dist_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    tmp_126_cast_reg_533(3 downto 0) <= tmp_126_cast_fu_356_p1(3 downto 0);
            end if;
        end if;
    end process;
    current_graph_index_s_reg_468(0) <= '0';
    current_graph_dist_a_reg_473(0) <= '0';
    current_graph_flag_a_reg_478(0) <= '0';
    tmp_92_reg_483(0) <= '1';
    tmp_i_cast_reg_488(0) <= '0';
    tmp_i_cast_reg_488(31 downto 10) <= "0000000000000000000000";
    tmp_94_reg_505(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_126_cast_reg_533(31 downto 4) <= "0000000000000000000000000000";
    swap_3_reg_539(0) <= '1';
    swap_4_reg_566(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_267_p2, ap_CS_fsm_state3, exitcond_fu_326_p2, ap_CS_fsm_state6, tmp_19_i_fu_372_p2, tmp_19_i_reg_545, ap_CS_fsm_state10, tmp_31_i_fu_444_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_267_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_fu_326_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_19_i_fu_372_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and ((ap_const_lv1_0 = tmp_19_i_reg_545) or (ap_const_lv1_1 = tmp_31_i_fu_444_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_267_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_267_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond1_fu_267_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_267_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_address0_assign_proc : process(ap_CS_fsm_state4, current_graph_dist_a_reg_473, ap_CS_fsm_state3, current_graph_dist_a_14_reg_517, ap_CS_fsm_state6, tmp_19_i_reg_545, tmp_21_i_fu_382_p1, ap_CS_fsm_state8, ap_CS_fsm_state10, tmp_31_i_fu_444_p2, tmp_27_i_fu_418_p1, tmp_33_i_fu_453_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and ((ap_const_lv1_0 = tmp_19_i_reg_545) or (ap_const_lv1_1 = tmp_31_i_fu_444_p2)))) then 
            current_graph_dist_address0 <= current_graph_dist_a_14_reg_517;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_19_i_reg_545 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_31_i_fu_444_p2))) then 
            current_graph_dist_address0 <= tmp_33_i_fu_453_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_dist_address0 <= tmp_27_i_fu_418_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            current_graph_dist_address0 <= tmp_21_i_fu_382_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            current_graph_dist_address0 <= current_graph_dist_a_reg_473;
        else 
            current_graph_dist_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state3, tmp_94_fu_343_p1, current_graph_dist_a_14_reg_517, ap_CS_fsm_state5, ap_CS_fsm_state6, current_graph_dist_a_15_reg_555, ap_CS_fsm_state8, current_graph_dist_a_19_reg_621, ap_CS_fsm_state12, tmp_23_i_fu_392_p1, tmp_29_i_fu_427_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            current_graph_dist_address1 <= current_graph_dist_a_19_reg_621;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            current_graph_dist_address1 <= current_graph_dist_a_15_reg_555;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_dist_address1 <= tmp_29_i_fu_427_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            current_graph_dist_address1 <= tmp_23_i_fu_392_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_dist_address1 <= current_graph_dist_a_14_reg_517;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_dist_address1 <= tmp_94_fu_343_p1(10 - 1 downto 0);
        else 
            current_graph_dist_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state6, tmp_19_i_reg_545, ap_CS_fsm_state8, ap_CS_fsm_state10, tmp_31_i_fu_444_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_19_i_reg_545 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_31_i_fu_444_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and ((ap_const_lv1_0 = tmp_19_i_reg_545) or (ap_const_lv1_1 = tmp_31_i_fu_444_p2))))) then 
            current_graph_dist_ce0 <= ap_const_logic_1;
        else 
            current_graph_dist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_ce1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            current_graph_dist_ce1 <= ap_const_logic_1;
        else 
            current_graph_dist_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    current_graph_dist_d0 <= current_graph_dist_q1;

    current_graph_dist_d1_assign_proc : process(current_graph_dist_q0, ap_CS_fsm_state11, temp_3_reg_528, ap_CS_fsm_state5, temp_6_reg_572, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            current_graph_dist_d1 <= temp_6_reg_572;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            current_graph_dist_d1 <= current_graph_dist_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_dist_d1 <= temp_3_reg_528;
        else 
            current_graph_dist_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            current_graph_dist_we0 <= ap_const_logic_1;
        else 
            current_graph_dist_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_we1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            current_graph_dist_we1 <= ap_const_logic_1;
        else 
            current_graph_dist_we1 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state11, current_graph_flag_a_reg_478, ap_CS_fsm_state3, tmp_21_i_reg_549, ap_CS_fsm_state10, current_graph_flag_a_9_reg_627)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            current_graph_flag_address0 <= current_graph_flag_a_9_reg_627;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            current_graph_flag_address0 <= tmp_21_i_reg_549(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            current_graph_flag_address0 <= current_graph_flag_a_reg_478;
        else 
            current_graph_flag_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_flag_address1_assign_proc : process(ap_CS_fsm_state3, tmp_94_fu_343_p1, current_graph_flag_a_8_reg_523, ap_CS_fsm_state5, ap_CS_fsm_state10, current_graph_flag_a_10_reg_632, ap_CS_fsm_state12, tmp_33_i_fu_453_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            current_graph_flag_address1 <= current_graph_flag_a_10_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            current_graph_flag_address1 <= tmp_33_i_fu_453_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_flag_address1 <= current_graph_flag_a_8_reg_523;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_flag_address1 <= tmp_94_fu_343_p1(10 - 1 downto 0);
        else 
            current_graph_flag_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_flag_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            current_graph_flag_ce0 <= ap_const_logic_1;
        else 
            current_graph_flag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            current_graph_flag_ce1 <= ap_const_logic_1;
        else 
            current_graph_flag_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    current_graph_flag_d0 <= current_graph_flag_q1;
    current_graph_flag_d1 <= reg_262;

    current_graph_flag_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            current_graph_flag_we0 <= ap_const_logic_1;
        else 
            current_graph_flag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            current_graph_flag_we1 <= ap_const_logic_1;
        else 
            current_graph_flag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_address0_assign_proc : process(ap_CS_fsm_state4, current_graph_index_s_reg_468, ap_CS_fsm_state3, current_graph_index_15_reg_511, tmp_19_i_reg_545, tmp_21_i_reg_549, ap_CS_fsm_state10, tmp_31_i_fu_444_p2, current_graph_index_18_reg_615, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            current_graph_index_address0 <= current_graph_index_18_reg_615;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((ap_const_lv1_0 = tmp_19_i_reg_545) or (ap_const_lv1_1 = tmp_31_i_fu_444_p2)))) then 
            current_graph_index_address0 <= current_graph_index_15_reg_511;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_19_i_reg_545 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_31_i_fu_444_p2))) then 
            current_graph_index_address0 <= tmp_21_i_reg_549(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            current_graph_index_address0 <= current_graph_index_s_reg_468;
        else 
            current_graph_index_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state3, tmp_94_fu_343_p1, current_graph_index_15_reg_511, ap_CS_fsm_state5, current_graph_index_17_reg_609, ap_CS_fsm_state10, tmp_33_i_fu_453_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            current_graph_index_address1 <= current_graph_index_17_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            current_graph_index_address1 <= tmp_33_i_fu_453_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_index_address1 <= current_graph_index_15_reg_511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_index_address1 <= tmp_94_fu_343_p1(10 - 1 downto 0);
        else 
            current_graph_index_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, tmp_19_i_reg_545, ap_CS_fsm_state10, tmp_31_i_fu_444_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_19_i_reg_545 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_31_i_fu_444_p2)) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state10) and ((ap_const_lv1_0 = tmp_19_i_reg_545) or (ap_const_lv1_1 = tmp_31_i_fu_444_p2))))) then 
            current_graph_index_ce0 <= ap_const_logic_1;
        else 
            current_graph_index_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_ce1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            current_graph_index_ce1 <= ap_const_logic_1;
        else 
            current_graph_index_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_d0_assign_proc : process(current_graph_index_q1, reg_256, ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            current_graph_index_d0 <= reg_256;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            current_graph_index_d0 <= current_graph_index_q1;
        else 
            current_graph_index_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_d1_assign_proc : process(current_graph_index_q1, reg_256, ap_CS_fsm_state11, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            current_graph_index_d1 <= current_graph_index_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_index_d1 <= reg_256;
        else 
            current_graph_index_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            current_graph_index_we0 <= ap_const_logic_1;
        else 
            current_graph_index_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_we1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            current_graph_index_we1 <= ap_const_logic_1;
        else 
            current_graph_index_we1 <= ap_const_logic_0;
        end if; 
    end process;

    elt_assign_fu_438_p3 <= 
        right_child_0_left_c_fu_432_p3 when (tmp_25_i_reg_584(0) = '1') else 
        left_child_01_i_reg_577;
    exitcond1_fu_267_p2 <= "1" when (row_assign_reg_215 = ap_const_lv7_64) else "0";
    exitcond_fu_326_p2 <= "1" when (i_neighbor_reg_226 = ap_const_lv4_A) else "0";
    grp_fu_250_p2 <= "1" when (signed(current_graph_dist_q0) < signed(current_graph_dist_q1)) else "0";
    i_neighbor_3_fu_332_p2 <= std_logic_vector(unsigned(i_neighbor_reg_226) + unsigned(ap_const_lv4_1));
    i_neighbor_cast1_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_neighbor_reg_226),10));
    left_child_01_i_fu_402_p3 <= 
        swap_3_reg_539 when (grp_fu_250_p2(0) = '1') else 
        swap_reg_238;
    n_point_fu_273_p2 <= std_logic_vector(unsigned(row_assign_reg_215) + unsigned(ap_const_lv7_1));
    p_shl2_cast_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_287_p3),10));
    p_shl2_fu_287_p3 <= (row_assign_reg_215 & ap_const_lv1_0);
    p_shl_fu_279_p3 <= (row_assign_reg_215 & ap_const_lv3_0);
    result_dist_address0 <= tmp_94_reg_505(10 - 1 downto 0);

    result_dist_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            result_dist_ce0 <= ap_const_logic_1;
        else 
            result_dist_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    result_dist_d0 <= current_graph_dist_q0;

    result_dist_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            result_dist_we0 <= ap_const_logic_1;
        else 
            result_dist_we0 <= ap_const_logic_0;
        end if; 
    end process;

    result_index_address0 <= tmp_94_reg_505(10 - 1 downto 0);

    result_index_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            result_index_ce0 <= ap_const_logic_1;
        else 
            result_index_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    result_index_d0 <= current_graph_index_q0;

    result_index_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            result_index_we0 <= ap_const_logic_1;
        else 
            result_index_we0 <= ap_const_logic_0;
        end if; 
    end process;

    right_child_0_left_c_fu_432_p3 <= 
        swap_4_reg_566 when (grp_fu_250_p2(0) = '1') else 
        left_child_01_i_reg_577;
    size_heap_assign_fu_350_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(i_neighbor_reg_226));
    swap_3_fu_366_p2 <= (tmp_27_fu_360_p2 or ap_const_lv32_1);
    swap_4_fu_397_p2 <= std_logic_vector(unsigned(swap_3_reg_539) + unsigned(ap_const_lv32_1));
    tmp_126_cast_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_heap_assign_fu_350_p2),32));
    tmp_19_i_fu_372_p2 <= "1" when (signed(swap_3_fu_366_p2) < signed(tmp_126_cast_reg_533)) else "0";
    tmp_20_i_fu_377_p2 <= std_logic_vector(unsigned(swap_reg_238) + unsigned(tmp_i_cast_reg_488));
        tmp_21_i_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_i_fu_377_p2),64));

    tmp_22_i_fu_387_p2 <= std_logic_vector(unsigned(swap_3_fu_366_p2) + unsigned(tmp_i_cast_reg_488));
        tmp_23_i_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_i_fu_387_p2),64));

    tmp_25_i_fu_409_p2 <= "1" when (signed(swap_4_fu_397_p2) < signed(tmp_126_cast_reg_533)) else "0";
    tmp_26_i_fu_414_p2 <= std_logic_vector(unsigned(left_child_01_i_reg_577) + unsigned(tmp_i_cast_reg_488));
    tmp_27_fu_360_p2 <= std_logic_vector(shift_left(unsigned(swap_reg_238),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
        tmp_27_i_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_i_fu_414_p2),64));

    tmp_28_i_fu_423_p2 <= std_logic_vector(unsigned(swap_4_reg_566) + unsigned(tmp_i_cast_reg_488));
        tmp_29_i_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_i_fu_423_p2),64));

    tmp_31_i_fu_444_p2 <= "1" when (elt_assign_reg_599 = swap_reg_238) else "0";
    tmp_32_i_fu_449_p2 <= std_logic_vector(unsigned(elt_assign_reg_599) + unsigned(tmp_i_cast_reg_488));
        tmp_33_i_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_32_i_fu_449_p2),64));

    tmp_92_fu_312_p2 <= std_logic_vector(unsigned(tmp_fu_299_p2) + unsigned(ap_const_lv10_9));
    tmp_93_fu_338_p2 <= std_logic_vector(unsigned(tmp_92_reg_483) - unsigned(i_neighbor_cast1_fu_322_p1));
    tmp_94_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_fu_338_p2),64));
    tmp_fu_299_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_295_p1) + unsigned(p_shl_fu_279_p3));
    tmp_i_cast_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_299_p2),32));
    tmp_s_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_299_p2),64));
end behav;
