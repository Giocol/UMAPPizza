-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity heap_push_candidate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    current_graph_index_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    current_graph_index_ce0 : OUT STD_LOGIC;
    current_graph_index_we0 : OUT STD_LOGIC;
    current_graph_index_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_index_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    current_graph_dist_ce0 : OUT STD_LOGIC;
    current_graph_dist_we0 : OUT STD_LOGIC;
    current_graph_dist_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_dist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    current_graph_flag_ce0 : OUT STD_LOGIC;
    current_graph_flag_we0 : OUT STD_LOGIC;
    current_graph_flag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_graph_flag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    row : IN STD_LOGIC_VECTOR (31 downto 0);
    weight : IN STD_LOGIC_VECTOR (0 downto 0);
    index : IN STD_LOGIC_VECTOR (31 downto 0);
    flag : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of heap_push_candidate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_393 : STD_LOGIC_VECTOR (63 downto 0);
    signal current_graph_dist_a_reg_399 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal weight_cast_fu_257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_cast_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_426 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal idx_1_fu_272_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal idx_1_reg_430 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_load_reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_swap_fu_304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_swap_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_swap_1_fu_310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_swap_1_reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_468 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_477 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal current_graph_dist_l_3_reg_481 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_492 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_reg_207 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_54_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_fu_359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_62_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_fu_44 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_218_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_234_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_cast1_fu_262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_218_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (tmp_55_reg_468 = ap_const_lv1_0))) then 
                i_fu_44 <= i_swap_1_reg_461;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = tmp_56_fu_332_p2) and (grp_fu_218_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (tmp_55_reg_468 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_64_fu_351_p2)))) then 
                i_fu_44 <= i_swap_reg_456;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0))) then 
                i_fu_44 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idx_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_fu_218_p2 = ap_const_lv1_1))) then 
                idx_reg_207 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_54_fu_293_p2))) then 
                idx_reg_207 <= idx_1_reg_430;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    current_graph_dist_a_reg_399(10 downto 2) <= tmp_s_fu_252_p1(11 - 1 downto 0)(10 downto 2);
                    tmp_reg_384(31 downto 2) <= tmp_fu_246_p2(31 downto 2);
                    tmp_s_reg_393(63 downto 2) <= tmp_s_fu_252_p1(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                current_graph_dist_l_3_reg_481 <= current_graph_dist_q0;
                tmp_56_reg_477 <= tmp_56_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_load_reg_451 <= i_fu_44;
                    i_swap_1_reg_461(31 downto 1) <= i_swap_1_fu_310_p2(31 downto 1);
                    i_swap_reg_456(31 downto 1) <= i_swap_fu_304_p2(31 downto 1);
                tmp_55_reg_468 <= tmp_55_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                idx_1_reg_430 <= idx_1_fu_272_p2;
                tmp_51_reg_426 <= tmp_51_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                tmp_50_reg_422 <= grp_fu_218_p2;
                    weight_cast_reg_415(0) <= weight_cast_fu_257_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = tmp_56_fu_332_p2))) then
                tmp_59_reg_492 <= grp_fu_218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp_69_reg_510 <= grp_fu_230_p2;
            end if;
        end if;
    end process;
    tmp_reg_384(1 downto 0) <= "00";
    tmp_s_reg_393(1 downto 0) <= "00";
    current_graph_dist_a_reg_399(1 downto 0) <= "00";
    weight_cast_reg_415(31 downto 1) <= "0000000000000000000000000000000";
    i_swap_reg_456(0) <= '1';
    i_swap_1_reg_461(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_fu_218_p2, tmp_50_reg_422, tmp_51_fu_266_p2, tmp_51_reg_426, ap_CS_fsm_state3, ap_CS_fsm_state5, tmp_55_fu_316_p2, tmp_55_reg_468, tmp_56_reg_477, tmp_59_reg_492, ap_CS_fsm_state4, tmp_54_fu_293_p2, ap_CS_fsm_state7, tmp_62_fu_346_p2, tmp_64_fu_351_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_fu_218_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = tmp_54_fu_293_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = tmp_55_fu_316_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = tmp_55_reg_468) or (tmp_50_reg_422 = ap_const_lv1_0) or (tmp_51_reg_426 = ap_const_lv1_1) or ((ap_const_lv1_1 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_59_reg_492)) or ((ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (ap_const_lv1_0 = tmp_64_fu_351_p2)) or ((ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (grp_fu_218_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_fu_218_p2, tmp_50_reg_422, tmp_51_reg_426, tmp_55_reg_468, tmp_56_reg_477, tmp_59_reg_492, ap_CS_fsm_state7, tmp_62_fu_346_p2, tmp_64_fu_351_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = tmp_55_reg_468) or (tmp_50_reg_422 = ap_const_lv1_0) or (tmp_51_reg_426 = ap_const_lv1_1) or ((ap_const_lv1_1 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_59_reg_492)) or ((ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (ap_const_lv1_0 = tmp_64_fu_351_p2)) or ((ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (grp_fu_218_p2 = ap_const_lv1_0)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_fu_218_p2, tmp_50_reg_422, tmp_51_reg_426, tmp_55_reg_468, tmp_56_reg_477, tmp_59_reg_492, ap_CS_fsm_state7, tmp_62_fu_346_p2, tmp_64_fu_351_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = tmp_55_reg_468) or (tmp_50_reg_422 = ap_const_lv1_0) or (tmp_51_reg_426 = ap_const_lv1_1) or ((ap_const_lv1_1 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_59_reg_492)) or ((ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (ap_const_lv1_0 = tmp_64_fu_351_p2)) or ((ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (grp_fu_218_p2 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_address0_assign_proc : process(ap_CS_fsm_state1, tmp_s_fu_252_p1, current_graph_dist_a_reg_399, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, tmp_58_fu_327_p1, tmp_61_fu_341_p1, tmp_66_fu_359_p1, ap_CS_fsm_state7, tmp_68_fu_371_p1, tmp_70_fu_378_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_dist_address0 <= tmp_70_fu_378_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_dist_address0 <= tmp_68_fu_371_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            current_graph_dist_address0 <= tmp_66_fu_359_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            current_graph_dist_address0 <= tmp_61_fu_341_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_graph_dist_address0 <= tmp_58_fu_327_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_dist_address0 <= current_graph_dist_a_reg_399;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            current_graph_dist_address0 <= tmp_s_fu_252_p1(11 - 1 downto 0);
        else 
            current_graph_dist_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_dist_ce0 <= ap_const_logic_1;
        else 
            current_graph_dist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_dist_d0_assign_proc : process(current_graph_dist_q0, weight_cast_reg_415, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_dist_d0 <= current_graph_dist_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            current_graph_dist_d0 <= weight_cast_reg_415;
        else 
            current_graph_dist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_dist_we0_assign_proc : process(grp_fu_218_p2, tmp_50_reg_422, tmp_51_fu_266_p2, tmp_51_reg_426, ap_CS_fsm_state3, tmp_55_reg_468, tmp_56_reg_477, tmp_59_reg_492, ap_CS_fsm_state7, tmp_62_fu_346_p2, tmp_64_fu_351_p2, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_55_reg_468)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_59_reg_492)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (ap_const_lv1_0 = tmp_64_fu_351_p2)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (grp_fu_218_p2 = ap_const_lv1_0)))) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_dist_we0 <= ap_const_logic_1;
        else 
            current_graph_dist_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_address0_assign_proc : process(tmp_s_reg_393, ap_CS_fsm_state3, ap_CS_fsm_state8, tmp_66_fu_359_p1, ap_CS_fsm_state7, tmp_68_fu_371_p1, tmp_70_fu_378_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_flag_address0 <= tmp_70_fu_378_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_flag_address0 <= tmp_68_fu_371_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            current_graph_flag_address0 <= tmp_66_fu_359_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_graph_flag_address0 <= tmp_s_reg_393(11 - 1 downto 0);
        else 
            current_graph_flag_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    current_graph_flag_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_flag_ce0 <= ap_const_logic_1;
        else 
            current_graph_flag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_flag_d0_assign_proc : process(current_graph_flag_q0, flag, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_flag_d0 <= current_graph_flag_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            current_graph_flag_d0 <= flag;
        else 
            current_graph_flag_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_flag_we0_assign_proc : process(grp_fu_218_p2, tmp_50_reg_422, tmp_51_fu_266_p2, tmp_51_reg_426, ap_CS_fsm_state3, tmp_55_reg_468, tmp_56_reg_477, tmp_59_reg_492, ap_CS_fsm_state7, tmp_62_fu_346_p2, tmp_64_fu_351_p2, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_55_reg_468)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_59_reg_492)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (ap_const_lv1_0 = tmp_64_fu_351_p2)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (grp_fu_218_p2 = ap_const_lv1_0)))) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_flag_we0 <= ap_const_logic_1;
        else 
            current_graph_flag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_address0_assign_proc : process(tmp_s_reg_393, tmp_51_fu_266_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, tmp_53_fu_283_p1, tmp_66_fu_359_p1, ap_CS_fsm_state7, tmp_68_fu_371_p1, tmp_70_fu_378_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_index_address0 <= tmp_70_fu_378_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            current_graph_index_address0 <= tmp_68_fu_371_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            current_graph_index_address0 <= tmp_66_fu_359_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0))) then 
            current_graph_index_address0 <= tmp_s_reg_393(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_1))) then 
            current_graph_index_address0 <= tmp_53_fu_283_p1(11 - 1 downto 0);
        else 
            current_graph_index_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_ce0_assign_proc : process(tmp_51_fu_266_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_1)) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_index_ce0 <= ap_const_logic_1;
        else 
            current_graph_index_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    current_graph_index_d0_assign_proc : process(current_graph_index_q0, index, tmp_51_fu_266_p2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_graph_index_d0 <= current_graph_index_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            current_graph_index_d0 <= index;
        else 
            current_graph_index_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    current_graph_index_we0_assign_proc : process(grp_fu_218_p2, tmp_50_reg_422, tmp_51_fu_266_p2, tmp_51_reg_426, ap_CS_fsm_state3, tmp_55_reg_468, tmp_56_reg_477, tmp_59_reg_492, ap_CS_fsm_state7, tmp_62_fu_346_p2, tmp_64_fu_351_p2, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_51_fu_266_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_55_reg_468)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_1 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_59_reg_492)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_0 = tmp_62_fu_346_p2) and (ap_const_lv1_0 = tmp_64_fu_351_p2)) or ((tmp_50_reg_422 = ap_const_lv1_1) and (tmp_51_reg_426 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_56_reg_477) and (ap_const_lv1_1 = tmp_62_fu_346_p2) and (grp_fu_218_p2 = ap_const_lv1_0)))) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            current_graph_index_we0 <= ap_const_logic_1;
        else 
            current_graph_index_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_218_p1_assign_proc : process(ap_CS_fsm_state2, weight_cast_fu_257_p1, weight_cast_reg_415, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_fu_218_p1 <= weight_cast_reg_415;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_218_p1 <= weight_cast_fu_257_p1;
        else 
            grp_fu_218_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_218_p2 <= "1" when (signed(current_graph_dist_q0) > signed(grp_fu_218_p1)) else "0";
    grp_fu_230_p2 <= std_logic_vector(unsigned(i_load_reg_451) + unsigned(tmp_reg_384));
    i_swap_1_fu_310_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(i_swap_fu_304_p2));
    i_swap_fu_304_p2 <= (tmp_23_fu_298_p2 or ap_const_lv32_1);
    idx_1_fu_272_p2 <= std_logic_vector(unsigned(idx_reg_207) + unsigned(ap_const_lv5_1));
    idx_cast1_fu_262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_reg_207),32));
    tmp_21_fu_234_p2 <= std_logic_vector(shift_left(unsigned(row),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    tmp_22_fu_240_p2 <= std_logic_vector(shift_left(unsigned(row),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_23_fu_298_p2 <= std_logic_vector(shift_left(unsigned(i_fu_44),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_51_fu_266_p2 <= "1" when (unsigned(idx_reg_207) < unsigned(ap_const_lv5_14)) else "0";
    tmp_52_fu_278_p2 <= std_logic_vector(unsigned(idx_cast1_fu_262_p1) + unsigned(tmp_reg_384));
        tmp_53_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_fu_278_p2),64));

    tmp_54_fu_293_p2 <= "1" when (current_graph_index_q0 = index) else "0";
    tmp_55_fu_316_p2 <= "1" when (signed(i_swap_fu_304_p2) > signed(ap_const_lv32_13)) else "0";
    tmp_56_fu_332_p2 <= "1" when (signed(i_swap_1_reg_461) > signed(ap_const_lv32_13)) else "0";
    tmp_57_fu_322_p2 <= std_logic_vector(unsigned(i_swap_fu_304_p2) + unsigned(tmp_reg_384));
        tmp_58_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_57_fu_322_p2),64));

    tmp_60_fu_337_p2 <= std_logic_vector(unsigned(i_swap_1_reg_461) + unsigned(tmp_reg_384));
        tmp_61_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_60_fu_337_p2),64));

    tmp_62_fu_346_p2 <= "1" when (signed(current_graph_dist_l_3_reg_481) < signed(current_graph_dist_q0)) else "0";
    tmp_64_fu_351_p2 <= "1" when (signed(current_graph_dist_l_3_reg_481) > signed(weight_cast_reg_415)) else "0";
        tmp_66_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_230_p2),64));

    tmp_67_fu_366_p2 <= std_logic_vector(unsigned(i_fu_44) + unsigned(tmp_reg_384));
        tmp_68_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_fu_366_p2),64));

        tmp_70_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_69_reg_510),64));

    tmp_fu_246_p2 <= std_logic_vector(unsigned(tmp_21_fu_234_p2) + unsigned(tmp_22_fu_240_p2));
        tmp_s_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_246_p2),64));

    weight_cast_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(weight),32));
end behav;
