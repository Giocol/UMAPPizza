// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module heap_push (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        current_graph_index_address0,
        current_graph_index_ce0,
        current_graph_index_we0,
        current_graph_index_d0,
        current_graph_index_q0,
        current_graph_dist_address0,
        current_graph_dist_ce0,
        current_graph_dist_we0,
        current_graph_dist_d0,
        current_graph_dist_q0,
        current_graph_flag_address0,
        current_graph_flag_ce0,
        current_graph_flag_we0,
        current_graph_flag_d0,
        current_graph_flag_q0,
        row,
        weight,
        index
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] current_graph_index_address0;
output   current_graph_index_ce0;
output   current_graph_index_we0;
output  [31:0] current_graph_index_d0;
input  [31:0] current_graph_index_q0;
output  [9:0] current_graph_dist_address0;
output   current_graph_dist_ce0;
output   current_graph_dist_we0;
output  [31:0] current_graph_dist_d0;
input  [31:0] current_graph_dist_q0;
output  [9:0] current_graph_flag_address0;
output   current_graph_flag_ce0;
output   current_graph_flag_we0;
output  [31:0] current_graph_flag_d0;
input  [31:0] current_graph_flag_q0;
input  [8:0] row;
input  [31:0] weight;
input  [7:0] index;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] current_graph_index_address0;
reg current_graph_index_ce0;
reg current_graph_index_we0;
reg[31:0] current_graph_index_d0;
reg[9:0] current_graph_dist_address0;
reg current_graph_dist_ce0;
reg current_graph_dist_we0;
reg[31:0] current_graph_dist_d0;
reg[9:0] current_graph_flag_address0;
reg current_graph_flag_ce0;
reg current_graph_flag_we0;
reg[31:0] current_graph_flag_d0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [11:0] tmp_fu_258_p2;
reg   [11:0] tmp_reg_398;
wire  signed [63:0] tmp_s_fu_264_p1;
reg  signed [63:0] tmp_s_reg_404;
reg   [9:0] current_graph_dist_a_reg_410;
wire    ap_CS_fsm_state2;
wire  signed [31:0] index_cast_fu_269_p1;
reg  signed [31:0] index_cast_reg_422;
wire  signed [31:0] tmp_cast_fu_273_p1;
reg  signed [31:0] tmp_cast_reg_428;
wire   [0:0] grp_fu_215_p2;
reg   [0:0] tmp_71_reg_436;
wire   [0:0] tmp_72_fu_280_p2;
reg   [0:0] tmp_72_reg_440;
wire    ap_CS_fsm_state3;
wire   [3:0] idx_2_fu_286_p2;
reg   [3:0] idx_2_reg_444;
reg   [31:0] i_load_reg_465;
wire    ap_CS_fsm_state5;
wire   [31:0] i_swap_fu_318_p2;
reg   [31:0] i_swap_reg_470;
wire   [31:0] i_swap_2_fu_324_p2;
reg   [31:0] i_swap_2_reg_475;
wire   [0:0] tmp_76_fu_330_p2;
reg   [0:0] tmp_76_reg_482;
wire   [0:0] tmp_77_fu_346_p2;
reg   [0:0] tmp_77_reg_491;
wire    ap_CS_fsm_state6;
reg   [31:0] current_graph_dist_l_6_reg_495;
reg   [0:0] tmp_80_reg_506;
wire    ap_CS_fsm_state8;
wire   [31:0] grp_fu_228_p2;
reg   [31:0] tmp_90_reg_524;
reg   [3:0] idx_reg_204;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_75_fu_307_p2;
wire  signed [63:0] tmp_74_fu_297_p1;
wire  signed [63:0] tmp_79_fu_341_p1;
wire  signed [63:0] tmp_82_fu_355_p1;
wire  signed [63:0] tmp_87_fu_373_p1;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_83_fu_360_p2;
wire   [0:0] tmp_85_fu_365_p2;
wire  signed [63:0] tmp_89_fu_385_p1;
wire  signed [63:0] tmp_91_fu_392_p1;
wire    ap_CS_fsm_state9;
reg   [31:0] i_fu_46;
wire   [7:0] tmp_24_fu_232_p1;
wire   [10:0] p_shl_fu_236_p3;
wire   [8:0] tmp_25_fu_248_p2;
wire  signed [11:0] p_shl_cast_fu_244_p1;
wire  signed [11:0] p_shl1_cast_fu_254_p1;
wire   [11:0] idx_cast1_cast_fu_276_p1;
wire   [11:0] tmp_73_fu_292_p2;
wire   [31:0] tmp_26_fu_312_p2;
wire   [31:0] tmp_78_fu_336_p2;
wire   [31:0] tmp_81_fu_351_p2;
wire   [31:0] tmp_88_fu_380_p2;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (tmp_76_reg_482 == 1'd0))) begin
        i_fu_46 <= i_swap_2_reg_475;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (1'd1 == tmp_77_fu_346_p2) & (grp_fu_215_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (tmp_76_reg_482 == 1'd0) & (1'd1 == tmp_85_fu_365_p2)))) begin
        i_fu_46 <= i_swap_reg_470;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0))) begin
        i_fu_46 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_215_p2 == 1'd1))) begin
        idx_reg_204 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_75_fu_307_p2))) begin
        idx_reg_204 <= idx_2_reg_444;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        current_graph_dist_a_reg_410[9 : 1] <= tmp_s_fu_264_p1[9 : 1];
        tmp_reg_398[11 : 1] <= tmp_fu_258_p2[11 : 1];
        tmp_s_reg_404[63 : 1] <= tmp_s_fu_264_p1[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_dist_l_6_reg_495 <= current_graph_dist_q0;
        tmp_77_reg_491 <= tmp_77_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_load_reg_465 <= i_fu_46;
        i_swap_2_reg_475[31 : 1] <= i_swap_2_fu_324_p2[31 : 1];
        i_swap_reg_470[31 : 1] <= i_swap_fu_318_p2[31 : 1];
        tmp_76_reg_482 <= tmp_76_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        idx_2_reg_444 <= idx_2_fu_286_p2;
        tmp_72_reg_440 <= tmp_72_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        index_cast_reg_422 <= index_cast_fu_269_p1;
        tmp_71_reg_436 <= grp_fu_215_p2;
        tmp_cast_reg_428[31 : 1] <= tmp_cast_fu_273_p1[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == tmp_77_fu_346_p2))) begin
        tmp_80_reg_506 <= grp_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_90_reg_524 <= grp_fu_228_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state7) & ((1'd1 == tmp_76_reg_482) | (tmp_71_reg_436 == 1'd0) | (tmp_72_reg_440 == 1'd1) | ((1'd1 == tmp_77_reg_491) & (1'd0 == tmp_80_reg_506)) | ((1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (1'd0 == tmp_85_fu_365_p2)) | ((1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (grp_fu_215_p2 == 1'd0)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((1'd1 == tmp_76_reg_482) | (tmp_71_reg_436 == 1'd0) | (tmp_72_reg_440 == 1'd1) | ((1'd1 == tmp_77_reg_491) & (1'd0 == tmp_80_reg_506)) | ((1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (1'd0 == tmp_85_fu_365_p2)) | ((1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (grp_fu_215_p2 == 1'd0))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        current_graph_dist_address0 = tmp_91_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_graph_dist_address0 = tmp_89_fu_385_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_dist_address0 = tmp_87_fu_373_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_dist_address0 = tmp_82_fu_355_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_dist_address0 = tmp_79_fu_341_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_dist_address0 = current_graph_dist_a_reg_410;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        current_graph_dist_address0 = tmp_s_fu_264_p1;
    end else begin
        current_graph_dist_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        current_graph_dist_ce0 = 1'b1;
    end else begin
        current_graph_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        current_graph_dist_d0 = current_graph_dist_q0;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7))) begin
        current_graph_dist_d0 = weight;
    end else begin
        current_graph_dist_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd1 == tmp_76_reg_482)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd1 == tmp_77_reg_491) & (1'd0 == tmp_80_reg_506)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (1'd0 == tmp_85_fu_365_p2)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (grp_fu_215_p2 == 1'd0)))) | (1'b1 == ap_CS_fsm_state9))) begin
        current_graph_dist_we0 = 1'b1;
    end else begin
        current_graph_dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        current_graph_flag_address0 = tmp_91_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_graph_flag_address0 = tmp_89_fu_385_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_flag_address0 = tmp_87_fu_373_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_flag_address0 = tmp_s_reg_404;
    end else begin
        current_graph_flag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        current_graph_flag_ce0 = 1'b1;
    end else begin
        current_graph_flag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        current_graph_flag_d0 = current_graph_flag_q0;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7))) begin
        current_graph_flag_d0 = 32'd1;
    end else begin
        current_graph_flag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd1 == tmp_76_reg_482)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd1 == tmp_77_reg_491) & (1'd0 == tmp_80_reg_506)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (1'd0 == tmp_85_fu_365_p2)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (grp_fu_215_p2 == 1'd0)))) | (1'b1 == ap_CS_fsm_state9))) begin
        current_graph_flag_we0 = 1'b1;
    end else begin
        current_graph_flag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        current_graph_index_address0 = tmp_91_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_graph_index_address0 = tmp_89_fu_385_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_index_address0 = tmp_87_fu_373_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0))) begin
        current_graph_index_address0 = tmp_s_reg_404;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd1))) begin
        current_graph_index_address0 = tmp_74_fu_297_p1;
    end else begin
        current_graph_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0)) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        current_graph_index_ce0 = 1'b1;
    end else begin
        current_graph_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        current_graph_index_d0 = current_graph_index_q0;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0)) | (1'b1 == ap_CS_fsm_state7))) begin
        current_graph_index_d0 = index_cast_reg_422;
    end else begin
        current_graph_index_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd1 == tmp_76_reg_482)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd1 == tmp_77_reg_491) & (1'd0 == tmp_80_reg_506)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (1'd0 == tmp_85_fu_365_p2)) | ((tmp_71_reg_436 == 1'd1) & (tmp_72_reg_440 == 1'd0) & (1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (grp_fu_215_p2 == 1'd0)))) | (1'b1 == ap_CS_fsm_state9))) begin
        current_graph_index_we0 = 1'b1;
    end else begin
        current_graph_index_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_215_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_72_fu_280_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == tmp_75_fu_307_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == tmp_76_fu_330_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((1'd1 == tmp_76_reg_482) | (tmp_71_reg_436 == 1'd0) | (tmp_72_reg_440 == 1'd1) | ((1'd1 == tmp_77_reg_491) & (1'd0 == tmp_80_reg_506)) | ((1'd0 == tmp_77_reg_491) & (1'd0 == tmp_83_fu_360_p2) & (1'd0 == tmp_85_fu_365_p2)) | ((1'd0 == tmp_77_reg_491) & (1'd1 == tmp_83_fu_360_p2) & (grp_fu_215_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_215_p2 = (($signed(current_graph_dist_q0) > $signed(weight)) ? 1'b1 : 1'b0);

assign grp_fu_228_p2 = ($signed(i_load_reg_465) + $signed(tmp_cast_reg_428));

assign i_swap_2_fu_324_p2 = (32'd1 + i_swap_fu_318_p2);

assign i_swap_fu_318_p2 = (tmp_26_fu_312_p2 | 32'd1);

assign idx_2_fu_286_p2 = (idx_reg_204 + 4'd1);

assign idx_cast1_cast_fu_276_p1 = idx_reg_204;

assign index_cast_fu_269_p1 = $signed(index);

assign p_shl1_cast_fu_254_p1 = $signed(tmp_25_fu_248_p2);

assign p_shl_cast_fu_244_p1 = $signed(p_shl_fu_236_p3);

assign p_shl_fu_236_p3 = {{tmp_24_fu_232_p1}, {3'd0}};

assign tmp_24_fu_232_p1 = row[7:0];

assign tmp_25_fu_248_p2 = row << 9'd1;

assign tmp_26_fu_312_p2 = i_fu_46 << 32'd1;

assign tmp_72_fu_280_p2 = ((idx_reg_204 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_73_fu_292_p2 = (idx_cast1_cast_fu_276_p1 + tmp_reg_398);

assign tmp_74_fu_297_p1 = $signed(tmp_73_fu_292_p2);

assign tmp_75_fu_307_p2 = ((current_graph_index_q0 == index_cast_reg_422) ? 1'b1 : 1'b0);

assign tmp_76_fu_330_p2 = (($signed(i_swap_fu_318_p2) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_77_fu_346_p2 = (($signed(i_swap_2_reg_475) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_78_fu_336_p2 = ($signed(i_swap_fu_318_p2) + $signed(tmp_cast_reg_428));

assign tmp_79_fu_341_p1 = $signed(tmp_78_fu_336_p2);

assign tmp_81_fu_351_p2 = ($signed(i_swap_2_reg_475) + $signed(tmp_cast_reg_428));

assign tmp_82_fu_355_p1 = $signed(tmp_81_fu_351_p2);

assign tmp_83_fu_360_p2 = (($signed(current_graph_dist_l_6_reg_495) < $signed(current_graph_dist_q0)) ? 1'b1 : 1'b0);

assign tmp_85_fu_365_p2 = (($signed(current_graph_dist_l_6_reg_495) > $signed(weight)) ? 1'b1 : 1'b0);

assign tmp_87_fu_373_p1 = $signed(grp_fu_228_p2);

assign tmp_88_fu_380_p2 = ($signed(i_fu_46) + $signed(tmp_cast_reg_428));

assign tmp_89_fu_385_p1 = $signed(tmp_88_fu_380_p2);

assign tmp_91_fu_392_p1 = $signed(tmp_90_reg_524);

assign tmp_cast_fu_273_p1 = $signed(tmp_reg_398);

assign tmp_fu_258_p2 = ($signed(p_shl_cast_fu_244_p1) + $signed(p_shl1_cast_fu_254_p1));

assign tmp_s_fu_264_p1 = $signed(tmp_fu_258_p2);

always @ (posedge ap_clk) begin
    tmp_reg_398[0] <= 1'b0;
    tmp_s_reg_404[0] <= 1'b0;
    current_graph_dist_a_reg_410[0] <= 1'b0;
    tmp_cast_reg_428[0] <= 1'b0;
    i_swap_reg_470[0] <= 1'b1;
    i_swap_2_reg_475[0] <= 1'b0;
end

endmodule //heap_push
