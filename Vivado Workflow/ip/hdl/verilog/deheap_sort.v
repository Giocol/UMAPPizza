// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module deheap_sort (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        current_graph_index_address0,
        current_graph_index_ce0,
        current_graph_index_we0,
        current_graph_index_d0,
        current_graph_index_q0,
        current_graph_index_address1,
        current_graph_index_ce1,
        current_graph_index_we1,
        current_graph_index_d1,
        current_graph_index_q1,
        current_graph_dist_address0,
        current_graph_dist_ce0,
        current_graph_dist_we0,
        current_graph_dist_d0,
        current_graph_dist_q0,
        current_graph_dist_address1,
        current_graph_dist_ce1,
        current_graph_dist_we1,
        current_graph_dist_d1,
        current_graph_dist_q1,
        current_graph_flag_address0,
        current_graph_flag_ce0,
        current_graph_flag_we0,
        current_graph_flag_d0,
        current_graph_flag_q0,
        current_graph_flag_address1,
        current_graph_flag_ce1,
        current_graph_flag_we1,
        current_graph_flag_d1,
        current_graph_flag_q1,
        result_index_address0,
        result_index_ce0,
        result_index_we0,
        result_index_d0,
        result_dist_address0,
        result_dist_ce0,
        result_dist_we0,
        result_dist_d0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] current_graph_index_address0;
output   current_graph_index_ce0;
output   current_graph_index_we0;
output  [31:0] current_graph_index_d0;
input  [31:0] current_graph_index_q0;
output  [9:0] current_graph_index_address1;
output   current_graph_index_ce1;
output   current_graph_index_we1;
output  [31:0] current_graph_index_d1;
input  [31:0] current_graph_index_q1;
output  [9:0] current_graph_dist_address0;
output   current_graph_dist_ce0;
output   current_graph_dist_we0;
output  [31:0] current_graph_dist_d0;
input  [31:0] current_graph_dist_q0;
output  [9:0] current_graph_dist_address1;
output   current_graph_dist_ce1;
output   current_graph_dist_we1;
output  [31:0] current_graph_dist_d1;
input  [31:0] current_graph_dist_q1;
output  [9:0] current_graph_flag_address0;
output   current_graph_flag_ce0;
output   current_graph_flag_we0;
output  [31:0] current_graph_flag_d0;
input  [31:0] current_graph_flag_q0;
output  [9:0] current_graph_flag_address1;
output   current_graph_flag_ce1;
output   current_graph_flag_we1;
output  [31:0] current_graph_flag_d1;
input  [31:0] current_graph_flag_q1;
output  [9:0] result_index_address0;
output   result_index_ce0;
output   result_index_we0;
output  [31:0] result_index_d0;
output  [9:0] result_dist_address0;
output   result_dist_ce0;
output   result_dist_we0;
output  [31:0] result_dist_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] current_graph_index_address0;
reg current_graph_index_ce0;
reg current_graph_index_we0;
reg[31:0] current_graph_index_d0;
reg[9:0] current_graph_index_address1;
reg current_graph_index_ce1;
reg current_graph_index_we1;
reg[31:0] current_graph_index_d1;
reg[9:0] current_graph_dist_address0;
reg current_graph_dist_ce0;
reg current_graph_dist_we0;
reg[9:0] current_graph_dist_address1;
reg current_graph_dist_ce1;
reg current_graph_dist_we1;
reg[31:0] current_graph_dist_d1;
reg[9:0] current_graph_flag_address0;
reg current_graph_flag_ce0;
reg current_graph_flag_we0;
reg[9:0] current_graph_flag_address1;
reg current_graph_flag_ce1;
reg current_graph_flag_we1;
reg result_index_ce0;
reg result_index_we0;
reg result_dist_ce0;
reg result_dist_we0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_256;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_262;
wire   [6:0] n_point_fu_273_p2;
reg   [6:0] n_point_reg_463;
wire    ap_CS_fsm_state2;
reg   [9:0] current_graph_index_s_reg_468;
wire   [0:0] exitcond1_fu_267_p2;
reg   [9:0] current_graph_dist_a_reg_473;
reg   [9:0] current_graph_flag_a_reg_478;
wire   [9:0] tmp_92_fu_312_p2;
reg   [9:0] tmp_92_reg_483;
wire   [31:0] tmp_i_cast_fu_318_p1;
reg   [31:0] tmp_i_cast_reg_488;
wire   [3:0] i_neighbor_3_fu_332_p2;
reg   [3:0] i_neighbor_3_reg_500;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_94_fu_343_p1;
reg   [63:0] tmp_94_reg_505;
wire   [0:0] exitcond_fu_326_p2;
reg   [9:0] current_graph_index_15_reg_511;
reg   [9:0] current_graph_dist_a_14_reg_517;
reg   [9:0] current_graph_flag_a_8_reg_523;
reg   [31:0] temp_3_reg_528;
wire   [31:0] tmp_126_cast_fu_356_p1;
reg   [31:0] tmp_126_cast_reg_533;
wire    ap_CS_fsm_state5;
wire   [31:0] swap_3_fu_366_p2;
reg   [31:0] swap_3_reg_539;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_19_i_fu_372_p2;
reg   [0:0] tmp_19_i_reg_545;
wire  signed [63:0] tmp_21_i_fu_382_p1;
reg  signed [63:0] tmp_21_i_reg_549;
reg   [9:0] current_graph_dist_a_15_reg_555;
wire   [31:0] swap_4_fu_397_p2;
reg   [31:0] swap_4_reg_566;
wire    ap_CS_fsm_state7;
reg   [31:0] temp_6_reg_572;
wire   [31:0] left_child_01_i_fu_402_p3;
reg   [31:0] left_child_01_i_reg_577;
wire   [0:0] tmp_25_i_fu_409_p2;
reg   [0:0] tmp_25_i_reg_584;
wire    ap_CS_fsm_state8;
wire   [31:0] elt_assign_fu_438_p3;
reg   [31:0] elt_assign_reg_599;
wire    ap_CS_fsm_state9;
reg   [9:0] current_graph_index_17_reg_609;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_31_i_fu_444_p2;
reg   [9:0] current_graph_index_18_reg_615;
reg   [9:0] current_graph_dist_a_19_reg_621;
reg   [9:0] current_graph_flag_a_9_reg_627;
reg   [9:0] current_graph_flag_a_10_reg_632;
reg   [6:0] row_assign_reg_215;
reg   [3:0] i_neighbor_reg_226;
wire    ap_CS_fsm_state13;
reg   [31:0] swap_reg_238;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_s_fu_305_p1;
wire  signed [63:0] tmp_23_i_fu_392_p1;
wire  signed [63:0] tmp_27_i_fu_418_p1;
wire  signed [63:0] tmp_29_i_fu_427_p1;
wire  signed [63:0] tmp_33_i_fu_453_p1;
wire   [7:0] p_shl2_fu_287_p3;
wire   [9:0] p_shl2_cast_fu_295_p1;
wire   [9:0] p_shl_fu_279_p3;
wire   [9:0] tmp_fu_299_p2;
wire   [9:0] i_neighbor_cast1_fu_322_p1;
wire   [9:0] tmp_93_fu_338_p2;
wire   [3:0] size_heap_assign_fu_350_p2;
wire   [31:0] tmp_27_fu_360_p2;
wire   [31:0] tmp_20_i_fu_377_p2;
wire   [31:0] tmp_22_i_fu_387_p2;
wire   [0:0] grp_fu_250_p2;
wire   [31:0] tmp_26_i_fu_414_p2;
wire   [31:0] tmp_28_i_fu_423_p2;
wire   [31:0] right_child_0_left_c_fu_432_p3;
wire   [31:0] tmp_32_i_fu_449_p2;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_267_p2 == 1'd0))) begin
        i_neighbor_reg_226 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i_neighbor_reg_226 <= i_neighbor_3_reg_500;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_326_p2 == 1'd1))) begin
        row_assign_reg_215 <= n_point_reg_463;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_assign_reg_215 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        swap_reg_238 <= elt_assign_reg_599;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        swap_reg_238 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond_fu_326_p2))) begin
        current_graph_dist_a_14_reg_517 <= tmp_94_fu_343_p1;
        current_graph_flag_a_8_reg_523 <= tmp_94_fu_343_p1;
        current_graph_index_15_reg_511 <= tmp_94_fu_343_p1;
        tmp_94_reg_505[9 : 0] <= tmp_94_fu_343_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_19_i_fu_372_p2 == 1'd1))) begin
        current_graph_dist_a_15_reg_555 <= tmp_21_i_fu_382_p1;
        tmp_21_i_reg_549 <= tmp_21_i_fu_382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_19_i_reg_545 == 1'd1) & (1'd0 == tmp_31_i_fu_444_p2))) begin
        current_graph_dist_a_19_reg_621 <= tmp_33_i_fu_453_p1;
        current_graph_flag_a_10_reg_632 <= tmp_33_i_fu_453_p1;
        current_graph_flag_a_9_reg_627 <= tmp_21_i_reg_549;
        current_graph_index_17_reg_609 <= tmp_21_i_reg_549;
        current_graph_index_18_reg_615 <= tmp_33_i_fu_453_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_267_p2 == 1'd0))) begin
        current_graph_dist_a_reg_473[9 : 1] <= tmp_s_fu_305_p1[9 : 1];
        current_graph_flag_a_reg_478[9 : 1] <= tmp_s_fu_305_p1[9 : 1];
        current_graph_index_s_reg_468[9 : 1] <= tmp_s_fu_305_p1[9 : 1];
        tmp_92_reg_483[9 : 1] <= tmp_92_fu_312_p2[9 : 1];
        tmp_i_cast_reg_488[9 : 1] <= tmp_i_cast_fu_318_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        elt_assign_reg_599 <= elt_assign_fu_438_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_neighbor_3_reg_500 <= i_neighbor_3_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        left_child_01_i_reg_577 <= left_child_01_i_fu_402_p3;
        swap_4_reg_566[31 : 1] <= swap_4_fu_397_p2[31 : 1];
        temp_6_reg_572 <= current_graph_dist_q0;
        tmp_25_i_reg_584 <= tmp_25_i_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_point_reg_463 <= n_point_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_256 <= current_graph_index_q0;
        reg_262 <= current_graph_flag_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        swap_3_reg_539[31 : 1] <= swap_3_fu_366_p2[31 : 1];
        tmp_19_i_reg_545 <= tmp_19_i_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        temp_3_reg_528 <= current_graph_dist_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_126_cast_reg_533[3 : 0] <= tmp_126_cast_fu_356_p1[3 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_267_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_267_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & ((1'd0 == tmp_19_i_reg_545) | (1'd1 == tmp_31_i_fu_444_p2)))) begin
        current_graph_dist_address0 = current_graph_dist_a_14_reg_517;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_19_i_reg_545 == 1'd1) & (1'd0 == tmp_31_i_fu_444_p2))) begin
        current_graph_dist_address0 = tmp_33_i_fu_453_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_graph_dist_address0 = tmp_27_i_fu_418_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_dist_address0 = tmp_21_i_fu_382_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        current_graph_dist_address0 = current_graph_dist_a_reg_473;
    end else begin
        current_graph_dist_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        current_graph_dist_address1 = current_graph_dist_a_19_reg_621;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        current_graph_dist_address1 = current_graph_dist_a_15_reg_555;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_graph_dist_address1 = tmp_29_i_fu_427_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_dist_address1 = tmp_23_i_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_dist_address1 = current_graph_dist_a_14_reg_517;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_dist_address1 = tmp_94_fu_343_p1;
    end else begin
        current_graph_dist_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state10) & (tmp_19_i_reg_545 == 1'd1) & (1'd0 == tmp_31_i_fu_444_p2)) | ((1'b1 == ap_CS_fsm_state10) & ((1'd0 == tmp_19_i_reg_545) | (1'd1 == tmp_31_i_fu_444_p2))))) begin
        current_graph_dist_ce0 = 1'b1;
    end else begin
        current_graph_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        current_graph_dist_ce1 = 1'b1;
    end else begin
        current_graph_dist_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        current_graph_dist_d1 = temp_6_reg_572;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        current_graph_dist_d1 = current_graph_dist_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_dist_d1 = temp_3_reg_528;
    end else begin
        current_graph_dist_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        current_graph_dist_we0 = 1'b1;
    end else begin
        current_graph_dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12))) begin
        current_graph_dist_we1 = 1'b1;
    end else begin
        current_graph_dist_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        current_graph_flag_address0 = current_graph_flag_a_9_reg_627;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        current_graph_flag_address0 = tmp_21_i_reg_549;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        current_graph_flag_address0 = current_graph_flag_a_reg_478;
    end else begin
        current_graph_flag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        current_graph_flag_address1 = current_graph_flag_a_10_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        current_graph_flag_address1 = tmp_33_i_fu_453_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_flag_address1 = current_graph_flag_a_8_reg_523;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_flag_address1 = tmp_94_fu_343_p1;
    end else begin
        current_graph_flag_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        current_graph_flag_ce0 = 1'b1;
    end else begin
        current_graph_flag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12))) begin
        current_graph_flag_ce1 = 1'b1;
    end else begin
        current_graph_flag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11))) begin
        current_graph_flag_we0 = 1'b1;
    end else begin
        current_graph_flag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12))) begin
        current_graph_flag_we1 = 1'b1;
    end else begin
        current_graph_flag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        current_graph_index_address0 = current_graph_index_18_reg_615;
    end else if (((1'b1 == ap_CS_fsm_state10) & ((1'd0 == tmp_19_i_reg_545) | (1'd1 == tmp_31_i_fu_444_p2)))) begin
        current_graph_index_address0 = current_graph_index_15_reg_511;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_19_i_reg_545 == 1'd1) & (1'd0 == tmp_31_i_fu_444_p2))) begin
        current_graph_index_address0 = tmp_21_i_reg_549;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        current_graph_index_address0 = current_graph_index_s_reg_468;
    end else begin
        current_graph_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        current_graph_index_address1 = current_graph_index_17_reg_609;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        current_graph_index_address1 = tmp_33_i_fu_453_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_index_address1 = current_graph_index_15_reg_511;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_index_address1 = tmp_94_fu_343_p1;
    end else begin
        current_graph_index_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state10) & (tmp_19_i_reg_545 == 1'd1) & (1'd0 == tmp_31_i_fu_444_p2)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state10) & ((1'd0 == tmp_19_i_reg_545) | (1'd1 == tmp_31_i_fu_444_p2))))) begin
        current_graph_index_ce0 = 1'b1;
    end else begin
        current_graph_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state10))) begin
        current_graph_index_ce1 = 1'b1;
    end else begin
        current_graph_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        current_graph_index_d0 = reg_256;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        current_graph_index_d0 = current_graph_index_q1;
    end else begin
        current_graph_index_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        current_graph_index_d1 = current_graph_index_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_index_d1 = reg_256;
    end else begin
        current_graph_index_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12))) begin
        current_graph_index_we0 = 1'b1;
    end else begin
        current_graph_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5))) begin
        current_graph_index_we1 = 1'b1;
    end else begin
        current_graph_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        result_dist_ce0 = 1'b1;
    end else begin
        result_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        result_dist_we0 = 1'b1;
    end else begin
        result_dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        result_index_ce0 = 1'b1;
    end else begin
        result_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        result_index_we0 = 1'b1;
    end else begin
        result_index_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_267_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_326_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == tmp_19_i_fu_372_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & ((1'd0 == tmp_19_i_reg_545) | (1'd1 == tmp_31_i_fu_444_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign current_graph_dist_d0 = current_graph_dist_q1;

assign current_graph_flag_d0 = current_graph_flag_q1;

assign current_graph_flag_d1 = reg_262;

assign elt_assign_fu_438_p3 = ((tmp_25_i_reg_584[0:0] === 1'b1) ? right_child_0_left_c_fu_432_p3 : left_child_01_i_reg_577);

assign exitcond1_fu_267_p2 = ((row_assign_reg_215 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond_fu_326_p2 = ((i_neighbor_reg_226 == 4'd10) ? 1'b1 : 1'b0);

assign grp_fu_250_p2 = (($signed(current_graph_dist_q0) < $signed(current_graph_dist_q1)) ? 1'b1 : 1'b0);

assign i_neighbor_3_fu_332_p2 = (i_neighbor_reg_226 + 4'd1);

assign i_neighbor_cast1_fu_322_p1 = i_neighbor_reg_226;

assign left_child_01_i_fu_402_p3 = ((grp_fu_250_p2[0:0] === 1'b1) ? swap_3_reg_539 : swap_reg_238);

assign n_point_fu_273_p2 = (row_assign_reg_215 + 7'd1);

assign p_shl2_cast_fu_295_p1 = p_shl2_fu_287_p3;

assign p_shl2_fu_287_p3 = {{row_assign_reg_215}, {1'd0}};

assign p_shl_fu_279_p3 = {{row_assign_reg_215}, {3'd0}};

assign result_dist_address0 = tmp_94_reg_505;

assign result_dist_d0 = current_graph_dist_q0;

assign result_index_address0 = tmp_94_reg_505;

assign result_index_d0 = current_graph_index_q0;

assign right_child_0_left_c_fu_432_p3 = ((grp_fu_250_p2[0:0] === 1'b1) ? swap_4_reg_566 : left_child_01_i_reg_577);

assign size_heap_assign_fu_350_p2 = ($signed(4'd9) - $signed(i_neighbor_reg_226));

assign swap_3_fu_366_p2 = (tmp_27_fu_360_p2 | 32'd1);

assign swap_4_fu_397_p2 = (swap_3_reg_539 + 32'd1);

assign tmp_126_cast_fu_356_p1 = size_heap_assign_fu_350_p2;

assign tmp_19_i_fu_372_p2 = (($signed(swap_3_fu_366_p2) < $signed(tmp_126_cast_reg_533)) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_377_p2 = (swap_reg_238 + tmp_i_cast_reg_488);

assign tmp_21_i_fu_382_p1 = $signed(tmp_20_i_fu_377_p2);

assign tmp_22_i_fu_387_p2 = (swap_3_fu_366_p2 + tmp_i_cast_reg_488);

assign tmp_23_i_fu_392_p1 = $signed(tmp_22_i_fu_387_p2);

assign tmp_25_i_fu_409_p2 = (($signed(swap_4_fu_397_p2) < $signed(tmp_126_cast_reg_533)) ? 1'b1 : 1'b0);

assign tmp_26_i_fu_414_p2 = (left_child_01_i_reg_577 + tmp_i_cast_reg_488);

assign tmp_27_fu_360_p2 = swap_reg_238 << 32'd1;

assign tmp_27_i_fu_418_p1 = $signed(tmp_26_i_fu_414_p2);

assign tmp_28_i_fu_423_p2 = (swap_4_reg_566 + tmp_i_cast_reg_488);

assign tmp_29_i_fu_427_p1 = $signed(tmp_28_i_fu_423_p2);

assign tmp_31_i_fu_444_p2 = ((elt_assign_reg_599 == swap_reg_238) ? 1'b1 : 1'b0);

assign tmp_32_i_fu_449_p2 = (elt_assign_reg_599 + tmp_i_cast_reg_488);

assign tmp_33_i_fu_453_p1 = $signed(tmp_32_i_fu_449_p2);

assign tmp_92_fu_312_p2 = (tmp_fu_299_p2 + 10'd9);

assign tmp_93_fu_338_p2 = (tmp_92_reg_483 - i_neighbor_cast1_fu_322_p1);

assign tmp_94_fu_343_p1 = tmp_93_fu_338_p2;

assign tmp_fu_299_p2 = (p_shl2_cast_fu_295_p1 + p_shl_fu_279_p3);

assign tmp_i_cast_fu_318_p1 = tmp_fu_299_p2;

assign tmp_s_fu_305_p1 = tmp_fu_299_p2;

always @ (posedge ap_clk) begin
    current_graph_index_s_reg_468[0] <= 1'b0;
    current_graph_dist_a_reg_473[0] <= 1'b0;
    current_graph_flag_a_reg_478[0] <= 1'b0;
    tmp_92_reg_483[0] <= 1'b1;
    tmp_i_cast_reg_488[0] <= 1'b0;
    tmp_i_cast_reg_488[31:10] <= 22'b0000000000000000000000;
    tmp_94_reg_505[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_126_cast_reg_533[31:4] <= 28'b0000000000000000000000000000;
    swap_3_reg_539[0] <= 1'b1;
    swap_4_reg_566[0] <= 1'b0;
end

endmodule //deheap_sort
