// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nn_descent,hls_ip_2017_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=26,HLS_SYN_DSP=12,HLS_SYN_FF=10620,HLS_SYN_LUT=9207}" *)

module nn_descent (
        ap_clk,
        ap_rst_n,
        m_axi_hostmem_AWVALID,
        m_axi_hostmem_AWREADY,
        m_axi_hostmem_AWADDR,
        m_axi_hostmem_AWID,
        m_axi_hostmem_AWLEN,
        m_axi_hostmem_AWSIZE,
        m_axi_hostmem_AWBURST,
        m_axi_hostmem_AWLOCK,
        m_axi_hostmem_AWCACHE,
        m_axi_hostmem_AWPROT,
        m_axi_hostmem_AWQOS,
        m_axi_hostmem_AWREGION,
        m_axi_hostmem_AWUSER,
        m_axi_hostmem_WVALID,
        m_axi_hostmem_WREADY,
        m_axi_hostmem_WDATA,
        m_axi_hostmem_WSTRB,
        m_axi_hostmem_WLAST,
        m_axi_hostmem_WID,
        m_axi_hostmem_WUSER,
        m_axi_hostmem_ARVALID,
        m_axi_hostmem_ARREADY,
        m_axi_hostmem_ARADDR,
        m_axi_hostmem_ARID,
        m_axi_hostmem_ARLEN,
        m_axi_hostmem_ARSIZE,
        m_axi_hostmem_ARBURST,
        m_axi_hostmem_ARLOCK,
        m_axi_hostmem_ARCACHE,
        m_axi_hostmem_ARPROT,
        m_axi_hostmem_ARQOS,
        m_axi_hostmem_ARREGION,
        m_axi_hostmem_ARUSER,
        m_axi_hostmem_RVALID,
        m_axi_hostmem_RREADY,
        m_axi_hostmem_RDATA,
        m_axi_hostmem_RLAST,
        m_axi_hostmem_RID,
        m_axi_hostmem_RUSER,
        m_axi_hostmem_RRESP,
        m_axi_hostmem_BVALID,
        m_axi_hostmem_BREADY,
        m_axi_hostmem_BRESP,
        m_axi_hostmem_BID,
        m_axi_hostmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_pp0_stage0 = 51'd256;
parameter    ap_ST_fsm_state12 = 51'd512;
parameter    ap_ST_fsm_state13 = 51'd1024;
parameter    ap_ST_fsm_state14 = 51'd2048;
parameter    ap_ST_fsm_state15 = 51'd4096;
parameter    ap_ST_fsm_state16 = 51'd8192;
parameter    ap_ST_fsm_state17 = 51'd16384;
parameter    ap_ST_fsm_state18 = 51'd32768;
parameter    ap_ST_fsm_state19 = 51'd65536;
parameter    ap_ST_fsm_state20 = 51'd131072;
parameter    ap_ST_fsm_state21 = 51'd262144;
parameter    ap_ST_fsm_state22 = 51'd524288;
parameter    ap_ST_fsm_state23 = 51'd1048576;
parameter    ap_ST_fsm_state24 = 51'd2097152;
parameter    ap_ST_fsm_state25 = 51'd4194304;
parameter    ap_ST_fsm_state26 = 51'd8388608;
parameter    ap_ST_fsm_state27 = 51'd16777216;
parameter    ap_ST_fsm_state28 = 51'd33554432;
parameter    ap_ST_fsm_state29 = 51'd67108864;
parameter    ap_ST_fsm_state30 = 51'd134217728;
parameter    ap_ST_fsm_state31 = 51'd268435456;
parameter    ap_ST_fsm_state32 = 51'd536870912;
parameter    ap_ST_fsm_state33 = 51'd1073741824;
parameter    ap_ST_fsm_state34 = 51'd2147483648;
parameter    ap_ST_fsm_state35 = 51'd4294967296;
parameter    ap_ST_fsm_state36 = 51'd8589934592;
parameter    ap_ST_fsm_state37 = 51'd17179869184;
parameter    ap_ST_fsm_state38 = 51'd34359738368;
parameter    ap_ST_fsm_state39 = 51'd68719476736;
parameter    ap_ST_fsm_state40 = 51'd137438953472;
parameter    ap_ST_fsm_state41 = 51'd274877906944;
parameter    ap_ST_fsm_pp1_stage0 = 51'd549755813888;
parameter    ap_ST_fsm_state45 = 51'd1099511627776;
parameter    ap_ST_fsm_state46 = 51'd2199023255552;
parameter    ap_ST_fsm_state47 = 51'd4398046511104;
parameter    ap_ST_fsm_state48 = 51'd8796093022208;
parameter    ap_ST_fsm_state49 = 51'd17592186044416;
parameter    ap_ST_fsm_pp2_stage0 = 51'd35184372088832;
parameter    ap_ST_fsm_state53 = 51'd70368744177664;
parameter    ap_ST_fsm_state54 = 51'd140737488355328;
parameter    ap_ST_fsm_state55 = 51'd281474976710656;
parameter    ap_ST_fsm_state56 = 51'd562949953421312;
parameter    ap_ST_fsm_state57 = 51'd1125899906842624;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_HOSTMEM_ID_WIDTH = 1;
parameter    C_M_AXI_HOSTMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_HOSTMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_HOSTMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HOSTMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HOSTMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_HOSTMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_HOSTMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_HOSTMEM_USER_VALUE = 0;
parameter    C_M_AXI_HOSTMEM_PROT_VALUE = 0;
parameter    C_M_AXI_HOSTMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_HOSTMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_hostmem_AWVALID;
input   m_axi_hostmem_AWREADY;
output  [C_M_AXI_HOSTMEM_ADDR_WIDTH - 1:0] m_axi_hostmem_AWADDR;
output  [C_M_AXI_HOSTMEM_ID_WIDTH - 1:0] m_axi_hostmem_AWID;
output  [7:0] m_axi_hostmem_AWLEN;
output  [2:0] m_axi_hostmem_AWSIZE;
output  [1:0] m_axi_hostmem_AWBURST;
output  [1:0] m_axi_hostmem_AWLOCK;
output  [3:0] m_axi_hostmem_AWCACHE;
output  [2:0] m_axi_hostmem_AWPROT;
output  [3:0] m_axi_hostmem_AWQOS;
output  [3:0] m_axi_hostmem_AWREGION;
output  [C_M_AXI_HOSTMEM_AWUSER_WIDTH - 1:0] m_axi_hostmem_AWUSER;
output   m_axi_hostmem_WVALID;
input   m_axi_hostmem_WREADY;
output  [C_M_AXI_HOSTMEM_DATA_WIDTH - 1:0] m_axi_hostmem_WDATA;
output  [C_M_AXI_HOSTMEM_WSTRB_WIDTH - 1:0] m_axi_hostmem_WSTRB;
output   m_axi_hostmem_WLAST;
output  [C_M_AXI_HOSTMEM_ID_WIDTH - 1:0] m_axi_hostmem_WID;
output  [C_M_AXI_HOSTMEM_WUSER_WIDTH - 1:0] m_axi_hostmem_WUSER;
output   m_axi_hostmem_ARVALID;
input   m_axi_hostmem_ARREADY;
output  [C_M_AXI_HOSTMEM_ADDR_WIDTH - 1:0] m_axi_hostmem_ARADDR;
output  [C_M_AXI_HOSTMEM_ID_WIDTH - 1:0] m_axi_hostmem_ARID;
output  [7:0] m_axi_hostmem_ARLEN;
output  [2:0] m_axi_hostmem_ARSIZE;
output  [1:0] m_axi_hostmem_ARBURST;
output  [1:0] m_axi_hostmem_ARLOCK;
output  [3:0] m_axi_hostmem_ARCACHE;
output  [2:0] m_axi_hostmem_ARPROT;
output  [3:0] m_axi_hostmem_ARQOS;
output  [3:0] m_axi_hostmem_ARREGION;
output  [C_M_AXI_HOSTMEM_ARUSER_WIDTH - 1:0] m_axi_hostmem_ARUSER;
input   m_axi_hostmem_RVALID;
output   m_axi_hostmem_RREADY;
input  [C_M_AXI_HOSTMEM_DATA_WIDTH - 1:0] m_axi_hostmem_RDATA;
input   m_axi_hostmem_RLAST;
input  [C_M_AXI_HOSTMEM_ID_WIDTH - 1:0] m_axi_hostmem_RID;
input  [C_M_AXI_HOSTMEM_RUSER_WIDTH - 1:0] m_axi_hostmem_RUSER;
input  [1:0] m_axi_hostmem_RRESP;
input   m_axi_hostmem_BVALID;
output   m_axi_hostmem_BREADY;
input  [1:0] m_axi_hostmem_BRESP;
input  [C_M_AXI_HOSTMEM_ID_WIDTH - 1:0] m_axi_hostmem_BID;
input  [C_M_AXI_HOSTMEM_BUSER_WIDTH - 1:0] m_axi_hostmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] data_in;
wire   [31:0] rng_state;
wire   [31:0] result_out_index;
wire   [31:0] result_out_dist;
reg   [9:0] current_graph_index_address0;
reg    current_graph_index_ce0;
reg    current_graph_index_we0;
reg   [31:0] current_graph_index_d0;
wire   [31:0] current_graph_index_q0;
reg   [9:0] current_graph_index_address1;
reg    current_graph_index_ce1;
reg    current_graph_index_we1;
reg   [31:0] current_graph_index_d1;
wire   [31:0] current_graph_index_q1;
reg   [9:0] current_graph_dist_address0;
reg    current_graph_dist_ce0;
reg    current_graph_dist_we0;
reg   [31:0] current_graph_dist_d0;
wire   [31:0] current_graph_dist_q0;
reg   [9:0] current_graph_dist_address1;
reg    current_graph_dist_ce1;
reg    current_graph_dist_we1;
reg   [31:0] current_graph_dist_d1;
wire   [31:0] current_graph_dist_q1;
reg   [9:0] current_graph_flag_address0;
reg    current_graph_flag_ce0;
reg    current_graph_flag_we0;
reg   [31:0] current_graph_flag_d0;
wire   [31:0] current_graph_flag_q0;
reg   [9:0] current_graph_flag_address1;
reg    current_graph_flag_ce1;
reg    current_graph_flag_we1;
reg   [31:0] current_graph_flag_d1;
wire   [31:0] current_graph_flag_q1;
reg   [3:0] indices_address0;
reg    indices_ce0;
reg    indices_we0;
wire   [7:0] indices_q0;
reg   [10:0] candidate_neighbors_s_address0;
reg    candidate_neighbors_s_ce0;
reg    candidate_neighbors_s_we0;
reg   [31:0] candidate_neighbors_s_d0;
wire   [31:0] candidate_neighbors_s_q0;
reg   [10:0] candidate_neighbors_1_address0;
reg    candidate_neighbors_1_ce0;
reg    candidate_neighbors_1_we0;
reg   [31:0] candidate_neighbors_1_d0;
wire   [31:0] candidate_neighbors_1_q0;
reg   [10:0] candidate_neighbors_2_address0;
reg    candidate_neighbors_2_ce0;
reg    candidate_neighbors_2_we0;
reg   [31:0] candidate_neighbors_2_d0;
wire   [31:0] candidate_neighbors_2_q0;
reg    hostmem_blk_n_AW;
wire    ap_CS_fsm_state49;
reg    hostmem_blk_n_W;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0_flag00000000;
reg   [0:0] exitcond11_reg_1422;
reg   [0:0] ap_reg_pp2_iter1_exitcond11_reg_1422;
reg    hostmem_blk_n_B;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state41;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0_flag00000000;
reg   [0:0] exitcond10_reg_1403;
reg   [0:0] ap_reg_pp1_iter1_exitcond10_reg_1403;
reg    hostmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    hostmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond9_reg_1162;
reg    hostmem_AWVALID;
wire    hostmem_AWREADY;
reg   [31:0] hostmem_AWADDR;
reg   [0:0] hostmem_AWID;
reg   [31:0] hostmem_AWLEN;
reg   [2:0] hostmem_AWSIZE;
reg   [1:0] hostmem_AWBURST;
reg   [1:0] hostmem_AWLOCK;
reg   [3:0] hostmem_AWCACHE;
reg   [2:0] hostmem_AWPROT;
reg   [3:0] hostmem_AWQOS;
reg   [3:0] hostmem_AWREGION;
reg   [0:0] hostmem_AWUSER;
reg    hostmem_WVALID;
wire    hostmem_WREADY;
reg   [31:0] hostmem_WDATA;
reg   [3:0] hostmem_WSTRB;
reg    hostmem_WLAST;
reg   [0:0] hostmem_WID;
reg   [0:0] hostmem_WUSER;
reg    hostmem_ARVALID;
wire    hostmem_ARREADY;
reg   [31:0] hostmem_ARADDR;
reg   [0:0] hostmem_ARID;
reg   [31:0] hostmem_ARLEN;
reg   [2:0] hostmem_ARSIZE;
reg   [1:0] hostmem_ARBURST;
reg   [1:0] hostmem_ARLOCK;
reg   [3:0] hostmem_ARCACHE;
reg   [2:0] hostmem_ARPROT;
reg   [3:0] hostmem_ARQOS;
reg   [3:0] hostmem_ARREGION;
reg   [0:0] hostmem_ARUSER;
wire    hostmem_RVALID;
reg    hostmem_RREADY;
wire   [31:0] hostmem_RDATA;
wire    hostmem_RLAST;
wire   [0:0] hostmem_RID;
wire   [0:0] hostmem_RUSER;
wire   [1:0] hostmem_RRESP;
wire    hostmem_BVALID;
reg    hostmem_BREADY;
wire   [1:0] hostmem_BRESP;
wire   [0:0] hostmem_BID;
wire   [0:0] hostmem_BUSER;
reg   [8:0] indvar_reg_409;
reg   [8:0] ap_reg_pp0_iter1_indvar_reg_409;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_flag00011001;
reg   [9:0] indvar1_reg_544;
reg   [9:0] indvar2_reg_555;
reg   [29:0] result_out_dist7_reg_1124;
reg   [29:0] result_out_index5_reg_1129;
reg   [29:0] rng_state3_reg_1134;
reg   [29:0] data_in1_reg_1141;
reg    ap_sig_ioackin_hostmem_ARREADY;
reg   [31:0] hostmem_addr_reg_1152;
wire    ap_CS_fsm_state8;
reg   [31:0] hostmem_addr_1_reg_1157;
wire   [0:0] exitcond9_fu_719_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond9_reg_1162;
wire   [8:0] indvar_next_fu_725_p2;
reg   [8:0] indvar_next_reg_1166;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] hostmem_addr_2_read_reg_1171;
wire   [6:0] n_points_1_fu_742_p2;
reg   [6:0] n_points_1_reg_1179;
wire    ap_CS_fsm_state13;
wire   [9:0] p_shl_fu_748_p3;
reg   [9:0] p_shl_reg_1184;
wire   [0:0] exitcond8_fu_736_p2;
wire   [7:0] p_shl9_fu_756_p3;
reg   [7:0] p_shl9_reg_1189;
wire   [3:0] i_neighbor_1_fu_774_p2;
wire    ap_CS_fsm_state14;
wire   [9:0] i_cast1_fu_801_p1;
reg   [9:0] i_cast1_reg_1202;
wire    ap_CS_fsm_state15;
wire   [6:0] i_2_fu_811_p2;
reg   [6:0] i_2_reg_1210;
wire   [9:0] tmp_s_fu_829_p2;
reg   [9:0] tmp_s_reg_1215;
wire    ap_CS_fsm_state16;
wire    grp_rejection_sample_fu_595_ap_done;
wire   [3:0] j_1_fu_840_p2;
reg   [3:0] j_1_reg_1223;
wire    ap_CS_fsm_state17;
reg   [3:0] indices_addr_reg_1228;
wire   [0:0] exitcond5_fu_834_p2;
reg   [7:0] indices_load_reg_1233;
wire    ap_CS_fsm_state18;
wire   [9:0] tmp_26_fu_863_p2;
reg   [9:0] tmp_26_reg_1238;
wire   [1:0] i_4_fu_875_p2;
reg   [1:0] i_4_reg_1246;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond_i_fu_869_p2;
wire   [8:0] i_cast_cast1_fu_905_p1;
reg   [8:0] i_cast_cast1_reg_1261;
wire  signed [31:0] tmp_i_fu_910_p2;
reg  signed [31:0] tmp_i_reg_1266;
wire    ap_CS_fsm_state20;
wire   [31:0] grp_fu_916_p2;
reg   [31:0] tmp_126_i_reg_1272;
wire    ap_CS_fsm_state22;
wire   [31:0] result_1_fu_920_p2;
wire    ap_CS_fsm_state23;
wire  signed [8:0] extLd_cast_fu_925_p1;
reg  signed [8:0] extLd_cast_reg_1282;
wire    ap_CS_fsm_state25;
wire   [7:0] i_cast_cast_fu_930_p1;
reg   [7:0] i_cast_cast_reg_1287;
wire   [6:0] n_point_1_fu_941_p2;
reg   [6:0] n_point_1_reg_1295;
wire    ap_CS_fsm_state27;
wire   [10:0] p_shl3_fu_947_p3;
reg   [10:0] p_shl3_reg_1300;
wire   [0:0] exitcond4_fu_935_p2;
wire   [8:0] p_shl4_fu_955_p3;
reg   [8:0] p_shl4_reg_1305;
wire   [4:0] i_neighbor_2_fu_973_p2;
wire    ap_CS_fsm_state28;
wire   [6:0] i_3_fu_1006_p2;
reg   [6:0] i_3_reg_1321;
wire    ap_CS_fsm_state30;
wire   [10:0] tmp_27_fu_1032_p2;
reg   [10:0] tmp_27_reg_1326;
wire   [0:0] exitcond2_fu_1000_p2;
wire   [4:0] j_2_fu_1048_p2;
reg   [4:0] j_2_reg_1335;
wire    ap_CS_fsm_state31;
wire   [63:0] tmp_32_fu_1059_p1;
reg   [63:0] tmp_32_reg_1340;
wire   [0:0] exitcond1_fu_1042_p2;
wire   [0:0] grp_fu_637_p3;
reg   [0:0] tmp_16_reg_1350;
wire    ap_CS_fsm_state32;
wire   [0:0] grp_tau_rand_fu_604_ap_return;
reg   [0:0] tmp_22_reg_1354;
wire    ap_CS_fsm_state33;
wire    grp_tau_rand_fu_604_ap_done;
reg    ap_block_state33_on_subcall_done;
reg   [10:0] candidate_neighbors_6_reg_1358;
wire   [4:0] k_2_fu_1074_p2;
reg   [4:0] k_2_reg_1366;
wire    ap_CS_fsm_state34;
wire   [63:0] tmp_35_fu_1085_p1;
reg   [63:0] tmp_35_reg_1371;
wire   [0:0] exitcond_fu_1068_p2;
reg   [31:0] q_reg_1381;
wire    ap_CS_fsm_state35;
reg   [0:0] tmp_17_reg_1386;
wire   [0:0] grp_fu_645_p2;
reg   [0:0] tmp_36_reg_1390;
wire    ap_CS_fsm_state36;
reg   [0:0] tmp_37_reg_1399;
wire    ap_CS_fsm_state37;
wire   [0:0] exitcond10_fu_1090_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state42_pp1_stage0_iter0;
wire    ap_block_state43_pp1_stage0_iter1;
wire    ap_block_state44_pp1_stage0_iter2;
reg    ap_sig_ioackin_hostmem_WREADY;
reg    ap_block_state44_io;
reg    ap_block_pp1_stage0_flag00011001;
wire   [9:0] indvar_next1_fu_1096_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] result_index_q0;
reg   [31:0] result_index_load_reg_1417;
wire   [0:0] exitcond11_fu_1107_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state50_pp2_stage0_iter0;
wire    ap_block_state51_pp2_stage0_iter1;
wire    ap_block_state52_pp2_stage0_iter2;
reg    ap_block_state52_io;
reg    ap_block_pp2_stage0_flag00011001;
wire   [9:0] indvar_next2_fu_1113_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] result_dist_q0;
reg   [31:0] result_dist_load_reg_1436;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
reg    ap_sig_ioackin_hostmem_AWREADY;
wire    grp_deheap_sort_fu_583_ap_done;
reg    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state42;
reg    ap_enable_reg_pp1_iter1;
reg    ap_block_pp2_stage0_flag00011011;
reg    ap_condition_pp2_exit_iter0_state50;
reg    ap_enable_reg_pp2_iter1;
reg   [8:0] data_address0;
reg    data_ce0;
reg    data_we0;
wire   [31:0] data_q0;
wire   [8:0] data_address1;
reg    data_ce1;
wire   [31:0] data_q1;
reg   [9:0] result_index_address0;
reg    result_index_ce0;
reg    result_index_we0;
reg   [9:0] result_dist_address0;
reg    result_dist_ce0;
reg    result_dist_we0;
wire    grp_build_candidates_fu_566_ap_start;
wire    grp_build_candidates_fu_566_ap_done;
wire    grp_build_candidates_fu_566_ap_idle;
wire    grp_build_candidates_fu_566_ap_ready;
wire   [9:0] grp_build_candidates_fu_566_current_graph_index_address0;
wire    grp_build_candidates_fu_566_current_graph_index_ce0;
wire   [9:0] grp_build_candidates_fu_566_current_graph_flag_address0;
wire    grp_build_candidates_fu_566_current_graph_flag_ce0;
wire    grp_build_candidates_fu_566_current_graph_flag_we0;
wire   [31:0] grp_build_candidates_fu_566_current_graph_flag_d0;
wire    grp_build_candidates_fu_566_m_axi_rng_state_AWVALID;
wire   [31:0] grp_build_candidates_fu_566_m_axi_rng_state_AWADDR;
wire   [0:0] grp_build_candidates_fu_566_m_axi_rng_state_AWID;
wire   [31:0] grp_build_candidates_fu_566_m_axi_rng_state_AWLEN;
wire   [2:0] grp_build_candidates_fu_566_m_axi_rng_state_AWSIZE;
wire   [1:0] grp_build_candidates_fu_566_m_axi_rng_state_AWBURST;
wire   [1:0] grp_build_candidates_fu_566_m_axi_rng_state_AWLOCK;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_AWCACHE;
wire   [2:0] grp_build_candidates_fu_566_m_axi_rng_state_AWPROT;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_AWQOS;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_AWREGION;
wire   [0:0] grp_build_candidates_fu_566_m_axi_rng_state_AWUSER;
wire    grp_build_candidates_fu_566_m_axi_rng_state_WVALID;
wire   [31:0] grp_build_candidates_fu_566_m_axi_rng_state_WDATA;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_WSTRB;
wire    grp_build_candidates_fu_566_m_axi_rng_state_WLAST;
wire   [0:0] grp_build_candidates_fu_566_m_axi_rng_state_WID;
wire   [0:0] grp_build_candidates_fu_566_m_axi_rng_state_WUSER;
wire    grp_build_candidates_fu_566_m_axi_rng_state_ARVALID;
wire   [31:0] grp_build_candidates_fu_566_m_axi_rng_state_ARADDR;
wire   [0:0] grp_build_candidates_fu_566_m_axi_rng_state_ARID;
wire   [31:0] grp_build_candidates_fu_566_m_axi_rng_state_ARLEN;
wire   [2:0] grp_build_candidates_fu_566_m_axi_rng_state_ARSIZE;
wire   [1:0] grp_build_candidates_fu_566_m_axi_rng_state_ARBURST;
wire   [1:0] grp_build_candidates_fu_566_m_axi_rng_state_ARLOCK;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_ARCACHE;
wire   [2:0] grp_build_candidates_fu_566_m_axi_rng_state_ARPROT;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_ARQOS;
wire   [3:0] grp_build_candidates_fu_566_m_axi_rng_state_ARREGION;
wire   [0:0] grp_build_candidates_fu_566_m_axi_rng_state_ARUSER;
wire    grp_build_candidates_fu_566_m_axi_rng_state_RREADY;
wire    grp_build_candidates_fu_566_m_axi_rng_state_BREADY;
wire   [10:0] grp_build_candidates_fu_566_candidate_neighbors_s_address0;
wire    grp_build_candidates_fu_566_candidate_neighbors_s_ce0;
wire    grp_build_candidates_fu_566_candidate_neighbors_s_we0;
wire   [31:0] grp_build_candidates_fu_566_candidate_neighbors_s_d0;
wire   [10:0] grp_build_candidates_fu_566_candidate_neighbors_13_address0;
wire    grp_build_candidates_fu_566_candidate_neighbors_13_ce0;
wire    grp_build_candidates_fu_566_candidate_neighbors_13_we0;
wire   [31:0] grp_build_candidates_fu_566_candidate_neighbors_13_d0;
wire   [10:0] grp_build_candidates_fu_566_candidate_neighbors_14_address0;
wire    grp_build_candidates_fu_566_candidate_neighbors_14_ce0;
wire    grp_build_candidates_fu_566_candidate_neighbors_14_we0;
wire   [31:0] grp_build_candidates_fu_566_candidate_neighbors_14_d0;
wire    grp_deheap_sort_fu_583_ap_start;
wire    grp_deheap_sort_fu_583_ap_idle;
wire    grp_deheap_sort_fu_583_ap_ready;
wire   [9:0] grp_deheap_sort_fu_583_current_graph_index_address0;
wire    grp_deheap_sort_fu_583_current_graph_index_ce0;
wire    grp_deheap_sort_fu_583_current_graph_index_we0;
wire   [31:0] grp_deheap_sort_fu_583_current_graph_index_d0;
wire   [9:0] grp_deheap_sort_fu_583_current_graph_index_address1;
wire    grp_deheap_sort_fu_583_current_graph_index_ce1;
wire    grp_deheap_sort_fu_583_current_graph_index_we1;
wire   [31:0] grp_deheap_sort_fu_583_current_graph_index_d1;
wire   [9:0] grp_deheap_sort_fu_583_current_graph_dist_address0;
wire    grp_deheap_sort_fu_583_current_graph_dist_ce0;
wire    grp_deheap_sort_fu_583_current_graph_dist_we0;
wire   [31:0] grp_deheap_sort_fu_583_current_graph_dist_d0;
wire   [9:0] grp_deheap_sort_fu_583_current_graph_dist_address1;
wire    grp_deheap_sort_fu_583_current_graph_dist_ce1;
wire    grp_deheap_sort_fu_583_current_graph_dist_we1;
wire   [31:0] grp_deheap_sort_fu_583_current_graph_dist_d1;
wire   [9:0] grp_deheap_sort_fu_583_current_graph_flag_address0;
wire    grp_deheap_sort_fu_583_current_graph_flag_ce0;
wire    grp_deheap_sort_fu_583_current_graph_flag_we0;
wire   [31:0] grp_deheap_sort_fu_583_current_graph_flag_d0;
wire   [9:0] grp_deheap_sort_fu_583_current_graph_flag_address1;
wire    grp_deheap_sort_fu_583_current_graph_flag_ce1;
wire    grp_deheap_sort_fu_583_current_graph_flag_we1;
wire   [31:0] grp_deheap_sort_fu_583_current_graph_flag_d1;
wire   [9:0] grp_deheap_sort_fu_583_result_index_address0;
wire    grp_deheap_sort_fu_583_result_index_ce0;
wire    grp_deheap_sort_fu_583_result_index_we0;
wire   [31:0] grp_deheap_sort_fu_583_result_index_d0;
wire   [9:0] grp_deheap_sort_fu_583_result_dist_address0;
wire    grp_deheap_sort_fu_583_result_dist_ce0;
wire    grp_deheap_sort_fu_583_result_dist_we0;
wire   [31:0] grp_deheap_sort_fu_583_result_dist_d0;
wire    grp_rejection_sample_fu_595_ap_start;
wire    grp_rejection_sample_fu_595_ap_idle;
wire    grp_rejection_sample_fu_595_ap_ready;
wire    grp_rejection_sample_fu_595_m_axi_rng_state_AWVALID;
wire   [31:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWADDR;
wire   [0:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWID;
wire   [31:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWLEN;
wire   [2:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWSIZE;
wire   [1:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWBURST;
wire   [1:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWLOCK;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWCACHE;
wire   [2:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWPROT;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWQOS;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWREGION;
wire   [0:0] grp_rejection_sample_fu_595_m_axi_rng_state_AWUSER;
wire    grp_rejection_sample_fu_595_m_axi_rng_state_WVALID;
wire   [31:0] grp_rejection_sample_fu_595_m_axi_rng_state_WDATA;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_WSTRB;
wire    grp_rejection_sample_fu_595_m_axi_rng_state_WLAST;
wire   [0:0] grp_rejection_sample_fu_595_m_axi_rng_state_WID;
wire   [0:0] grp_rejection_sample_fu_595_m_axi_rng_state_WUSER;
wire    grp_rejection_sample_fu_595_m_axi_rng_state_ARVALID;
wire   [31:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARADDR;
wire   [0:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARID;
wire   [31:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARLEN;
wire   [2:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARSIZE;
wire   [1:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARBURST;
wire   [1:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARLOCK;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARCACHE;
wire   [2:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARPROT;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARQOS;
wire   [3:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARREGION;
wire   [0:0] grp_rejection_sample_fu_595_m_axi_rng_state_ARUSER;
wire    grp_rejection_sample_fu_595_m_axi_rng_state_RREADY;
wire    grp_rejection_sample_fu_595_m_axi_rng_state_BREADY;
wire   [3:0] grp_rejection_sample_fu_595_result_address0;
wire    grp_rejection_sample_fu_595_result_ce0;
wire    grp_rejection_sample_fu_595_result_we0;
wire   [7:0] grp_rejection_sample_fu_595_result_d0;
wire    grp_tau_rand_fu_604_ap_start;
wire    grp_tau_rand_fu_604_ap_idle;
wire    grp_tau_rand_fu_604_ap_ready;
wire    grp_tau_rand_fu_604_m_axi_state_AWVALID;
wire   [31:0] grp_tau_rand_fu_604_m_axi_state_AWADDR;
wire   [0:0] grp_tau_rand_fu_604_m_axi_state_AWID;
wire   [31:0] grp_tau_rand_fu_604_m_axi_state_AWLEN;
wire   [2:0] grp_tau_rand_fu_604_m_axi_state_AWSIZE;
wire   [1:0] grp_tau_rand_fu_604_m_axi_state_AWBURST;
wire   [1:0] grp_tau_rand_fu_604_m_axi_state_AWLOCK;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_AWCACHE;
wire   [2:0] grp_tau_rand_fu_604_m_axi_state_AWPROT;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_AWQOS;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_AWREGION;
wire   [0:0] grp_tau_rand_fu_604_m_axi_state_AWUSER;
wire    grp_tau_rand_fu_604_m_axi_state_WVALID;
wire   [31:0] grp_tau_rand_fu_604_m_axi_state_WDATA;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_WSTRB;
wire    grp_tau_rand_fu_604_m_axi_state_WLAST;
wire   [0:0] grp_tau_rand_fu_604_m_axi_state_WID;
wire   [0:0] grp_tau_rand_fu_604_m_axi_state_WUSER;
wire    grp_tau_rand_fu_604_m_axi_state_ARVALID;
wire   [31:0] grp_tau_rand_fu_604_m_axi_state_ARADDR;
wire   [0:0] grp_tau_rand_fu_604_m_axi_state_ARID;
wire   [31:0] grp_tau_rand_fu_604_m_axi_state_ARLEN;
wire   [2:0] grp_tau_rand_fu_604_m_axi_state_ARSIZE;
wire   [1:0] grp_tau_rand_fu_604_m_axi_state_ARBURST;
wire   [1:0] grp_tau_rand_fu_604_m_axi_state_ARLOCK;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_ARCACHE;
wire   [2:0] grp_tau_rand_fu_604_m_axi_state_ARPROT;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_ARQOS;
wire   [3:0] grp_tau_rand_fu_604_m_axi_state_ARREGION;
wire   [0:0] grp_tau_rand_fu_604_m_axi_state_ARUSER;
wire    grp_tau_rand_fu_604_m_axi_state_RREADY;
wire    grp_tau_rand_fu_604_m_axi_state_BREADY;
wire    grp_heap_push_opt_fu_611_ap_start;
wire    grp_heap_push_opt_fu_611_ap_done;
wire    grp_heap_push_opt_fu_611_ap_idle;
wire    grp_heap_push_opt_fu_611_ap_ready;
wire   [9:0] grp_heap_push_opt_fu_611_current_graph_index_address0;
wire    grp_heap_push_opt_fu_611_current_graph_index_ce0;
wire    grp_heap_push_opt_fu_611_current_graph_index_we0;
wire   [31:0] grp_heap_push_opt_fu_611_current_graph_index_d0;
wire   [9:0] grp_heap_push_opt_fu_611_current_graph_index_address1;
wire    grp_heap_push_opt_fu_611_current_graph_index_ce1;
wire    grp_heap_push_opt_fu_611_current_graph_index_we1;
wire   [31:0] grp_heap_push_opt_fu_611_current_graph_index_d1;
wire   [9:0] grp_heap_push_opt_fu_611_current_graph_dist_address0;
wire    grp_heap_push_opt_fu_611_current_graph_dist_ce0;
wire    grp_heap_push_opt_fu_611_current_graph_dist_we0;
wire   [31:0] grp_heap_push_opt_fu_611_current_graph_dist_d0;
wire   [9:0] grp_heap_push_opt_fu_611_current_graph_dist_address1;
wire    grp_heap_push_opt_fu_611_current_graph_dist_ce1;
wire    grp_heap_push_opt_fu_611_current_graph_dist_we1;
wire   [31:0] grp_heap_push_opt_fu_611_current_graph_dist_d1;
wire   [9:0] grp_heap_push_opt_fu_611_current_graph_flag_address0;
wire    grp_heap_push_opt_fu_611_current_graph_flag_ce0;
wire    grp_heap_push_opt_fu_611_current_graph_flag_we0;
wire   [31:0] grp_heap_push_opt_fu_611_current_graph_flag_d0;
wire   [9:0] grp_heap_push_opt_fu_611_current_graph_flag_address1;
wire    grp_heap_push_opt_fu_611_current_graph_flag_ce1;
wire    grp_heap_push_opt_fu_611_current_graph_flag_we1;
wire   [31:0] grp_heap_push_opt_fu_611_current_graph_flag_d1;
wire    grp_heap_push_fu_622_ap_start;
wire    grp_heap_push_fu_622_ap_done;
wire    grp_heap_push_fu_622_ap_idle;
wire    grp_heap_push_fu_622_ap_ready;
wire   [9:0] grp_heap_push_fu_622_current_graph_index_address0;
wire    grp_heap_push_fu_622_current_graph_index_ce0;
wire    grp_heap_push_fu_622_current_graph_index_we0;
wire   [31:0] grp_heap_push_fu_622_current_graph_index_d0;
wire   [9:0] grp_heap_push_fu_622_current_graph_dist_address0;
wire    grp_heap_push_fu_622_current_graph_dist_ce0;
wire    grp_heap_push_fu_622_current_graph_dist_we0;
wire   [31:0] grp_heap_push_fu_622_current_graph_dist_d0;
wire   [9:0] grp_heap_push_fu_622_current_graph_flag_address0;
wire    grp_heap_push_fu_622_current_graph_flag_ce0;
wire    grp_heap_push_fu_622_current_graph_flag_we0;
wire   [31:0] grp_heap_push_fu_622_current_graph_flag_d0;
reg   [8:0] grp_heap_push_fu_622_row;
reg   [7:0] grp_heap_push_fu_622_index;
reg   [8:0] indvar_phi_fu_413_p4;
reg   [6:0] n_points_reg_421;
wire   [0:0] exitcond7_fu_768_p2;
wire    ap_CS_fsm_state12;
reg   [3:0] i_neighbor_reg_432;
reg   [6:0] i_reg_443;
reg   [3:0] j_reg_455;
wire    ap_CS_fsm_state26;
reg   [31:0] d_reg_466;
reg   [1:0] i_i_reg_478;
reg   [6:0] n_point_reg_489;
wire   [0:0] exitcond3_fu_967_p2;
wire   [0:0] exitcond6_fu_805_p2;
reg   [4:0] i_neighbor1_reg_500;
reg   [6:0] i2_reg_511;
wire    ap_CS_fsm_state29;
reg   [4:0] j3_reg_522;
reg   [4:0] k_reg_533;
wire    ap_CS_fsm_state40;
reg    ap_predicate_op280_call_state40;
reg    ap_block_state40_on_subcall_done;
reg    ap_reg_grp_build_candidates_fu_566_ap_start;
reg    ap_reg_grp_deheap_sort_fu_583_ap_start;
reg    ap_reg_grp_rejection_sample_fu_595_ap_start;
reg    ap_reg_grp_tau_rand_fu_604_ap_start;
reg    ap_reg_grp_heap_push_opt_fu_611_ap_start;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state38;
reg    ap_reg_grp_heap_push_fu_622_ap_start;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_fu_731_p1;
wire   [63:0] tmp_24_fu_794_p1;
wire   [63:0] tmp_25_fu_846_p1;
wire   [63:0] sum_i_cast_fu_890_p1;
wire  signed [63:0] sum3_i_cast_fu_900_p1;
wire   [63:0] tmp_29_fu_993_p1;
wire   [63:0] tmp_30_fu_1102_p1;
wire   [63:0] tmp_33_fu_1119_p1;
wire   [63:0] tmp_21_fu_691_p1;
wire   [63:0] tmp_18_fu_701_p1;
wire   [63:0] tmp_19_fu_710_p1;
reg    ap_reg_ioackin_hostmem_ARREADY;
reg    ap_reg_ioackin_hostmem_AWREADY;
reg    ap_reg_ioackin_hostmem_WREADY;
wire    ap_block_pp1_stage0_flag00001001;
wire    ap_block_pp2_stage0_flag00001001;
wire   [7:0] i_neighbor_cast_fu_764_p1;
wire   [7:0] tmp1_fu_780_p2;
wire   [9:0] tmp1_cast_fu_785_p1;
wire   [9:0] tmp_23_fu_789_p2;
wire   [8:0] p_shl2_fu_817_p3;
wire   [9:0] p_shl2_cast_fu_825_p1;
wire   [9:0] p_shl5_fu_855_p3;
wire  signed [9:0] extLd23_cast_fu_851_p1;
wire   [9:0] tmp_i_cast_fu_881_p1;
wire   [9:0] sum_i_fu_885_p2;
wire   [9:0] sum3_i_fu_895_p2;
wire    ap_CS_fsm_state21;
wire   [8:0] i_neighbor1_cast9_fu_963_p1;
wire   [8:0] tmp2_fu_979_p2;
wire   [10:0] tmp2_cast_fu_984_p1;
wire   [10:0] tmp_28_fu_988_p2;
wire   [8:0] p_shl7_fu_1020_p3;
wire   [10:0] p_shl7_cast_fu_1028_p1;
wire   [10:0] p_shl6_fu_1012_p3;
wire   [10:0] j3_cast6_fu_1038_p1;
wire   [10:0] tmp_31_fu_1054_p2;
wire   [10:0] k_cast5_fu_1064_p1;
wire   [10:0] tmp_34_fu_1080_p2;
reg   [50:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_reg_grp_build_candidates_fu_566_ap_start = 1'b0;
#0 ap_reg_grp_deheap_sort_fu_583_ap_start = 1'b0;
#0 ap_reg_grp_rejection_sample_fu_595_ap_start = 1'b0;
#0 ap_reg_grp_tau_rand_fu_604_ap_start = 1'b0;
#0 ap_reg_grp_heap_push_opt_fu_611_ap_start = 1'b0;
#0 ap_reg_grp_heap_push_fu_622_ap_start = 1'b0;
#0 ap_reg_ioackin_hostmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_hostmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_hostmem_WREADY = 1'b0;
end

nn_descent_currendEe #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
current_graph_index_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(current_graph_index_address0),
    .ce0(current_graph_index_ce0),
    .we0(current_graph_index_we0),
    .d0(current_graph_index_d0),
    .q0(current_graph_index_q0),
    .address1(current_graph_index_address1),
    .ce1(current_graph_index_ce1),
    .we1(current_graph_index_we1),
    .d1(current_graph_index_d1),
    .q1(current_graph_index_q1)
);

nn_descent_currendEe #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
current_graph_dist_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(current_graph_dist_address0),
    .ce0(current_graph_dist_ce0),
    .we0(current_graph_dist_we0),
    .d0(current_graph_dist_d0),
    .q0(current_graph_dist_q0),
    .address1(current_graph_dist_address1),
    .ce1(current_graph_dist_ce1),
    .we1(current_graph_dist_we1),
    .d1(current_graph_dist_d1),
    .q1(current_graph_dist_q1)
);

nn_descent_currendEe #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
current_graph_flag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(current_graph_flag_address0),
    .ce0(current_graph_flag_ce0),
    .we0(current_graph_flag_we0),
    .d0(current_graph_flag_d0),
    .q0(current_graph_flag_q0),
    .address1(current_graph_flag_address1),
    .ce1(current_graph_flag_ce1),
    .we1(current_graph_flag_we1),
    .d1(current_graph_flag_d1),
    .q1(current_graph_flag_q1)
);

nn_descent_indices #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
indices_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(indices_address0),
    .ce0(indices_ce0),
    .we0(indices_we0),
    .d0(grp_rejection_sample_fu_595_result_d0),
    .q0(indices_q0)
);

nn_descent_candidg8j #(
    .DataWidth( 32 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
candidate_neighbors_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(candidate_neighbors_s_address0),
    .ce0(candidate_neighbors_s_ce0),
    .we0(candidate_neighbors_s_we0),
    .d0(candidate_neighbors_s_d0),
    .q0(candidate_neighbors_s_q0)
);

nn_descent_candidg8j #(
    .DataWidth( 32 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
candidate_neighbors_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(candidate_neighbors_1_address0),
    .ce0(candidate_neighbors_1_ce0),
    .we0(candidate_neighbors_1_we0),
    .d0(candidate_neighbors_1_d0),
    .q0(candidate_neighbors_1_q0)
);

nn_descent_candidg8j #(
    .DataWidth( 32 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
candidate_neighbors_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(candidate_neighbors_2_address0),
    .ce0(candidate_neighbors_2_ce0),
    .we0(candidate_neighbors_2_we0),
    .d0(candidate_neighbors_2_d0),
    .q0(candidate_neighbors_2_q0)
);

nn_descent_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
nn_descent_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .data_in(data_in),
    .rng_state(rng_state),
    .result_out_index(result_out_index),
    .result_out_dist(result_out_dist)
);

nn_descent_hostmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HOSTMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HOSTMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HOSTMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HOSTMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HOSTMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HOSTMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HOSTMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HOSTMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_HOSTMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HOSTMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HOSTMEM_CACHE_VALUE ))
nn_descent_hostmem_m_axi_U(
    .AWVALID(m_axi_hostmem_AWVALID),
    .AWREADY(m_axi_hostmem_AWREADY),
    .AWADDR(m_axi_hostmem_AWADDR),
    .AWID(m_axi_hostmem_AWID),
    .AWLEN(m_axi_hostmem_AWLEN),
    .AWSIZE(m_axi_hostmem_AWSIZE),
    .AWBURST(m_axi_hostmem_AWBURST),
    .AWLOCK(m_axi_hostmem_AWLOCK),
    .AWCACHE(m_axi_hostmem_AWCACHE),
    .AWPROT(m_axi_hostmem_AWPROT),
    .AWQOS(m_axi_hostmem_AWQOS),
    .AWREGION(m_axi_hostmem_AWREGION),
    .AWUSER(m_axi_hostmem_AWUSER),
    .WVALID(m_axi_hostmem_WVALID),
    .WREADY(m_axi_hostmem_WREADY),
    .WDATA(m_axi_hostmem_WDATA),
    .WSTRB(m_axi_hostmem_WSTRB),
    .WLAST(m_axi_hostmem_WLAST),
    .WID(m_axi_hostmem_WID),
    .WUSER(m_axi_hostmem_WUSER),
    .ARVALID(m_axi_hostmem_ARVALID),
    .ARREADY(m_axi_hostmem_ARREADY),
    .ARADDR(m_axi_hostmem_ARADDR),
    .ARID(m_axi_hostmem_ARID),
    .ARLEN(m_axi_hostmem_ARLEN),
    .ARSIZE(m_axi_hostmem_ARSIZE),
    .ARBURST(m_axi_hostmem_ARBURST),
    .ARLOCK(m_axi_hostmem_ARLOCK),
    .ARCACHE(m_axi_hostmem_ARCACHE),
    .ARPROT(m_axi_hostmem_ARPROT),
    .ARQOS(m_axi_hostmem_ARQOS),
    .ARREGION(m_axi_hostmem_ARREGION),
    .ARUSER(m_axi_hostmem_ARUSER),
    .RVALID(m_axi_hostmem_RVALID),
    .RREADY(m_axi_hostmem_RREADY),
    .RDATA(m_axi_hostmem_RDATA),
    .RLAST(m_axi_hostmem_RLAST),
    .RID(m_axi_hostmem_RID),
    .RUSER(m_axi_hostmem_RUSER),
    .RRESP(m_axi_hostmem_RRESP),
    .BVALID(m_axi_hostmem_BVALID),
    .BREADY(m_axi_hostmem_BREADY),
    .BRESP(m_axi_hostmem_BRESP),
    .BID(m_axi_hostmem_BID),
    .BUSER(m_axi_hostmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(hostmem_ARVALID),
    .I_ARREADY(hostmem_ARREADY),
    .I_ARADDR(hostmem_ARADDR),
    .I_ARID(hostmem_ARID),
    .I_ARLEN(hostmem_ARLEN),
    .I_ARSIZE(hostmem_ARSIZE),
    .I_ARLOCK(hostmem_ARLOCK),
    .I_ARCACHE(hostmem_ARCACHE),
    .I_ARQOS(hostmem_ARQOS),
    .I_ARPROT(hostmem_ARPROT),
    .I_ARUSER(hostmem_ARUSER),
    .I_ARBURST(hostmem_ARBURST),
    .I_ARREGION(hostmem_ARREGION),
    .I_RVALID(hostmem_RVALID),
    .I_RREADY(hostmem_RREADY),
    .I_RDATA(hostmem_RDATA),
    .I_RID(hostmem_RID),
    .I_RUSER(hostmem_RUSER),
    .I_RRESP(hostmem_RRESP),
    .I_RLAST(hostmem_RLAST),
    .I_AWVALID(hostmem_AWVALID),
    .I_AWREADY(hostmem_AWREADY),
    .I_AWADDR(hostmem_AWADDR),
    .I_AWID(hostmem_AWID),
    .I_AWLEN(hostmem_AWLEN),
    .I_AWSIZE(hostmem_AWSIZE),
    .I_AWLOCK(hostmem_AWLOCK),
    .I_AWCACHE(hostmem_AWCACHE),
    .I_AWQOS(hostmem_AWQOS),
    .I_AWPROT(hostmem_AWPROT),
    .I_AWUSER(hostmem_AWUSER),
    .I_AWBURST(hostmem_AWBURST),
    .I_AWREGION(hostmem_AWREGION),
    .I_WVALID(hostmem_WVALID),
    .I_WREADY(hostmem_WREADY),
    .I_WDATA(hostmem_WDATA),
    .I_WID(hostmem_WID),
    .I_WUSER(hostmem_WUSER),
    .I_WLAST(hostmem_WLAST),
    .I_WSTRB(hostmem_WSTRB),
    .I_BVALID(hostmem_BVALID),
    .I_BREADY(hostmem_BREADY),
    .I_BRESP(hostmem_BRESP),
    .I_BID(hostmem_BID),
    .I_BUSER(hostmem_BUSER)
);

nn_descent_data #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_address0),
    .ce0(data_ce0),
    .we0(data_we0),
    .d0(hostmem_addr_2_read_reg_1171),
    .q0(data_q0),
    .address1(data_address1),
    .ce1(data_ce1),
    .q1(data_q1)
);

nn_descent_resultjbC #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
result_index_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_index_address0),
    .ce0(result_index_ce0),
    .we0(result_index_we0),
    .d0(grp_deheap_sort_fu_583_result_index_d0),
    .q0(result_index_q0)
);

nn_descent_resultjbC #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
result_dist_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_dist_address0),
    .ce0(result_dist_ce0),
    .we0(result_dist_we0),
    .d0(grp_deheap_sort_fu_583_result_dist_d0),
    .q0(result_dist_q0)
);

build_candidates grp_build_candidates_fu_566(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_build_candidates_fu_566_ap_start),
    .ap_done(grp_build_candidates_fu_566_ap_done),
    .ap_idle(grp_build_candidates_fu_566_ap_idle),
    .ap_ready(grp_build_candidates_fu_566_ap_ready),
    .current_graph_index_address0(grp_build_candidates_fu_566_current_graph_index_address0),
    .current_graph_index_ce0(grp_build_candidates_fu_566_current_graph_index_ce0),
    .current_graph_index_q0(current_graph_index_q0),
    .current_graph_flag_address0(grp_build_candidates_fu_566_current_graph_flag_address0),
    .current_graph_flag_ce0(grp_build_candidates_fu_566_current_graph_flag_ce0),
    .current_graph_flag_we0(grp_build_candidates_fu_566_current_graph_flag_we0),
    .current_graph_flag_d0(grp_build_candidates_fu_566_current_graph_flag_d0),
    .current_graph_flag_q0(current_graph_flag_q0),
    .m_axi_rng_state_AWVALID(grp_build_candidates_fu_566_m_axi_rng_state_AWVALID),
    .m_axi_rng_state_AWREADY(hostmem_AWREADY),
    .m_axi_rng_state_AWADDR(grp_build_candidates_fu_566_m_axi_rng_state_AWADDR),
    .m_axi_rng_state_AWID(grp_build_candidates_fu_566_m_axi_rng_state_AWID),
    .m_axi_rng_state_AWLEN(grp_build_candidates_fu_566_m_axi_rng_state_AWLEN),
    .m_axi_rng_state_AWSIZE(grp_build_candidates_fu_566_m_axi_rng_state_AWSIZE),
    .m_axi_rng_state_AWBURST(grp_build_candidates_fu_566_m_axi_rng_state_AWBURST),
    .m_axi_rng_state_AWLOCK(grp_build_candidates_fu_566_m_axi_rng_state_AWLOCK),
    .m_axi_rng_state_AWCACHE(grp_build_candidates_fu_566_m_axi_rng_state_AWCACHE),
    .m_axi_rng_state_AWPROT(grp_build_candidates_fu_566_m_axi_rng_state_AWPROT),
    .m_axi_rng_state_AWQOS(grp_build_candidates_fu_566_m_axi_rng_state_AWQOS),
    .m_axi_rng_state_AWREGION(grp_build_candidates_fu_566_m_axi_rng_state_AWREGION),
    .m_axi_rng_state_AWUSER(grp_build_candidates_fu_566_m_axi_rng_state_AWUSER),
    .m_axi_rng_state_WVALID(grp_build_candidates_fu_566_m_axi_rng_state_WVALID),
    .m_axi_rng_state_WREADY(hostmem_WREADY),
    .m_axi_rng_state_WDATA(grp_build_candidates_fu_566_m_axi_rng_state_WDATA),
    .m_axi_rng_state_WSTRB(grp_build_candidates_fu_566_m_axi_rng_state_WSTRB),
    .m_axi_rng_state_WLAST(grp_build_candidates_fu_566_m_axi_rng_state_WLAST),
    .m_axi_rng_state_WID(grp_build_candidates_fu_566_m_axi_rng_state_WID),
    .m_axi_rng_state_WUSER(grp_build_candidates_fu_566_m_axi_rng_state_WUSER),
    .m_axi_rng_state_ARVALID(grp_build_candidates_fu_566_m_axi_rng_state_ARVALID),
    .m_axi_rng_state_ARREADY(hostmem_ARREADY),
    .m_axi_rng_state_ARADDR(grp_build_candidates_fu_566_m_axi_rng_state_ARADDR),
    .m_axi_rng_state_ARID(grp_build_candidates_fu_566_m_axi_rng_state_ARID),
    .m_axi_rng_state_ARLEN(grp_build_candidates_fu_566_m_axi_rng_state_ARLEN),
    .m_axi_rng_state_ARSIZE(grp_build_candidates_fu_566_m_axi_rng_state_ARSIZE),
    .m_axi_rng_state_ARBURST(grp_build_candidates_fu_566_m_axi_rng_state_ARBURST),
    .m_axi_rng_state_ARLOCK(grp_build_candidates_fu_566_m_axi_rng_state_ARLOCK),
    .m_axi_rng_state_ARCACHE(grp_build_candidates_fu_566_m_axi_rng_state_ARCACHE),
    .m_axi_rng_state_ARPROT(grp_build_candidates_fu_566_m_axi_rng_state_ARPROT),
    .m_axi_rng_state_ARQOS(grp_build_candidates_fu_566_m_axi_rng_state_ARQOS),
    .m_axi_rng_state_ARREGION(grp_build_candidates_fu_566_m_axi_rng_state_ARREGION),
    .m_axi_rng_state_ARUSER(grp_build_candidates_fu_566_m_axi_rng_state_ARUSER),
    .m_axi_rng_state_RVALID(hostmem_RVALID),
    .m_axi_rng_state_RREADY(grp_build_candidates_fu_566_m_axi_rng_state_RREADY),
    .m_axi_rng_state_RDATA(hostmem_RDATA),
    .m_axi_rng_state_RLAST(hostmem_RLAST),
    .m_axi_rng_state_RID(hostmem_RID),
    .m_axi_rng_state_RUSER(hostmem_RUSER),
    .m_axi_rng_state_RRESP(hostmem_RRESP),
    .m_axi_rng_state_BVALID(hostmem_BVALID),
    .m_axi_rng_state_BREADY(grp_build_candidates_fu_566_m_axi_rng_state_BREADY),
    .m_axi_rng_state_BRESP(hostmem_BRESP),
    .m_axi_rng_state_BID(hostmem_BID),
    .m_axi_rng_state_BUSER(hostmem_BUSER),
    .rng_state3(rng_state3_reg_1134),
    .candidate_neighbors_s_address0(grp_build_candidates_fu_566_candidate_neighbors_s_address0),
    .candidate_neighbors_s_ce0(grp_build_candidates_fu_566_candidate_neighbors_s_ce0),
    .candidate_neighbors_s_we0(grp_build_candidates_fu_566_candidate_neighbors_s_we0),
    .candidate_neighbors_s_d0(grp_build_candidates_fu_566_candidate_neighbors_s_d0),
    .candidate_neighbors_s_q0(candidate_neighbors_s_q0),
    .candidate_neighbors_13_address0(grp_build_candidates_fu_566_candidate_neighbors_13_address0),
    .candidate_neighbors_13_ce0(grp_build_candidates_fu_566_candidate_neighbors_13_ce0),
    .candidate_neighbors_13_we0(grp_build_candidates_fu_566_candidate_neighbors_13_we0),
    .candidate_neighbors_13_d0(grp_build_candidates_fu_566_candidate_neighbors_13_d0),
    .candidate_neighbors_13_q0(candidate_neighbors_1_q0),
    .candidate_neighbors_14_address0(grp_build_candidates_fu_566_candidate_neighbors_14_address0),
    .candidate_neighbors_14_ce0(grp_build_candidates_fu_566_candidate_neighbors_14_ce0),
    .candidate_neighbors_14_we0(grp_build_candidates_fu_566_candidate_neighbors_14_we0),
    .candidate_neighbors_14_d0(grp_build_candidates_fu_566_candidate_neighbors_14_d0),
    .candidate_neighbors_14_q0(candidate_neighbors_2_q0)
);

deheap_sort grp_deheap_sort_fu_583(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_deheap_sort_fu_583_ap_start),
    .ap_done(grp_deheap_sort_fu_583_ap_done),
    .ap_idle(grp_deheap_sort_fu_583_ap_idle),
    .ap_ready(grp_deheap_sort_fu_583_ap_ready),
    .current_graph_index_address0(grp_deheap_sort_fu_583_current_graph_index_address0),
    .current_graph_index_ce0(grp_deheap_sort_fu_583_current_graph_index_ce0),
    .current_graph_index_we0(grp_deheap_sort_fu_583_current_graph_index_we0),
    .current_graph_index_d0(grp_deheap_sort_fu_583_current_graph_index_d0),
    .current_graph_index_q0(current_graph_index_q0),
    .current_graph_index_address1(grp_deheap_sort_fu_583_current_graph_index_address1),
    .current_graph_index_ce1(grp_deheap_sort_fu_583_current_graph_index_ce1),
    .current_graph_index_we1(grp_deheap_sort_fu_583_current_graph_index_we1),
    .current_graph_index_d1(grp_deheap_sort_fu_583_current_graph_index_d1),
    .current_graph_index_q1(current_graph_index_q1),
    .current_graph_dist_address0(grp_deheap_sort_fu_583_current_graph_dist_address0),
    .current_graph_dist_ce0(grp_deheap_sort_fu_583_current_graph_dist_ce0),
    .current_graph_dist_we0(grp_deheap_sort_fu_583_current_graph_dist_we0),
    .current_graph_dist_d0(grp_deheap_sort_fu_583_current_graph_dist_d0),
    .current_graph_dist_q0(current_graph_dist_q0),
    .current_graph_dist_address1(grp_deheap_sort_fu_583_current_graph_dist_address1),
    .current_graph_dist_ce1(grp_deheap_sort_fu_583_current_graph_dist_ce1),
    .current_graph_dist_we1(grp_deheap_sort_fu_583_current_graph_dist_we1),
    .current_graph_dist_d1(grp_deheap_sort_fu_583_current_graph_dist_d1),
    .current_graph_dist_q1(current_graph_dist_q1),
    .current_graph_flag_address0(grp_deheap_sort_fu_583_current_graph_flag_address0),
    .current_graph_flag_ce0(grp_deheap_sort_fu_583_current_graph_flag_ce0),
    .current_graph_flag_we0(grp_deheap_sort_fu_583_current_graph_flag_we0),
    .current_graph_flag_d0(grp_deheap_sort_fu_583_current_graph_flag_d0),
    .current_graph_flag_q0(current_graph_flag_q0),
    .current_graph_flag_address1(grp_deheap_sort_fu_583_current_graph_flag_address1),
    .current_graph_flag_ce1(grp_deheap_sort_fu_583_current_graph_flag_ce1),
    .current_graph_flag_we1(grp_deheap_sort_fu_583_current_graph_flag_we1),
    .current_graph_flag_d1(grp_deheap_sort_fu_583_current_graph_flag_d1),
    .current_graph_flag_q1(current_graph_flag_q1),
    .result_index_address0(grp_deheap_sort_fu_583_result_index_address0),
    .result_index_ce0(grp_deheap_sort_fu_583_result_index_ce0),
    .result_index_we0(grp_deheap_sort_fu_583_result_index_we0),
    .result_index_d0(grp_deheap_sort_fu_583_result_index_d0),
    .result_dist_address0(grp_deheap_sort_fu_583_result_dist_address0),
    .result_dist_ce0(grp_deheap_sort_fu_583_result_dist_ce0),
    .result_dist_we0(grp_deheap_sort_fu_583_result_dist_we0),
    .result_dist_d0(grp_deheap_sort_fu_583_result_dist_d0)
);

rejection_sample grp_rejection_sample_fu_595(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_rejection_sample_fu_595_ap_start),
    .ap_done(grp_rejection_sample_fu_595_ap_done),
    .ap_idle(grp_rejection_sample_fu_595_ap_idle),
    .ap_ready(grp_rejection_sample_fu_595_ap_ready),
    .m_axi_rng_state_AWVALID(grp_rejection_sample_fu_595_m_axi_rng_state_AWVALID),
    .m_axi_rng_state_AWREADY(hostmem_AWREADY),
    .m_axi_rng_state_AWADDR(grp_rejection_sample_fu_595_m_axi_rng_state_AWADDR),
    .m_axi_rng_state_AWID(grp_rejection_sample_fu_595_m_axi_rng_state_AWID),
    .m_axi_rng_state_AWLEN(grp_rejection_sample_fu_595_m_axi_rng_state_AWLEN),
    .m_axi_rng_state_AWSIZE(grp_rejection_sample_fu_595_m_axi_rng_state_AWSIZE),
    .m_axi_rng_state_AWBURST(grp_rejection_sample_fu_595_m_axi_rng_state_AWBURST),
    .m_axi_rng_state_AWLOCK(grp_rejection_sample_fu_595_m_axi_rng_state_AWLOCK),
    .m_axi_rng_state_AWCACHE(grp_rejection_sample_fu_595_m_axi_rng_state_AWCACHE),
    .m_axi_rng_state_AWPROT(grp_rejection_sample_fu_595_m_axi_rng_state_AWPROT),
    .m_axi_rng_state_AWQOS(grp_rejection_sample_fu_595_m_axi_rng_state_AWQOS),
    .m_axi_rng_state_AWREGION(grp_rejection_sample_fu_595_m_axi_rng_state_AWREGION),
    .m_axi_rng_state_AWUSER(grp_rejection_sample_fu_595_m_axi_rng_state_AWUSER),
    .m_axi_rng_state_WVALID(grp_rejection_sample_fu_595_m_axi_rng_state_WVALID),
    .m_axi_rng_state_WREADY(hostmem_WREADY),
    .m_axi_rng_state_WDATA(grp_rejection_sample_fu_595_m_axi_rng_state_WDATA),
    .m_axi_rng_state_WSTRB(grp_rejection_sample_fu_595_m_axi_rng_state_WSTRB),
    .m_axi_rng_state_WLAST(grp_rejection_sample_fu_595_m_axi_rng_state_WLAST),
    .m_axi_rng_state_WID(grp_rejection_sample_fu_595_m_axi_rng_state_WID),
    .m_axi_rng_state_WUSER(grp_rejection_sample_fu_595_m_axi_rng_state_WUSER),
    .m_axi_rng_state_ARVALID(grp_rejection_sample_fu_595_m_axi_rng_state_ARVALID),
    .m_axi_rng_state_ARREADY(hostmem_ARREADY),
    .m_axi_rng_state_ARADDR(grp_rejection_sample_fu_595_m_axi_rng_state_ARADDR),
    .m_axi_rng_state_ARID(grp_rejection_sample_fu_595_m_axi_rng_state_ARID),
    .m_axi_rng_state_ARLEN(grp_rejection_sample_fu_595_m_axi_rng_state_ARLEN),
    .m_axi_rng_state_ARSIZE(grp_rejection_sample_fu_595_m_axi_rng_state_ARSIZE),
    .m_axi_rng_state_ARBURST(grp_rejection_sample_fu_595_m_axi_rng_state_ARBURST),
    .m_axi_rng_state_ARLOCK(grp_rejection_sample_fu_595_m_axi_rng_state_ARLOCK),
    .m_axi_rng_state_ARCACHE(grp_rejection_sample_fu_595_m_axi_rng_state_ARCACHE),
    .m_axi_rng_state_ARPROT(grp_rejection_sample_fu_595_m_axi_rng_state_ARPROT),
    .m_axi_rng_state_ARQOS(grp_rejection_sample_fu_595_m_axi_rng_state_ARQOS),
    .m_axi_rng_state_ARREGION(grp_rejection_sample_fu_595_m_axi_rng_state_ARREGION),
    .m_axi_rng_state_ARUSER(grp_rejection_sample_fu_595_m_axi_rng_state_ARUSER),
    .m_axi_rng_state_RVALID(hostmem_RVALID),
    .m_axi_rng_state_RREADY(grp_rejection_sample_fu_595_m_axi_rng_state_RREADY),
    .m_axi_rng_state_RDATA(hostmem_RDATA),
    .m_axi_rng_state_RLAST(hostmem_RLAST),
    .m_axi_rng_state_RID(hostmem_RID),
    .m_axi_rng_state_RUSER(hostmem_RUSER),
    .m_axi_rng_state_RRESP(hostmem_RRESP),
    .m_axi_rng_state_BVALID(hostmem_BVALID),
    .m_axi_rng_state_BREADY(grp_rejection_sample_fu_595_m_axi_rng_state_BREADY),
    .m_axi_rng_state_BRESP(hostmem_BRESP),
    .m_axi_rng_state_BID(hostmem_BID),
    .m_axi_rng_state_BUSER(hostmem_BUSER),
    .rng_state3(rng_state3_reg_1134),
    .result_address0(grp_rejection_sample_fu_595_result_address0),
    .result_ce0(grp_rejection_sample_fu_595_result_ce0),
    .result_we0(grp_rejection_sample_fu_595_result_we0),
    .result_d0(grp_rejection_sample_fu_595_result_d0),
    .result_q0(indices_q0)
);

tau_rand grp_tau_rand_fu_604(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_tau_rand_fu_604_ap_start),
    .ap_done(grp_tau_rand_fu_604_ap_done),
    .ap_idle(grp_tau_rand_fu_604_ap_idle),
    .ap_ready(grp_tau_rand_fu_604_ap_ready),
    .m_axi_state_AWVALID(grp_tau_rand_fu_604_m_axi_state_AWVALID),
    .m_axi_state_AWREADY(hostmem_AWREADY),
    .m_axi_state_AWADDR(grp_tau_rand_fu_604_m_axi_state_AWADDR),
    .m_axi_state_AWID(grp_tau_rand_fu_604_m_axi_state_AWID),
    .m_axi_state_AWLEN(grp_tau_rand_fu_604_m_axi_state_AWLEN),
    .m_axi_state_AWSIZE(grp_tau_rand_fu_604_m_axi_state_AWSIZE),
    .m_axi_state_AWBURST(grp_tau_rand_fu_604_m_axi_state_AWBURST),
    .m_axi_state_AWLOCK(grp_tau_rand_fu_604_m_axi_state_AWLOCK),
    .m_axi_state_AWCACHE(grp_tau_rand_fu_604_m_axi_state_AWCACHE),
    .m_axi_state_AWPROT(grp_tau_rand_fu_604_m_axi_state_AWPROT),
    .m_axi_state_AWQOS(grp_tau_rand_fu_604_m_axi_state_AWQOS),
    .m_axi_state_AWREGION(grp_tau_rand_fu_604_m_axi_state_AWREGION),
    .m_axi_state_AWUSER(grp_tau_rand_fu_604_m_axi_state_AWUSER),
    .m_axi_state_WVALID(grp_tau_rand_fu_604_m_axi_state_WVALID),
    .m_axi_state_WREADY(hostmem_WREADY),
    .m_axi_state_WDATA(grp_tau_rand_fu_604_m_axi_state_WDATA),
    .m_axi_state_WSTRB(grp_tau_rand_fu_604_m_axi_state_WSTRB),
    .m_axi_state_WLAST(grp_tau_rand_fu_604_m_axi_state_WLAST),
    .m_axi_state_WID(grp_tau_rand_fu_604_m_axi_state_WID),
    .m_axi_state_WUSER(grp_tau_rand_fu_604_m_axi_state_WUSER),
    .m_axi_state_ARVALID(grp_tau_rand_fu_604_m_axi_state_ARVALID),
    .m_axi_state_ARREADY(hostmem_ARREADY),
    .m_axi_state_ARADDR(grp_tau_rand_fu_604_m_axi_state_ARADDR),
    .m_axi_state_ARID(grp_tau_rand_fu_604_m_axi_state_ARID),
    .m_axi_state_ARLEN(grp_tau_rand_fu_604_m_axi_state_ARLEN),
    .m_axi_state_ARSIZE(grp_tau_rand_fu_604_m_axi_state_ARSIZE),
    .m_axi_state_ARBURST(grp_tau_rand_fu_604_m_axi_state_ARBURST),
    .m_axi_state_ARLOCK(grp_tau_rand_fu_604_m_axi_state_ARLOCK),
    .m_axi_state_ARCACHE(grp_tau_rand_fu_604_m_axi_state_ARCACHE),
    .m_axi_state_ARPROT(grp_tau_rand_fu_604_m_axi_state_ARPROT),
    .m_axi_state_ARQOS(grp_tau_rand_fu_604_m_axi_state_ARQOS),
    .m_axi_state_ARREGION(grp_tau_rand_fu_604_m_axi_state_ARREGION),
    .m_axi_state_ARUSER(grp_tau_rand_fu_604_m_axi_state_ARUSER),
    .m_axi_state_RVALID(hostmem_RVALID),
    .m_axi_state_RREADY(grp_tau_rand_fu_604_m_axi_state_RREADY),
    .m_axi_state_RDATA(hostmem_RDATA),
    .m_axi_state_RLAST(hostmem_RLAST),
    .m_axi_state_RID(hostmem_RID),
    .m_axi_state_RUSER(hostmem_RUSER),
    .m_axi_state_RRESP(hostmem_RRESP),
    .m_axi_state_BVALID(hostmem_BVALID),
    .m_axi_state_BREADY(grp_tau_rand_fu_604_m_axi_state_BREADY),
    .m_axi_state_BRESP(hostmem_BRESP),
    .m_axi_state_BID(hostmem_BID),
    .m_axi_state_BUSER(hostmem_BUSER),
    .rng_state3(rng_state3_reg_1134),
    .ap_return(grp_tau_rand_fu_604_ap_return)
);

heap_push_opt grp_heap_push_opt_fu_611(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_heap_push_opt_fu_611_ap_start),
    .ap_done(grp_heap_push_opt_fu_611_ap_done),
    .ap_idle(grp_heap_push_opt_fu_611_ap_idle),
    .ap_ready(grp_heap_push_opt_fu_611_ap_ready),
    .current_graph_index_address0(grp_heap_push_opt_fu_611_current_graph_index_address0),
    .current_graph_index_ce0(grp_heap_push_opt_fu_611_current_graph_index_ce0),
    .current_graph_index_we0(grp_heap_push_opt_fu_611_current_graph_index_we0),
    .current_graph_index_d0(grp_heap_push_opt_fu_611_current_graph_index_d0),
    .current_graph_index_q0(current_graph_index_q0),
    .current_graph_index_address1(grp_heap_push_opt_fu_611_current_graph_index_address1),
    .current_graph_index_ce1(grp_heap_push_opt_fu_611_current_graph_index_ce1),
    .current_graph_index_we1(grp_heap_push_opt_fu_611_current_graph_index_we1),
    .current_graph_index_d1(grp_heap_push_opt_fu_611_current_graph_index_d1),
    .current_graph_index_q1(current_graph_index_q1),
    .current_graph_dist_address0(grp_heap_push_opt_fu_611_current_graph_dist_address0),
    .current_graph_dist_ce0(grp_heap_push_opt_fu_611_current_graph_dist_ce0),
    .current_graph_dist_we0(grp_heap_push_opt_fu_611_current_graph_dist_we0),
    .current_graph_dist_d0(grp_heap_push_opt_fu_611_current_graph_dist_d0),
    .current_graph_dist_q0(current_graph_dist_q0),
    .current_graph_dist_address1(grp_heap_push_opt_fu_611_current_graph_dist_address1),
    .current_graph_dist_ce1(grp_heap_push_opt_fu_611_current_graph_dist_ce1),
    .current_graph_dist_we1(grp_heap_push_opt_fu_611_current_graph_dist_we1),
    .current_graph_dist_d1(grp_heap_push_opt_fu_611_current_graph_dist_d1),
    .current_graph_dist_q1(current_graph_dist_q1),
    .current_graph_flag_address0(grp_heap_push_opt_fu_611_current_graph_flag_address0),
    .current_graph_flag_ce0(grp_heap_push_opt_fu_611_current_graph_flag_ce0),
    .current_graph_flag_we0(grp_heap_push_opt_fu_611_current_graph_flag_we0),
    .current_graph_flag_d0(grp_heap_push_opt_fu_611_current_graph_flag_d0),
    .current_graph_flag_q0(current_graph_flag_q0),
    .current_graph_flag_address1(grp_heap_push_opt_fu_611_current_graph_flag_address1),
    .current_graph_flag_ce1(grp_heap_push_opt_fu_611_current_graph_flag_ce1),
    .current_graph_flag_we1(grp_heap_push_opt_fu_611_current_graph_flag_we1),
    .current_graph_flag_d1(grp_heap_push_opt_fu_611_current_graph_flag_d1),
    .current_graph_flag_q1(current_graph_flag_q1),
    .row(q_reg_1381)
);

heap_push grp_heap_push_fu_622(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_heap_push_fu_622_ap_start),
    .ap_done(grp_heap_push_fu_622_ap_done),
    .ap_idle(grp_heap_push_fu_622_ap_idle),
    .ap_ready(grp_heap_push_fu_622_ap_ready),
    .current_graph_index_address0(grp_heap_push_fu_622_current_graph_index_address0),
    .current_graph_index_ce0(grp_heap_push_fu_622_current_graph_index_ce0),
    .current_graph_index_we0(grp_heap_push_fu_622_current_graph_index_we0),
    .current_graph_index_d0(grp_heap_push_fu_622_current_graph_index_d0),
    .current_graph_index_q0(current_graph_index_q0),
    .current_graph_dist_address0(grp_heap_push_fu_622_current_graph_dist_address0),
    .current_graph_dist_ce0(grp_heap_push_fu_622_current_graph_dist_ce0),
    .current_graph_dist_we0(grp_heap_push_fu_622_current_graph_dist_we0),
    .current_graph_dist_d0(grp_heap_push_fu_622_current_graph_dist_d0),
    .current_graph_dist_q0(current_graph_dist_q0),
    .current_graph_flag_address0(grp_heap_push_fu_622_current_graph_flag_address0),
    .current_graph_flag_ce0(grp_heap_push_fu_622_current_graph_flag_ce0),
    .current_graph_flag_we0(grp_heap_push_fu_622_current_graph_flag_we0),
    .current_graph_flag_d0(grp_heap_push_fu_622_current_graph_flag_d0),
    .current_graph_flag_q0(current_graph_flag_q0),
    .row(grp_heap_push_fu_622_row),
    .weight(d_reg_466),
    .index(grp_heap_push_fu_622_index)
);

nn_descent_mul_32lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nn_descent_mul_32lbW_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_reg_1266),
    .din1(tmp_i_reg_1266),
    .ce(1'b1),
    .dout(grp_fu_916_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state9 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state42))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state41) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == grp_deheap_sort_fu_583_ap_done)))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state42)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state42 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b1 == ap_CS_fsm_state41) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == grp_deheap_sort_fu_583_ap_done)))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter0_state50))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == hostmem_BVALID)))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp2_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state50)) begin
                ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state50 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp2_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == hostmem_BVALID)))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_build_candidates_fu_566_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2))) begin
            ap_reg_grp_build_candidates_fu_566_ap_start <= 1'b1;
        end else if ((1'b1 == grp_build_candidates_fu_566_ap_ready)) begin
            ap_reg_grp_build_candidates_fu_566_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_deheap_sort_fu_583_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond2_fu_1000_p2))) begin
            ap_reg_grp_deheap_sort_fu_583_ap_start <= 1'b1;
        end else if ((1'b1 == grp_deheap_sort_fu_583_ap_ready)) begin
            ap_reg_grp_deheap_sort_fu_583_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_heap_push_fu_622_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state19) & (exitcond_i_fu_869_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state25))) begin
            ap_reg_grp_heap_push_fu_622_ap_start <= 1'b1;
        end else if ((1'b1 == grp_heap_push_fu_622_ap_ready)) begin
            ap_reg_grp_heap_push_fu_622_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_heap_push_opt_fu_611_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state37) & (((1'd0 == tmp_17_reg_1386) & (1'd0 == tmp_36_reg_1390)) | ((1'd0 == tmp_17_reg_1386) & (1'd0 == grp_fu_645_p2)))) | (1'b1 == ap_CS_fsm_state39))) begin
            ap_reg_grp_heap_push_opt_fu_611_ap_start <= 1'b1;
        end else if ((1'b1 == grp_heap_push_opt_fu_611_ap_ready)) begin
            ap_reg_grp_heap_push_opt_fu_611_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_rejection_sample_fu_595_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2))) begin
            ap_reg_grp_rejection_sample_fu_595_ap_start <= 1'b1;
        end else if ((1'b1 == grp_rejection_sample_fu_595_ap_ready)) begin
            ap_reg_grp_rejection_sample_fu_595_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_tau_rand_fu_604_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3))) begin
            ap_reg_grp_tau_rand_fu_604_ap_start <= 1'b1;
        end else if ((1'b1 == grp_tau_rand_fu_604_ap_ready)) begin
            ap_reg_grp_tau_rand_fu_604_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_hostmem_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_sig_ioackin_hostmem_ARREADY == 1'b1)) begin
                ap_reg_ioackin_hostmem_ARREADY <= 1'b0;
            end else if ((1'b1 == hostmem_ARREADY)) begin
                ap_reg_ioackin_hostmem_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_hostmem_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state41) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == grp_deheap_sort_fu_583_ap_done))) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == hostmem_BVALID))))) begin
            ap_reg_ioackin_hostmem_AWREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state41) & (1'b1 == hostmem_AWREADY) & (grp_deheap_sort_fu_583_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (1'b1 == hostmem_AWREADY) & (hostmem_BVALID == 1'b1)))) begin
            ap_reg_ioackin_hostmem_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_hostmem_WREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403) & (ap_block_pp1_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0) & (ap_block_pp2_stage0_flag00011001 == 1'b0)))) begin
            ap_reg_ioackin_hostmem_WREADY <= 1'b0;
        end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403) & (1'b1 == hostmem_WREADY) & (ap_block_pp1_stage0_flag00001001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0) & (1'b1 == hostmem_WREADY) & (ap_block_pp2_stage0_flag00001001 == 1'b0)))) begin
            ap_reg_ioackin_hostmem_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        d_reg_466 <= result_1_fu_920_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        d_reg_466 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (1'd1 == exitcond1_fu_1042_p2))) begin
        i2_reg_511 <= i_3_reg_1321;
    end else if (((1'b1 == ap_CS_fsm_state29) & (grp_build_candidates_fu_566_ap_done == 1'b1))) begin
        i2_reg_511 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_i_reg_478 <= i_4_reg_1246;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_i_reg_478 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond4_fu_935_p2))) begin
        i_neighbor1_reg_500 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond3_fu_967_p2))) begin
        i_neighbor1_reg_500 <= i_neighbor_2_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == exitcond8_fu_736_p2))) begin
        i_neighbor_reg_432 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond7_fu_768_p2))) begin
        i_neighbor_reg_432 <= i_neighbor_1_fu_774_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_fu_736_p2 == 1'd1))) begin
        i_reg_443 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond5_fu_834_p2 == 1'd1))) begin
        i_reg_443 <= i_2_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond10_fu_1090_p2))) begin
        indvar1_reg_544 <= indvar_next1_fu_1096_p2;
    end else if (((1'b1 == ap_CS_fsm_state41) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == grp_deheap_sort_fu_583_ap_done)))) begin
        indvar1_reg_544 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == hostmem_BVALID)))) begin
        indvar2_reg_555 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond11_fu_1107_p2))) begin
        indvar2_reg_555 <= indvar_next2_fu_1113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond9_reg_1162) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        indvar_reg_409 <= indvar_next_reg_1166;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_reg_409 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond2_fu_1000_p2))) begin
        j3_reg_522 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state34) & ((1'd1 == tmp_16_reg_1350) | (1'd0 == tmp_22_reg_1354) | (1'd1 == exitcond_fu_1068_p2)))) begin
        j3_reg_522 <= j_2_reg_1335;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (grp_heap_push_fu_622_ap_done == 1'b1))) begin
        j_reg_455 <= j_1_reg_1223;
    end else if (((1'b1 == ap_CS_fsm_state16) & (grp_rejection_sample_fu_595_ap_done == 1'b1))) begin
        j_reg_455 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350) & (ap_block_state33_on_subcall_done == 1'b0) & (1'd1 == grp_tau_rand_fu_604_ap_return))) begin
        k_reg_533 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) & (ap_block_state40_on_subcall_done == 1'b0))) begin
        k_reg_533 <= k_2_reg_1366;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond6_fu_805_p2))) begin
        n_point_reg_489 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond3_fu_967_p2))) begin
        n_point_reg_489 <= n_point_1_reg_1295;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        n_points_reg_421 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == exitcond7_fu_768_p2))) begin
        n_points_reg_421 <= n_points_1_reg_1179;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond9_reg_1162 <= exitcond9_reg_1162;
        ap_reg_pp0_iter1_indvar_reg_409 <= indvar_reg_409;
        exitcond9_reg_1162 <= exitcond9_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond10_reg_1403 <= exitcond10_reg_1403;
        exitcond10_reg_1403 <= exitcond10_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp2_iter1_exitcond11_reg_1422 <= exitcond11_reg_1422;
        exitcond11_reg_1422 <= exitcond11_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350) & (ap_block_state33_on_subcall_done == 1'b0) & (1'd1 == grp_tau_rand_fu_604_ap_return))) begin
        candidate_neighbors_6_reg_1358 <= tmp_32_reg_1340;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        data_in1_reg_1141 <= {{data_in[31:2]}};
        result_out_dist7_reg_1124 <= {{result_out_dist[31:2]}};
        result_out_index5_reg_1129 <= {{result_out_index[31:2]}};
        rng_state3_reg_1134 <= {{rng_state[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        extLd_cast_reg_1282 <= extLd_cast_fu_925_p1;
        i_cast_cast_reg_1287[6 : 0] <= i_cast_cast_fu_930_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        hostmem_addr_1_reg_1157[29 : 0] <= tmp_19_fu_710_p1[29 : 0];
        hostmem_addr_reg_1152[29 : 0] <= tmp_18_fu_701_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond9_reg_1162) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        hostmem_addr_2_read_reg_1171 <= hostmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_2_reg_1210 <= i_2_fu_811_p2;
        i_cast1_reg_1202[6 : 0] <= i_cast1_fu_801_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_3_reg_1321 <= i_3_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_4_reg_1246 <= i_4_fu_875_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond_i_fu_869_p2 == 1'd1))) begin
        i_cast_cast1_reg_1261[6 : 0] <= i_cast_cast1_fu_905_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'd0 == exitcond5_fu_834_p2))) begin
        indices_addr_reg_1228 <= tmp_25_fu_846_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indices_load_reg_1233 <= indices_q0;
        tmp_26_reg_1238 <= tmp_26_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_next_reg_1166 <= indvar_next_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_1_reg_1223 <= j_1_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_2_reg_1335 <= j_2_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_16_reg_1350) & (1'b1 == ap_CS_fsm_state34) & (1'd1 == tmp_22_reg_1354))) begin
        k_2_reg_1366 <= k_2_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        n_point_1_reg_1295 <= n_point_1_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        n_points_1_reg_1179 <= n_points_1_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond4_fu_935_p2))) begin
        p_shl3_reg_1300[10 : 4] <= p_shl3_fu_947_p3[10 : 4];
        p_shl4_reg_1305[8 : 2] <= p_shl4_fu_955_p3[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == exitcond8_fu_736_p2))) begin
        p_shl9_reg_1189[7 : 1] <= p_shl9_fu_756_p3[7 : 1];
        p_shl_reg_1184[9 : 3] <= p_shl_fu_748_p3[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        q_reg_1381 <= candidate_neighbors_s_q0;
        tmp_17_reg_1386 <= candidate_neighbors_s_q0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (exitcond11_reg_1422 == 1'd0))) begin
        result_dist_load_reg_1436 <= result_dist_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond10_reg_1403))) begin
        result_index_load_reg_1417 <= result_index_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_126_i_reg_1272 <= grp_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_16_reg_1350 <= candidate_neighbors_s_q0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350) & (ap_block_state33_on_subcall_done == 1'b0))) begin
        tmp_22_reg_1354 <= grp_tau_rand_fu_604_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond2_fu_1000_p2))) begin
        tmp_27_reg_1326[10 : 2] <= tmp_27_fu_1032_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (1'd0 == exitcond1_fu_1042_p2))) begin
        tmp_32_reg_1340[10 : 0] <= tmp_32_fu_1059_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_16_reg_1350) & (1'b1 == ap_CS_fsm_state34) & (1'd1 == tmp_22_reg_1354) & (1'd0 == exitcond_fu_1068_p2))) begin
        tmp_35_reg_1371[10 : 0] <= tmp_35_fu_1085_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_36_reg_1390 <= grp_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (1'd0 == tmp_17_reg_1386) & (1'd1 == tmp_36_reg_1390))) begin
        tmp_37_reg_1399 <= grp_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_i_reg_1266 <= tmp_i_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_rejection_sample_fu_595_ap_done == 1'b1))) begin
        tmp_s_reg_1215 <= tmp_s_fu_829_p2;
    end
end

always @ (*) begin
    if ((exitcond9_fu_719_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond10_fu_1090_p2)) begin
        ap_condition_pp1_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond11_fu_1107_p2)) begin
        ap_condition_pp2_exit_iter0_state50 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state50 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (hostmem_BVALID == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp2_iter0) & (1'b0 == ap_enable_reg_pp2_iter1) & (1'b0 == ap_enable_reg_pp2_iter2))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (hostmem_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_hostmem_ARREADY)) begin
        ap_sig_ioackin_hostmem_ARREADY = hostmem_ARREADY;
    end else begin
        ap_sig_ioackin_hostmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_hostmem_AWREADY)) begin
        ap_sig_ioackin_hostmem_AWREADY = hostmem_AWREADY;
    end else begin
        ap_sig_ioackin_hostmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_hostmem_WREADY)) begin
        ap_sig_ioackin_hostmem_WREADY = hostmem_WREADY;
    end else begin
        ap_sig_ioackin_hostmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_1_address0 = tmp_29_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_1_address0 = grp_build_candidates_fu_566_candidate_neighbors_13_address0;
    end else begin
        candidate_neighbors_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_1_ce0 = grp_build_candidates_fu_566_candidate_neighbors_13_ce0;
    end else begin
        candidate_neighbors_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_1_d0 = 32'd2147483647;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_1_d0 = grp_build_candidates_fu_566_candidate_neighbors_13_d0;
    end else begin
        candidate_neighbors_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond3_fu_967_p2))) begin
        candidate_neighbors_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_1_we0 = grp_build_candidates_fu_566_candidate_neighbors_13_we0;
    end else begin
        candidate_neighbors_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        candidate_neighbors_2_address0 = tmp_35_reg_1371;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        candidate_neighbors_2_address0 = candidate_neighbors_6_reg_1358;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_2_address0 = tmp_29_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_2_address0 = grp_build_candidates_fu_566_candidate_neighbors_14_address0;
    end else begin
        candidate_neighbors_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        candidate_neighbors_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_2_ce0 = grp_build_candidates_fu_566_candidate_neighbors_14_ce0;
    end else begin
        candidate_neighbors_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_2_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_2_d0 = grp_build_candidates_fu_566_candidate_neighbors_14_d0;
    end else begin
        candidate_neighbors_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond3_fu_967_p2))) begin
        candidate_neighbors_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_2_we0 = grp_build_candidates_fu_566_candidate_neighbors_14_we0;
    end else begin
        candidate_neighbors_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        candidate_neighbors_s_address0 = tmp_35_fu_1085_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        candidate_neighbors_s_address0 = tmp_32_fu_1059_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_s_address0 = tmp_29_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_s_address0 = grp_build_candidates_fu_566_candidate_neighbors_s_address0;
    end else begin
        candidate_neighbors_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34))) begin
        candidate_neighbors_s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_s_ce0 = grp_build_candidates_fu_566_candidate_neighbors_s_ce0;
    end else begin
        candidate_neighbors_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        candidate_neighbors_s_d0 = 32'd4294967295;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_s_d0 = grp_build_candidates_fu_566_candidate_neighbors_s_d0;
    end else begin
        candidate_neighbors_s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond3_fu_967_p2))) begin
        candidate_neighbors_s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        candidate_neighbors_s_we0 = grp_build_candidates_fu_566_candidate_neighbors_s_we0;
    end else begin
        candidate_neighbors_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_dist_address0 = tmp_24_fu_794_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_dist_address0 = grp_heap_push_fu_622_current_graph_dist_address0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_address0 = grp_heap_push_opt_fu_611_current_graph_dist_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_address0 = grp_deheap_sort_fu_583_current_graph_dist_address0;
    end else begin
        current_graph_dist_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_address1 = grp_heap_push_opt_fu_611_current_graph_dist_address1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_address1 = grp_deheap_sort_fu_583_current_graph_dist_address1;
    end else begin
        current_graph_dist_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_dist_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_dist_ce0 = grp_heap_push_fu_622_current_graph_dist_ce0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_ce0 = grp_heap_push_opt_fu_611_current_graph_dist_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_ce0 = grp_deheap_sort_fu_583_current_graph_dist_ce0;
    end else begin
        current_graph_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_ce1 = grp_heap_push_opt_fu_611_current_graph_dist_ce1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_ce1 = grp_deheap_sort_fu_583_current_graph_dist_ce1;
    end else begin
        current_graph_dist_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_dist_d0 = 32'd2147483647;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_dist_d0 = grp_heap_push_fu_622_current_graph_dist_d0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_d0 = grp_heap_push_opt_fu_611_current_graph_dist_d0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_d0 = grp_deheap_sort_fu_583_current_graph_dist_d0;
    end else begin
        current_graph_dist_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_d1 = grp_heap_push_opt_fu_611_current_graph_dist_d1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_d1 = grp_deheap_sort_fu_583_current_graph_dist_d1;
    end else begin
        current_graph_dist_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond7_fu_768_p2))) begin
        current_graph_dist_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_dist_we0 = grp_heap_push_fu_622_current_graph_dist_we0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_we0 = grp_heap_push_opt_fu_611_current_graph_dist_we0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_we0 = grp_deheap_sort_fu_583_current_graph_dist_we0;
    end else begin
        current_graph_dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_dist_we1 = grp_heap_push_opt_fu_611_current_graph_dist_we1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_dist_we1 = grp_deheap_sort_fu_583_current_graph_dist_we1;
    end else begin
        current_graph_dist_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_flag_address0 = tmp_24_fu_794_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_flag_address0 = grp_heap_push_fu_622_current_graph_flag_address0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_address0 = grp_heap_push_opt_fu_611_current_graph_flag_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_address0 = grp_deheap_sort_fu_583_current_graph_flag_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        current_graph_flag_address0 = grp_build_candidates_fu_566_current_graph_flag_address0;
    end else begin
        current_graph_flag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_address1 = grp_heap_push_opt_fu_611_current_graph_flag_address1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_address1 = grp_deheap_sort_fu_583_current_graph_flag_address1;
    end else begin
        current_graph_flag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_flag_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_flag_ce0 = grp_heap_push_fu_622_current_graph_flag_ce0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_ce0 = grp_heap_push_opt_fu_611_current_graph_flag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_ce0 = grp_deheap_sort_fu_583_current_graph_flag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        current_graph_flag_ce0 = grp_build_candidates_fu_566_current_graph_flag_ce0;
    end else begin
        current_graph_flag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_ce1 = grp_heap_push_opt_fu_611_current_graph_flag_ce1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_ce1 = grp_deheap_sort_fu_583_current_graph_flag_ce1;
    end else begin
        current_graph_flag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_flag_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_flag_d0 = grp_heap_push_fu_622_current_graph_flag_d0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_d0 = grp_heap_push_opt_fu_611_current_graph_flag_d0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_d0 = grp_deheap_sort_fu_583_current_graph_flag_d0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        current_graph_flag_d0 = grp_build_candidates_fu_566_current_graph_flag_d0;
    end else begin
        current_graph_flag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_d1 = grp_heap_push_opt_fu_611_current_graph_flag_d1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_d1 = grp_deheap_sort_fu_583_current_graph_flag_d1;
    end else begin
        current_graph_flag_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond7_fu_768_p2))) begin
        current_graph_flag_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_flag_we0 = grp_heap_push_fu_622_current_graph_flag_we0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_we0 = grp_heap_push_opt_fu_611_current_graph_flag_we0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_we0 = grp_deheap_sort_fu_583_current_graph_flag_we0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        current_graph_flag_we0 = grp_build_candidates_fu_566_current_graph_flag_we0;
    end else begin
        current_graph_flag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_flag_we1 = grp_heap_push_opt_fu_611_current_graph_flag_we1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_flag_we1 = grp_deheap_sort_fu_583_current_graph_flag_we1;
    end else begin
        current_graph_flag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_index_address0 = tmp_24_fu_794_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_index_address0 = grp_heap_push_fu_622_current_graph_index_address0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_address0 = grp_heap_push_opt_fu_611_current_graph_index_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_address0 = grp_deheap_sort_fu_583_current_graph_index_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        current_graph_index_address0 = grp_build_candidates_fu_566_current_graph_index_address0;
    end else begin
        current_graph_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_address1 = grp_heap_push_opt_fu_611_current_graph_index_address1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_address1 = grp_deheap_sort_fu_583_current_graph_index_address1;
    end else begin
        current_graph_index_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_index_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_index_ce0 = grp_heap_push_fu_622_current_graph_index_ce0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_ce0 = grp_heap_push_opt_fu_611_current_graph_index_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_ce0 = grp_deheap_sort_fu_583_current_graph_index_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        current_graph_index_ce0 = grp_build_candidates_fu_566_current_graph_index_ce0;
    end else begin
        current_graph_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_ce1 = grp_heap_push_opt_fu_611_current_graph_index_ce1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_ce1 = grp_deheap_sort_fu_583_current_graph_index_ce1;
    end else begin
        current_graph_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        current_graph_index_d0 = 32'd4294967295;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_index_d0 = grp_heap_push_fu_622_current_graph_index_d0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_d0 = grp_heap_push_opt_fu_611_current_graph_index_d0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_d0 = grp_deheap_sort_fu_583_current_graph_index_d0;
    end else begin
        current_graph_index_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_d1 = grp_heap_push_opt_fu_611_current_graph_index_d1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_d1 = grp_deheap_sort_fu_583_current_graph_index_d1;
    end else begin
        current_graph_index_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond7_fu_768_p2))) begin
        current_graph_index_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        current_graph_index_we0 = grp_heap_push_fu_622_current_graph_index_we0;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_we0 = grp_heap_push_opt_fu_611_current_graph_index_we0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_we0 = grp_deheap_sort_fu_583_current_graph_index_we0;
    end else begin
        current_graph_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_predicate_op280_call_state40)))) begin
        current_graph_index_we1 = grp_heap_push_opt_fu_611_current_graph_index_we1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        current_graph_index_we1 = grp_deheap_sort_fu_583_current_graph_index_we1;
    end else begin
        current_graph_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        data_address0 = sum_i_cast_fu_890_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        data_address0 = tmp_fu_731_p1;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond9_reg_1162))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_heap_push_fu_622_index = i_cast_cast_reg_1287;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_heap_push_fu_622_index = indices_load_reg_1233;
    end else begin
        grp_heap_push_fu_622_index = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_heap_push_fu_622_row = extLd_cast_reg_1282;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_heap_push_fu_622_row = i_cast_cast1_reg_1261;
    end else begin
        grp_heap_push_fu_622_row = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_hostmem_ARREADY))) begin
        hostmem_ARADDR = tmp_21_fu_691_p1;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARADDR = grp_tau_rand_fu_604_m_axi_state_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARADDR = grp_rejection_sample_fu_595_m_axi_rng_state_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARADDR = grp_build_candidates_fu_566_m_axi_rng_state_ARADDR;
    end else begin
        hostmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARBURST = grp_tau_rand_fu_604_m_axi_state_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARBURST = grp_rejection_sample_fu_595_m_axi_rng_state_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARBURST = grp_build_candidates_fu_566_m_axi_rng_state_ARBURST;
    end else begin
        hostmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARCACHE = grp_tau_rand_fu_604_m_axi_state_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARCACHE = grp_rejection_sample_fu_595_m_axi_rng_state_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARCACHE = grp_build_candidates_fu_566_m_axi_rng_state_ARCACHE;
    end else begin
        hostmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARID = grp_tau_rand_fu_604_m_axi_state_ARID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARID = grp_rejection_sample_fu_595_m_axi_rng_state_ARID;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARID = grp_build_candidates_fu_566_m_axi_rng_state_ARID;
    end else begin
        hostmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_hostmem_ARREADY))) begin
        hostmem_ARLEN = 32'd300;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARLEN = grp_tau_rand_fu_604_m_axi_state_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARLEN = grp_rejection_sample_fu_595_m_axi_rng_state_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARLEN = grp_build_candidates_fu_566_m_axi_rng_state_ARLEN;
    end else begin
        hostmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARLOCK = grp_tau_rand_fu_604_m_axi_state_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARLOCK = grp_rejection_sample_fu_595_m_axi_rng_state_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARLOCK = grp_build_candidates_fu_566_m_axi_rng_state_ARLOCK;
    end else begin
        hostmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARPROT = grp_tau_rand_fu_604_m_axi_state_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARPROT = grp_rejection_sample_fu_595_m_axi_rng_state_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARPROT = grp_build_candidates_fu_566_m_axi_rng_state_ARPROT;
    end else begin
        hostmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARQOS = grp_tau_rand_fu_604_m_axi_state_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARQOS = grp_rejection_sample_fu_595_m_axi_rng_state_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARQOS = grp_build_candidates_fu_566_m_axi_rng_state_ARQOS;
    end else begin
        hostmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARREGION = grp_tau_rand_fu_604_m_axi_state_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARREGION = grp_rejection_sample_fu_595_m_axi_rng_state_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARREGION = grp_build_candidates_fu_566_m_axi_rng_state_ARREGION;
    end else begin
        hostmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARSIZE = grp_tau_rand_fu_604_m_axi_state_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARSIZE = grp_rejection_sample_fu_595_m_axi_rng_state_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARSIZE = grp_build_candidates_fu_566_m_axi_rng_state_ARSIZE;
    end else begin
        hostmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARUSER = grp_tau_rand_fu_604_m_axi_state_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARUSER = grp_rejection_sample_fu_595_m_axi_rng_state_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARUSER = grp_build_candidates_fu_566_m_axi_rng_state_ARUSER;
    end else begin
        hostmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_hostmem_ARREADY))) begin
        hostmem_ARVALID = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_ARVALID = grp_tau_rand_fu_604_m_axi_state_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_ARVALID = grp_rejection_sample_fu_595_m_axi_rng_state_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_ARVALID = grp_build_candidates_fu_566_m_axi_rng_state_ARVALID;
    end else begin
        hostmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_reg_ioackin_hostmem_AWREADY) & (hostmem_BVALID == 1'b1))) begin
        hostmem_AWADDR = hostmem_addr_reg_1152;
    end else if (((1'b1 == ap_CS_fsm_state41) & (grp_deheap_sort_fu_583_ap_done == 1'b1) & (1'b0 == ap_reg_ioackin_hostmem_AWREADY))) begin
        hostmem_AWADDR = hostmem_addr_1_reg_1157;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWADDR = grp_tau_rand_fu_604_m_axi_state_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWADDR = grp_rejection_sample_fu_595_m_axi_rng_state_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWADDR = grp_build_candidates_fu_566_m_axi_rng_state_AWADDR;
    end else begin
        hostmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWBURST = grp_tau_rand_fu_604_m_axi_state_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWBURST = grp_rejection_sample_fu_595_m_axi_rng_state_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWBURST = grp_build_candidates_fu_566_m_axi_rng_state_AWBURST;
    end else begin
        hostmem_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWCACHE = grp_tau_rand_fu_604_m_axi_state_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWCACHE = grp_rejection_sample_fu_595_m_axi_rng_state_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWCACHE = grp_build_candidates_fu_566_m_axi_rng_state_AWCACHE;
    end else begin
        hostmem_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWID = grp_tau_rand_fu_604_m_axi_state_AWID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWID = grp_rejection_sample_fu_595_m_axi_rng_state_AWID;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWID = grp_build_candidates_fu_566_m_axi_rng_state_AWID;
    end else begin
        hostmem_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state41) & (grp_deheap_sort_fu_583_ap_done == 1'b1) & (1'b0 == ap_reg_ioackin_hostmem_AWREADY)) | ((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_reg_ioackin_hostmem_AWREADY) & (hostmem_BVALID == 1'b1)))) begin
        hostmem_AWLEN = 32'd1000;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWLEN = grp_tau_rand_fu_604_m_axi_state_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWLEN = grp_rejection_sample_fu_595_m_axi_rng_state_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWLEN = grp_build_candidates_fu_566_m_axi_rng_state_AWLEN;
    end else begin
        hostmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWLOCK = grp_tau_rand_fu_604_m_axi_state_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWLOCK = grp_rejection_sample_fu_595_m_axi_rng_state_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWLOCK = grp_build_candidates_fu_566_m_axi_rng_state_AWLOCK;
    end else begin
        hostmem_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWPROT = grp_tau_rand_fu_604_m_axi_state_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWPROT = grp_rejection_sample_fu_595_m_axi_rng_state_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWPROT = grp_build_candidates_fu_566_m_axi_rng_state_AWPROT;
    end else begin
        hostmem_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWQOS = grp_tau_rand_fu_604_m_axi_state_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWQOS = grp_rejection_sample_fu_595_m_axi_rng_state_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWQOS = grp_build_candidates_fu_566_m_axi_rng_state_AWQOS;
    end else begin
        hostmem_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWREGION = grp_tau_rand_fu_604_m_axi_state_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWREGION = grp_rejection_sample_fu_595_m_axi_rng_state_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWREGION = grp_build_candidates_fu_566_m_axi_rng_state_AWREGION;
    end else begin
        hostmem_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWSIZE = grp_tau_rand_fu_604_m_axi_state_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWSIZE = grp_rejection_sample_fu_595_m_axi_rng_state_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWSIZE = grp_build_candidates_fu_566_m_axi_rng_state_AWSIZE;
    end else begin
        hostmem_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWUSER = grp_tau_rand_fu_604_m_axi_state_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWUSER = grp_rejection_sample_fu_595_m_axi_rng_state_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWUSER = grp_build_candidates_fu_566_m_axi_rng_state_AWUSER;
    end else begin
        hostmem_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state41) & (grp_deheap_sort_fu_583_ap_done == 1'b1) & (1'b0 == ap_reg_ioackin_hostmem_AWREADY)) | ((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_reg_ioackin_hostmem_AWREADY) & (hostmem_BVALID == 1'b1)))) begin
        hostmem_AWVALID = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_AWVALID = grp_tau_rand_fu_604_m_axi_state_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_AWVALID = grp_rejection_sample_fu_595_m_axi_rng_state_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_AWVALID = grp_build_candidates_fu_566_m_axi_rng_state_AWVALID;
    end else begin
        hostmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == hostmem_BVALID))) | ((1'b1 == ap_CS_fsm_state57) & (hostmem_BVALID == 1'b1)))) begin
        hostmem_BREADY = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_BREADY = grp_tau_rand_fu_604_m_axi_state_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_BREADY = grp_rejection_sample_fu_595_m_axi_rng_state_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_BREADY = grp_build_candidates_fu_566_m_axi_rng_state_BREADY;
    end else begin
        hostmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond9_reg_1162) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        hostmem_RREADY = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_RREADY = grp_tau_rand_fu_604_m_axi_state_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_RREADY = grp_rejection_sample_fu_595_m_axi_rng_state_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_RREADY = grp_build_candidates_fu_566_m_axi_rng_state_RREADY;
    end else begin
        hostmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0) & (1'b0 == ap_reg_ioackin_hostmem_WREADY) & (ap_block_pp2_stage0_flag00001001 == 1'b0))) begin
        hostmem_WDATA = result_dist_load_reg_1436;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403) & (ap_block_pp1_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_hostmem_WREADY))) begin
        hostmem_WDATA = result_index_load_reg_1417;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_WDATA = grp_tau_rand_fu_604_m_axi_state_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_WDATA = grp_rejection_sample_fu_595_m_axi_rng_state_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_WDATA = grp_build_candidates_fu_566_m_axi_rng_state_WDATA;
    end else begin
        hostmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_WID = grp_tau_rand_fu_604_m_axi_state_WID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_WID = grp_rejection_sample_fu_595_m_axi_rng_state_WID;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_WID = grp_build_candidates_fu_566_m_axi_rng_state_WID;
    end else begin
        hostmem_WID = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_WLAST = grp_tau_rand_fu_604_m_axi_state_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_WLAST = grp_rejection_sample_fu_595_m_axi_rng_state_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_WLAST = grp_build_candidates_fu_566_m_axi_rng_state_WLAST;
    end else begin
        hostmem_WLAST = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403) & (ap_block_pp1_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_hostmem_WREADY)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0) & (1'b0 == ap_reg_ioackin_hostmem_WREADY) & (ap_block_pp2_stage0_flag00001001 == 1'b0)))) begin
        hostmem_WSTRB = 4'd15;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_WSTRB = grp_tau_rand_fu_604_m_axi_state_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_WSTRB = grp_rejection_sample_fu_595_m_axi_rng_state_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_WSTRB = grp_build_candidates_fu_566_m_axi_rng_state_WSTRB;
    end else begin
        hostmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_WUSER = grp_tau_rand_fu_604_m_axi_state_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_WUSER = grp_rejection_sample_fu_595_m_axi_rng_state_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_WUSER = grp_build_candidates_fu_566_m_axi_rng_state_WUSER;
    end else begin
        hostmem_WUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403) & (ap_block_pp1_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_hostmem_WREADY)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0) & (1'b0 == ap_reg_ioackin_hostmem_WREADY) & (ap_block_pp2_stage0_flag00001001 == 1'b0)))) begin
        hostmem_WVALID = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state32) & (1'd0 == grp_fu_637_p3)) | ((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_16_reg_1350)))) begin
        hostmem_WVALID = grp_tau_rand_fu_604_m_axi_state_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond6_fu_805_p2)))) begin
        hostmem_WVALID = grp_rejection_sample_fu_595_m_axi_rng_state_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond4_fu_935_p2)))) begin
        hostmem_WVALID = grp_build_candidates_fu_566_m_axi_rng_state_WVALID;
    end else begin
        hostmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        hostmem_blk_n_AR = m_axi_hostmem_ARREADY;
    end else begin
        hostmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state41))) begin
        hostmem_blk_n_AW = m_axi_hostmem_AWREADY;
    end else begin
        hostmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state57))) begin
        hostmem_blk_n_B = m_axi_hostmem_BVALID;
    end else begin
        hostmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == exitcond9_reg_1162))) begin
        hostmem_blk_n_R = m_axi_hostmem_RVALID;
    end else begin
        hostmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0)) | ((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403)))) begin
        hostmem_blk_n_W = m_axi_hostmem_WREADY;
    end else begin
        hostmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        indices_address0 = indices_addr_reg_1228;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        indices_address0 = tmp_25_fu_846_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        indices_address0 = grp_rejection_sample_fu_595_result_address0;
    end else begin
        indices_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((grp_heap_push_fu_622_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)))) begin
        indices_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        indices_ce0 = grp_rejection_sample_fu_595_result_ce0;
    end else begin
        indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indices_we0 = grp_rejection_sample_fu_595_result_we0;
    end else begin
        indices_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == exitcond9_reg_1162))) begin
        indvar_phi_fu_413_p4 = indvar_next_reg_1166;
    end else begin
        indvar_phi_fu_413_p4 = indvar_reg_409;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        result_dist_address0 = tmp_33_fu_1119_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        result_dist_address0 = grp_deheap_sort_fu_583_result_dist_address0;
    end else begin
        result_dist_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        result_dist_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        result_dist_ce0 = grp_deheap_sort_fu_583_result_dist_ce0;
    end else begin
        result_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        result_dist_we0 = grp_deheap_sort_fu_583_result_dist_we0;
    end else begin
        result_dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        result_index_address0 = tmp_30_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        result_index_address0 = grp_deheap_sort_fu_583_result_index_address0;
    end else begin
        result_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        result_index_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        result_index_ce0 = grp_deheap_sort_fu_583_result_index_ce0;
    end else begin
        result_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        result_index_we0 = grp_deheap_sort_fu_583_result_index_we0;
    end else begin
        result_index_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (ap_sig_ioackin_hostmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond9_fu_719_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond9_fu_719_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_fu_736_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == exitcond7_fu_768_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond6_fu_805_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_rejection_sample_fu_595_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond5_fu_834_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (exitcond_i_fu_869_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_heap_push_fu_622_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (grp_heap_push_fu_622_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond4_fu_935_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond3_fu_967_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (grp_build_candidates_fu_566_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond2_fu_1000_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (1'd1 == exitcond1_fu_1042_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (ap_block_state33_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & ((1'd1 == tmp_16_reg_1350) | (1'd0 == tmp_22_reg_1354) | (1'd1 == exitcond_fu_1068_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (1'd1 == grp_fu_637_p3))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & ((1'd1 == tmp_17_reg_1386) | ((1'd1 == grp_fu_645_p2) & (1'd1 == tmp_36_reg_1390))))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (grp_heap_push_opt_fu_611_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (ap_block_state40_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == grp_deheap_sort_fu_583_ap_done)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond10_fu_1090_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond10_fu_1090_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == ap_sig_ioackin_hostmem_AWREADY) | (1'b0 == hostmem_BVALID)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond11_fu_1107_p2) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond11_fu_1107_p2) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (hostmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond9_reg_1162) & (1'b0 == hostmem_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond9_reg_1162) & (1'b0 == hostmem_RVALID));
end

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00001001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_flag00011001 = ((1'b1 == ap_enable_reg_pp1_iter2) & (1'b1 == ap_block_state44_io));
end

always @ (*) begin
    ap_block_pp1_stage0_flag00011011 = ((1'b1 == ap_enable_reg_pp1_iter2) & (1'b1 == ap_block_state44_io));
end

assign ap_block_pp2_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00001001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_flag00011001 = ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b1 == ap_block_state52_io));
end

always @ (*) begin
    ap_block_pp2_stage0_flag00011011 = ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b1 == ap_block_state52_io));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((1'd0 == exitcond9_reg_1162) & (1'b0 == hostmem_RVALID));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_on_subcall_done = ((1'b0 == grp_tau_rand_fu_604_ap_done) & (1'd0 == tmp_16_reg_1350));
end

always @ (*) begin
    ap_block_state40_on_subcall_done = ((1'b0 == grp_heap_push_opt_fu_611_ap_done) & (1'b1 == ap_predicate_op280_call_state40));
end

assign ap_block_state42_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_io = ((1'd0 == ap_reg_pp1_iter1_exitcond10_reg_1403) & (1'b0 == ap_sig_ioackin_hostmem_WREADY));
end

assign ap_block_state44_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state52_io = ((ap_reg_pp2_iter1_exitcond11_reg_1422 == 1'd0) & (1'b0 == ap_sig_ioackin_hostmem_WREADY));
end

assign ap_block_state52_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_predicate_op280_call_state40 = (((1'd0 == tmp_17_reg_1386) & (1'd0 == tmp_36_reg_1390)) | ((1'd0 == tmp_17_reg_1386) & (1'd0 == tmp_37_reg_1399)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_address1 = sum3_i_cast_fu_900_p1;

assign exitcond10_fu_1090_p2 = ((indvar1_reg_544 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond11_fu_1107_p2 = ((indvar2_reg_555 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond1_fu_1042_p2 = ((j3_reg_522 == 5'd20) ? 1'b1 : 1'b0);

assign exitcond2_fu_1000_p2 = ((i2_reg_511 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond3_fu_967_p2 = ((i_neighbor1_reg_500 == 5'd20) ? 1'b1 : 1'b0);

assign exitcond4_fu_935_p2 = ((n_point_reg_489 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond5_fu_834_p2 = ((j_reg_455 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond6_fu_805_p2 = ((i_reg_443 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond7_fu_768_p2 = ((i_neighbor_reg_432 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond8_fu_736_p2 = ((n_points_reg_421 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond9_fu_719_p2 = ((indvar_phi_fu_413_p4 == 9'd300) ? 1'b1 : 1'b0);

assign exitcond_fu_1068_p2 = ((k_reg_533 == 5'd20) ? 1'b1 : 1'b0);

assign exitcond_i_fu_869_p2 = ((i_i_reg_478 == 2'd3) ? 1'b1 : 1'b0);

assign extLd23_cast_fu_851_p1 = $signed(indices_q0);

assign extLd_cast_fu_925_p1 = $signed(indices_q0);

assign grp_build_candidates_fu_566_ap_start = ap_reg_grp_build_candidates_fu_566_ap_start;

assign grp_deheap_sort_fu_583_ap_start = ap_reg_grp_deheap_sort_fu_583_ap_start;

assign grp_fu_637_p3 = candidate_neighbors_s_q0[32'd31];

assign grp_fu_645_p2 = ((candidate_neighbors_2_q0 == 32'd0) ? 1'b1 : 1'b0);

assign grp_heap_push_fu_622_ap_start = ap_reg_grp_heap_push_fu_622_ap_start;

assign grp_heap_push_opt_fu_611_ap_start = ap_reg_grp_heap_push_opt_fu_611_ap_start;

assign grp_rejection_sample_fu_595_ap_start = ap_reg_grp_rejection_sample_fu_595_ap_start;

assign grp_tau_rand_fu_604_ap_start = ap_reg_grp_tau_rand_fu_604_ap_start;

assign i_2_fu_811_p2 = (i_reg_443 + 7'd1);

assign i_3_fu_1006_p2 = (i2_reg_511 + 7'd1);

assign i_4_fu_875_p2 = (i_i_reg_478 + 2'd1);

assign i_cast1_fu_801_p1 = i_reg_443;

assign i_cast_cast1_fu_905_p1 = i_reg_443;

assign i_cast_cast_fu_930_p1 = i_reg_443;

assign i_neighbor1_cast9_fu_963_p1 = i_neighbor1_reg_500;

assign i_neighbor_1_fu_774_p2 = (i_neighbor_reg_432 + 4'd1);

assign i_neighbor_2_fu_973_p2 = (i_neighbor1_reg_500 + 5'd1);

assign i_neighbor_cast_fu_764_p1 = i_neighbor_reg_432;

assign indvar_next1_fu_1096_p2 = (indvar1_reg_544 + 10'd1);

assign indvar_next2_fu_1113_p2 = (indvar2_reg_555 + 10'd1);

assign indvar_next_fu_725_p2 = (indvar_phi_fu_413_p4 + 9'd1);

assign j3_cast6_fu_1038_p1 = j3_reg_522;

assign j_1_fu_840_p2 = (j_reg_455 + 4'd1);

assign j_2_fu_1048_p2 = (j3_reg_522 + 5'd1);

assign k_2_fu_1074_p2 = (k_reg_533 + 5'd1);

assign k_cast5_fu_1064_p1 = k_reg_533;

assign n_point_1_fu_941_p2 = (n_point_reg_489 + 7'd1);

assign n_points_1_fu_742_p2 = (n_points_reg_421 + 7'd1);

assign p_shl2_cast_fu_825_p1 = p_shl2_fu_817_p3;

assign p_shl2_fu_817_p3 = {{i_reg_443}, {2'd0}};

assign p_shl3_fu_947_p3 = {{n_point_reg_489}, {4'd0}};

assign p_shl4_fu_955_p3 = {{n_point_reg_489}, {2'd0}};

assign p_shl5_fu_855_p3 = {{indices_q0}, {2'd0}};

assign p_shl6_fu_1012_p3 = {{i2_reg_511}, {4'd0}};

assign p_shl7_cast_fu_1028_p1 = p_shl7_fu_1020_p3;

assign p_shl7_fu_1020_p3 = {{i2_reg_511}, {2'd0}};

assign p_shl9_fu_756_p3 = {{n_points_reg_421}, {1'd0}};

assign p_shl_fu_748_p3 = {{n_points_reg_421}, {3'd0}};

assign result_1_fu_920_p2 = (tmp_126_i_reg_1272 + d_reg_466);

assign sum3_i_cast_fu_900_p1 = $signed(sum3_i_fu_895_p2);

assign sum3_i_fu_895_p2 = (tmp_i_cast_fu_881_p1 + tmp_26_reg_1238);

assign sum_i_cast_fu_890_p1 = sum_i_fu_885_p2;

assign sum_i_fu_885_p2 = (tmp_i_cast_fu_881_p1 + tmp_s_reg_1215);

assign tmp1_cast_fu_785_p1 = tmp1_fu_780_p2;

assign tmp1_fu_780_p2 = (p_shl9_reg_1189 + i_neighbor_cast_fu_764_p1);

assign tmp2_cast_fu_984_p1 = tmp2_fu_979_p2;

assign tmp2_fu_979_p2 = (p_shl4_reg_1305 + i_neighbor1_cast9_fu_963_p1);

assign tmp_18_fu_701_p1 = result_out_dist7_reg_1124;

assign tmp_19_fu_710_p1 = result_out_index5_reg_1129;

assign tmp_21_fu_691_p1 = data_in1_reg_1141;

assign tmp_23_fu_789_p2 = (tmp1_cast_fu_785_p1 + p_shl_reg_1184);

assign tmp_24_fu_794_p1 = tmp_23_fu_789_p2;

assign tmp_25_fu_846_p1 = j_reg_455;

assign tmp_26_fu_863_p2 = ($signed(p_shl5_fu_855_p3) - $signed(extLd23_cast_fu_851_p1));

assign tmp_27_fu_1032_p2 = (p_shl7_cast_fu_1028_p1 + p_shl6_fu_1012_p3);

assign tmp_28_fu_988_p2 = (tmp2_cast_fu_984_p1 + p_shl3_reg_1300);

assign tmp_29_fu_993_p1 = tmp_28_fu_988_p2;

assign tmp_30_fu_1102_p1 = indvar1_reg_544;

assign tmp_31_fu_1054_p2 = (tmp_27_reg_1326 + j3_cast6_fu_1038_p1);

assign tmp_32_fu_1059_p1 = tmp_31_fu_1054_p2;

assign tmp_33_fu_1119_p1 = indvar2_reg_555;

assign tmp_34_fu_1080_p2 = (tmp_27_reg_1326 + k_cast5_fu_1064_p1);

assign tmp_35_fu_1085_p1 = tmp_34_fu_1080_p2;

assign tmp_fu_731_p1 = ap_reg_pp0_iter1_indvar_reg_409;

assign tmp_i_cast_fu_881_p1 = i_i_reg_478;

assign tmp_i_fu_910_p2 = (data_q0 - data_q1);

assign tmp_s_fu_829_p2 = (p_shl2_cast_fu_825_p1 - i_cast1_reg_1202);

always @ (posedge ap_clk) begin
    hostmem_addr_reg_1152[31:30] <= 2'b00;
    hostmem_addr_1_reg_1157[31:30] <= 2'b00;
    p_shl_reg_1184[2:0] <= 3'b000;
    p_shl9_reg_1189[0] <= 1'b0;
    i_cast1_reg_1202[9:7] <= 3'b000;
    i_cast_cast1_reg_1261[8:7] <= 2'b00;
    i_cast_cast_reg_1287[7] <= 1'b0;
    p_shl3_reg_1300[3:0] <= 4'b0000;
    p_shl4_reg_1305[1:0] <= 2'b00;
    tmp_27_reg_1326[1:0] <= 2'b00;
    tmp_32_reg_1340[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp_35_reg_1371[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //nn_descent
