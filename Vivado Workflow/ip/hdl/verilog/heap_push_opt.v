// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module heap_push_opt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        current_graph_index_address0,
        current_graph_index_ce0,
        current_graph_index_we0,
        current_graph_index_d0,
        current_graph_index_q0,
        current_graph_index_address1,
        current_graph_index_ce1,
        current_graph_index_we1,
        current_graph_index_d1,
        current_graph_index_q1,
        current_graph_dist_address0,
        current_graph_dist_ce0,
        current_graph_dist_we0,
        current_graph_dist_d0,
        current_graph_dist_q0,
        current_graph_dist_address1,
        current_graph_dist_ce1,
        current_graph_dist_we1,
        current_graph_dist_d1,
        current_graph_dist_q1,
        current_graph_flag_address0,
        current_graph_flag_ce0,
        current_graph_flag_we0,
        current_graph_flag_d0,
        current_graph_flag_q0,
        current_graph_flag_address1,
        current_graph_flag_ce1,
        current_graph_flag_we1,
        current_graph_flag_d1,
        current_graph_flag_q1,
        row
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] current_graph_index_address0;
output   current_graph_index_ce0;
output   current_graph_index_we0;
output  [31:0] current_graph_index_d0;
input  [31:0] current_graph_index_q0;
output  [9:0] current_graph_index_address1;
output   current_graph_index_ce1;
output   current_graph_index_we1;
output  [31:0] current_graph_index_d1;
input  [31:0] current_graph_index_q1;
output  [9:0] current_graph_dist_address0;
output   current_graph_dist_ce0;
output   current_graph_dist_we0;
output  [31:0] current_graph_dist_d0;
input  [31:0] current_graph_dist_q0;
output  [9:0] current_graph_dist_address1;
output   current_graph_dist_ce1;
output   current_graph_dist_we1;
output  [31:0] current_graph_dist_d1;
input  [31:0] current_graph_dist_q1;
output  [9:0] current_graph_flag_address0;
output   current_graph_flag_ce0;
output   current_graph_flag_we0;
output  [31:0] current_graph_flag_d0;
input  [31:0] current_graph_flag_q0;
output  [9:0] current_graph_flag_address1;
output   current_graph_flag_ce1;
output   current_graph_flag_we1;
output  [31:0] current_graph_flag_d1;
input  [31:0] current_graph_flag_q1;
input  [31:0] row;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] current_graph_index_address0;
reg current_graph_index_ce0;
reg current_graph_index_we0;
reg current_graph_index_ce1;
reg current_graph_index_we1;
reg[9:0] current_graph_dist_address0;
reg current_graph_dist_ce0;
reg current_graph_dist_we0;
reg[9:0] current_graph_dist_address1;
reg current_graph_dist_ce1;
reg current_graph_dist_we1;
reg[9:0] current_graph_flag_address0;
reg current_graph_flag_ce0;
reg current_graph_flag_we0;
reg current_graph_flag_ce1;
reg current_graph_flag_we1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_172;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire   [31:0] tmp_fu_191_p2;
reg   [31:0] tmp_reg_358;
wire   [1:0] i_4_fu_203_p2;
reg   [1:0] i_4_reg_369;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_fu_197_p2;
reg   [9:0] current_graph_dist_a_2_reg_384;
reg   [9:0] current_graph_index_1_reg_389;
reg   [9:0] current_graph_flag_a_1_reg_394;
wire   [0:0] tmp_46_fu_259_p2;
reg   [0:0] tmp_46_reg_399;
wire   [0:0] tmp_47_fu_265_p2;
reg   [0:0] tmp_47_reg_404;
wire   [0:0] sel_tmp1_fu_277_p2;
reg   [0:0] sel_tmp1_reg_409;
wire   [31:0] idx1_4_fu_305_p3;
reg   [31:0] idx1_4_reg_416;
wire    ap_CS_fsm_state5;
wire   [31:0] current_son_fu_334_p2;
reg   [31:0] current_son_reg_421;
wire   [31:0] current_daughter_fu_340_p2;
reg   [31:0] current_daughter_reg_426;
reg   [9:0] current_graph_index_s_reg_431;
reg   [9:0] current_graph_dist_a_3_reg_436;
reg   [9:0] current_graph_flag_a_reg_442;
reg   [31:0] temp_reg_447;
reg   [31:0] temp_2_reg_452;
reg   [31:0] idx2_reg_125;
wire    ap_CS_fsm_state7;
reg   [31:0] current_element_reg_137;
reg   [31:0] current_element_1_reg_149;
reg   [1:0] i_reg_161;
wire  signed [63:0] tmp_39_fu_214_p1;
wire  signed [63:0] tmp_41_fu_224_p1;
wire  signed [63:0] tmp_44_fu_234_p1;
wire  signed [63:0] tmp_49_fu_351_p1;
wire   [31:0] tmp_18_fu_179_p2;
wire   [31:0] tmp_19_fu_185_p2;
wire   [31:0] tmp_38_fu_209_p2;
wire   [31:0] tmp_40_fu_219_p2;
wire   [31:0] tmp_43_fu_229_p2;
wire   [0:0] tmp_42_fu_247_p2;
wire   [0:0] tmp_45_fu_253_p2;
wire   [0:0] tmp1_fu_271_p2;
wire   [0:0] tmp_s_fu_241_p2;
wire   [0:0] sel_tmp8_fu_290_p2;
wire   [0:0] tmp2_fu_295_p2;
wire   [0:0] sel_tmp9_fu_300_p2;
wire   [31:0] idx1_fu_283_p3;
wire   [31:0] idx1_5_fu_313_p3;
wire   [31:0] tmp_20_fu_328_p2;
wire   [31:0] idx1_2_fu_320_p3;
wire   [31:0] tmp_48_fu_346_p2;
reg   [6:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                current_element_1_reg_149[1] <= 1'b1;
        current_element_1_reg_149[2] <= 1'b0;
        current_element_1_reg_149[3] <= 1'b0;
        current_element_1_reg_149[4] <= 1'b0;
        current_element_1_reg_149[5] <= 1'b0;
        current_element_1_reg_149[6] <= 1'b0;
        current_element_1_reg_149[7] <= 1'b0;
        current_element_1_reg_149[8] <= 1'b0;
        current_element_1_reg_149[9] <= 1'b0;
        current_element_1_reg_149[10] <= 1'b0;
        current_element_1_reg_149[11] <= 1'b0;
        current_element_1_reg_149[12] <= 1'b0;
        current_element_1_reg_149[13] <= 1'b0;
        current_element_1_reg_149[14] <= 1'b0;
        current_element_1_reg_149[15] <= 1'b0;
        current_element_1_reg_149[16] <= 1'b0;
        current_element_1_reg_149[17] <= 1'b0;
        current_element_1_reg_149[18] <= 1'b0;
        current_element_1_reg_149[19] <= 1'b0;
        current_element_1_reg_149[20] <= 1'b0;
        current_element_1_reg_149[21] <= 1'b0;
        current_element_1_reg_149[22] <= 1'b0;
        current_element_1_reg_149[23] <= 1'b0;
        current_element_1_reg_149[24] <= 1'b0;
        current_element_1_reg_149[25] <= 1'b0;
        current_element_1_reg_149[26] <= 1'b0;
        current_element_1_reg_149[27] <= 1'b0;
        current_element_1_reg_149[28] <= 1'b0;
        current_element_1_reg_149[29] <= 1'b0;
        current_element_1_reg_149[30] <= 1'b0;
        current_element_1_reg_149[31] <= 1'b0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
                current_element_1_reg_149[31 : 1] <= current_daughter_reg_426[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                current_element_reg_137[1] <= 1'b0;
        current_element_reg_137[2] <= 1'b0;
        current_element_reg_137[3] <= 1'b0;
        current_element_reg_137[4] <= 1'b0;
        current_element_reg_137[5] <= 1'b0;
        current_element_reg_137[6] <= 1'b0;
        current_element_reg_137[7] <= 1'b0;
        current_element_reg_137[8] <= 1'b0;
        current_element_reg_137[9] <= 1'b0;
        current_element_reg_137[10] <= 1'b0;
        current_element_reg_137[11] <= 1'b0;
        current_element_reg_137[12] <= 1'b0;
        current_element_reg_137[13] <= 1'b0;
        current_element_reg_137[14] <= 1'b0;
        current_element_reg_137[15] <= 1'b0;
        current_element_reg_137[16] <= 1'b0;
        current_element_reg_137[17] <= 1'b0;
        current_element_reg_137[18] <= 1'b0;
        current_element_reg_137[19] <= 1'b0;
        current_element_reg_137[20] <= 1'b0;
        current_element_reg_137[21] <= 1'b0;
        current_element_reg_137[22] <= 1'b0;
        current_element_reg_137[23] <= 1'b0;
        current_element_reg_137[24] <= 1'b0;
        current_element_reg_137[25] <= 1'b0;
        current_element_reg_137[26] <= 1'b0;
        current_element_reg_137[27] <= 1'b0;
        current_element_reg_137[28] <= 1'b0;
        current_element_reg_137[29] <= 1'b0;
        current_element_reg_137[30] <= 1'b0;
        current_element_reg_137[31] <= 1'b0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
                current_element_reg_137[31 : 1] <= current_son_reg_421[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_161 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_reg_161 <= i_4_reg_369;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        idx2_reg_125 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        idx2_reg_125 <= idx1_4_reg_416;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_172 <= current_graph_dist_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_172 <= current_graph_dist_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        current_daughter_reg_426[31 : 1] <= current_daughter_fu_340_p2[31 : 1];
        current_graph_dist_a_3_reg_436 <= tmp_49_fu_351_p1;
        current_graph_flag_a_reg_442 <= tmp_49_fu_351_p1;
        current_graph_index_s_reg_431 <= tmp_49_fu_351_p1;
        current_son_reg_421[31 : 1] <= current_son_fu_334_p2[31 : 1];
        idx1_4_reg_416 <= idx1_4_fu_305_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_dist_a_2_reg_384 <= tmp_44_fu_234_p1;
        current_graph_flag_a_1_reg_394 <= tmp_44_fu_234_p1;
        current_graph_index_1_reg_389 <= tmp_44_fu_234_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_4_reg_369 <= i_4_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sel_tmp1_reg_409 <= sel_tmp1_fu_277_p2;
        tmp_46_reg_399 <= tmp_46_fu_259_p2;
        tmp_47_reg_404 <= tmp_47_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_2_reg_452 <= current_graph_flag_q0;
        temp_reg_447 <= current_graph_index_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_358[31 : 1] <= tmp_fu_191_p2[31 : 1];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_197_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_197_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_dist_address0 = current_graph_dist_a_3_reg_436;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_dist_address0 = tmp_41_fu_224_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        current_graph_dist_address0 = tmp_39_fu_214_p1;
    end else begin
        current_graph_dist_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_dist_address1 = current_graph_dist_a_2_reg_384;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_dist_address1 = tmp_49_fu_351_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_graph_dist_address1 = tmp_44_fu_234_p1;
    end else begin
        current_graph_dist_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        current_graph_dist_ce0 = 1'b1;
    end else begin
        current_graph_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        current_graph_dist_ce1 = 1'b1;
    end else begin
        current_graph_dist_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_dist_we0 = 1'b1;
    end else begin
        current_graph_dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_dist_we1 = 1'b1;
    end else begin
        current_graph_dist_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_flag_address0 = current_graph_flag_a_reg_442;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_flag_address0 = tmp_49_fu_351_p1;
    end else begin
        current_graph_flag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        current_graph_flag_ce0 = 1'b1;
    end else begin
        current_graph_flag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        current_graph_flag_ce1 = 1'b1;
    end else begin
        current_graph_flag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_flag_we0 = 1'b1;
    end else begin
        current_graph_flag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_flag_we1 = 1'b1;
    end else begin
        current_graph_flag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_index_address0 = current_graph_index_s_reg_431;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        current_graph_index_address0 = tmp_49_fu_351_p1;
    end else begin
        current_graph_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        current_graph_index_ce0 = 1'b1;
    end else begin
        current_graph_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        current_graph_index_ce1 = 1'b1;
    end else begin
        current_graph_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        current_graph_index_we0 = 1'b1;
    end else begin
        current_graph_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        current_graph_index_we1 = 1'b1;
    end else begin
        current_graph_index_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_197_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign current_daughter_fu_340_p2 = (32'd1 + current_son_fu_334_p2);

assign current_graph_dist_d0 = reg_172;

assign current_graph_dist_d1 = reg_172;

assign current_graph_flag_address1 = current_graph_flag_a_1_reg_394;

assign current_graph_flag_d0 = current_graph_flag_q1;

assign current_graph_flag_d1 = temp_2_reg_452;

assign current_graph_index_address1 = current_graph_index_1_reg_389;

assign current_graph_index_d0 = current_graph_index_q1;

assign current_graph_index_d1 = temp_reg_447;

assign current_son_fu_334_p2 = (tmp_20_fu_328_p2 | 32'd1);

assign exitcond_fu_197_p2 = ((i_reg_161 == 2'd3) ? 1'b1 : 1'b0);

assign i_4_fu_203_p2 = (i_reg_161 + 2'd1);

assign idx1_2_fu_320_p3 = ((sel_tmp9_fu_300_p2[0:0] === 1'b1) ? current_element_reg_137 : idx1_5_fu_313_p3);

assign idx1_4_fu_305_p3 = ((sel_tmp9_fu_300_p2[0:0] === 1'b1) ? current_element_reg_137 : idx1_fu_283_p3);

assign idx1_5_fu_313_p3 = ((sel_tmp1_reg_409[0:0] === 1'b1) ? current_element_1_reg_149 : idx2_reg_125);

assign idx1_fu_283_p3 = ((sel_tmp1_reg_409[0:0] === 1'b1) ? current_element_1_reg_149 : current_element_reg_137);

assign sel_tmp1_fu_277_p2 = (tmp1_fu_271_p2 & tmp_s_fu_241_p2);

assign sel_tmp8_fu_290_p2 = (sel_tmp1_reg_409 ^ 1'd1);

assign sel_tmp9_fu_300_p2 = (tmp2_fu_295_p2 & tmp_46_reg_399);

assign tmp1_fu_271_p2 = (tmp_42_fu_247_p2 & tmp_45_fu_253_p2);

assign tmp2_fu_295_p2 = (tmp_47_reg_404 & sel_tmp8_fu_290_p2);

assign tmp_18_fu_179_p2 = row << 32'd3;

assign tmp_19_fu_185_p2 = row << 32'd1;

assign tmp_20_fu_328_p2 = idx1_4_fu_305_p3 << 32'd1;

assign tmp_38_fu_209_p2 = (current_element_1_reg_149 + tmp_reg_358);

assign tmp_39_fu_214_p1 = $signed(tmp_38_fu_209_p2);

assign tmp_40_fu_219_p2 = (current_element_reg_137 + tmp_reg_358);

assign tmp_41_fu_224_p1 = $signed(tmp_40_fu_219_p2);

assign tmp_42_fu_247_p2 = (($signed(reg_172) > $signed(current_graph_dist_q0)) ? 1'b1 : 1'b0);

assign tmp_43_fu_229_p2 = (idx2_reg_125 + tmp_reg_358);

assign tmp_44_fu_234_p1 = $signed(tmp_43_fu_229_p2);

assign tmp_45_fu_253_p2 = (($signed(reg_172) > $signed(current_graph_dist_q1)) ? 1'b1 : 1'b0);

assign tmp_46_fu_259_p2 = (($signed(current_element_reg_137) < $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_47_fu_265_p2 = (($signed(current_graph_dist_q0) > $signed(current_graph_dist_q1)) ? 1'b1 : 1'b0);

assign tmp_48_fu_346_p2 = (idx1_2_fu_320_p3 + tmp_reg_358);

assign tmp_49_fu_351_p1 = $signed(tmp_48_fu_346_p2);

assign tmp_fu_191_p2 = (tmp_18_fu_179_p2 + tmp_19_fu_185_p2);

assign tmp_s_fu_241_p2 = (($signed(current_element_1_reg_149) < $signed(32'd10)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_reg_358[0] <= 1'b0;
    current_son_reg_421[0] <= 1'b1;
    current_daughter_reg_426[0] <= 1'b0;
    current_element_reg_137[0] <= 1'b1;
    current_element_1_reg_149[0] <= 1'b0;
end

endmodule //heap_push_opt
